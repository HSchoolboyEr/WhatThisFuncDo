<unk>
mov
qword
ADDR
+
rax
ADDR]
rdi
[varFCN]
lea
call
rbp
rdx
je
cmp
FCN
r12
rbx
[rax
rsi
dword
byte
[ADDR]
eax
test
pop
add
r13
jmp
rcx
nop
push
[argFCN]
[rax]
xmm0
[rbx
jne
r14
8]
1
sub
xmmword
[rdi
0
al
r15
-
edx
rsp
rax]
[r12
esi
[rdx
r8
movups
movzx
xor
word
xmm1
[rdi]
ecx
movq
[rsp
edi
r9
ret
['push
[rbp]
8
[rsp]
[rcx
[rsi
1]
xmm2
[r13
and
lock
ja
[r12]
[r15
[r14
movdqu
st(1)
[rbx]
punpcklqdq
r12d
r8d
fstp
ADDR']
4
fld
2
xmm3
ebx
jbe
movaps
xword
r10
dl
r13d
xmm4
cl
[rsi]
ebp
r14d
3
st(0)
[rdx]
movabs
[r8
xmm5
or
[rbp
sar
pxor
movdqa
.text
cs:[rax
shr
sil
ret']
xmm6
pthreadFCN
r11
r15d
[r13]
movsd
xmm7
st(2)
fxch
4]
r9d
shl
LOC
js
[rcx]
jae
FCN']
movsx
jle
movsxd
jb
imul
['mov
r10d
[r14]
[r9
[r15]
sete
r12b
movapd
bl
jg
5
dil
['lea
fmul
7
r13b
ax
2]
9
methodMETHOD
r8b
bpl
r11d
r10b
mulsd
memcpy
jl
st(3)
cmovbe
rax*4]
[r10
.bss
6
faddp
[r8]
setne
jns
xadd
rdx]
memcmp
r14b
fldz
jp
cmovne
shufpd
dx
comisd
mul
xmm10
cmove
xmm8
r9b
ucomisd
fcomi
addsd
rcx]
strcmp
r15b
xmm11
jge
fcompi
fmulp
strlen
xmm9
invalid
por
['test
xmm15
fld1
rax*2]
nop']
ah
movss
fucompi
st(4)
fucomi
not
[r11
[r9]
movhps
['sub
subsd
r11b
cx
rdx*4]
divsd
fabs
3]
xmm12
setae
setb
xmm13
seta
close
memmove
xmm14
rax*8]
andpd
fadd
rbx]
r12]
[r10]
['cmp
setbe
fldcw
ymm0
[rax*4
rax]']
si
vmovdqa
r13]
ymmword
neg
fsubp
fsub
[rax]']
cdqe
wcslen
r14]
rdx*8]
rep
rsi]
comiss
cvtsi2sd
movd
sbb
fsqrt
jnp
fdiv
di
rdi]
cmova
['movabs
setg
xchg
st(5)
9]
fchs
ucomiss
rbp]
ymm1
bh
rdx*2]
FCN.isra.0
rax*8
wmemcmp
cmovae
[r11]
pshufb
punpcklwd
6]
rcx*4]
rsi*4]
sqrtsd
cmpxchg
div
setnp
5]
fdivp
pand
punpcklbw
tolower
fild
cmovb
fsubrp
isspace
symMETHOD
punpckhwd
setp
fdivrp
fnstcw
7]
inc
cvtss2sd
sym.FCN
cmovg
iswspace
dh
pcmpeqb
rdx*8
free
punpckhbw
schedFCN
cvttsd2si
fs:[0]
movsq
stosq
towlower
vpshufb
r8w
['call
[rax*8
fldpi
idiv
memset
sqrtl
rcx*2]
ymm2
ymm5
pmaxub
[FCN]
r15]
wmemcpy
r8]
rcx*8]
rsi*2]
frndint
r13*4]
ymm6
punpckldq
r13w
r9]
rcx*8
vpmovzxbd
andps
r9w
ymm3
r10w
rax*4
ch
ror
ymm7
memchr
outsd
rax']
al']
cqo
ymm4
fdivr
iconvFCN
insb
iswdigit
rax*2
[rcx*8]
r10]
tzcnt
vpmaxub
rsi*8]
sprintf
xorpd
[rax*8]
jo
rol
fistp
ispunct
pcmpeqq
strerrorFCN
sysconf
[rax*4]
r11w
sqrt
r14*4]
shufps
subss
fsubr
orpd
andnpd
cmpnlesd
fst
pcmpeqd
r8*2]
rdi*2]
setle
cdq
cvtsd2ss
r8*8]
rdi*8]
rdx*2
st(6)
logl
vextracti128
adc
bts
cmovs
r12*4]
rbx*4]
setl
r13*8]
rbx*2]
vpand
['movzx
dlmalloc
iswlower
mspaceFCN
pshufd
rbp*4]
rbx*8]
vpunpckhqdq
.data.rel.ro
['pxor
bp
iswprint
iswupper
munmap
sym.initFCN
cmovle
cvttss2si
esp
iswalpha
outsb
strncpy
['xor
bsr
bx
gmtimeFCN
islower
iswxdigit
r13*2]
vsnprintf
bt
isalpha
isprint
iswcntrl
iswpunct
isxdigit
maxsd
pmovmskb
rsi*8
['add
iconv
log
palignr
psrlw
r12w
r9*8]
statx
iscntrl
isupper
malloc
nlFCN
r12*8]
r15*4]
sinl
str.FCN
syscall
times
['and
[r8*8]
[rdx*4
closedir
pause
r8*8
sigaction
str.LFCN
vzeroall
write
andnps
bswap
cmpnless
cvtsi2ss
fcmovbe
fcmovnbe
orps
r8*4]
rcx*2
str.H9FCN
[rdx*8]
btc
cosl
dec
leave
log1pl
ontopFCN
pthreadFCN']
r10*4]
rbp*2]
rbp*8]
shrd
toupper
['lock
addss
cmovns
rdi*8
snprintf
sym.sysFCN
vpalignr
vpsrlw
vpunpckhbw
vpunpcklbw
cmovge
cmovl
cmpsb
exp
gettimeofday
lseek64
r12*2]
r14*8]
r14w
rdi*4]
rdx*4
repe
repne
scasb
wmemchr
.bss']
epollFCN
jumpFCN
packssdw
r11*2]
r14*4
vmovaps
[rbp*8]
dladdr
localtimeFCN
open
r10*8
r11]
r12*4
rbp*4
rbx*4
rcx*4
strftime
time
['movq
['nop
clockFCN
fcntl
mktime
mulss
r10*8]
r15w
r9*4]
r9*8
rdx']
rsi*2
sincosl
ud2']
[r13*8]
[rcx*4]
[rdx*4]
iswalphaFCN
iswcntrlFCN
iswdigitFCN
iswlowerFCN
iswprintFCN
iswpunctFCN
iswspaceFCN
iswupperFCN
iswxdigitFCN
movmskpd
posixFCN
powl
r13*4
r15*8]
rbp*2
st(7)
str.HFCN
strerror
strtol
strxfrm
sym.FCN']
vpmovzxbw
wait
['movapd
[r10*4]
[r12*4]
[r12*8]
[r13*4]
atanl
bh']
clc
expl
fs:[rcx
isalnum
lddqu
log1p
minsd
out
pcmpgtb
printf
realloc
