push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
mov rax, qword [rdi + 0x20]
mov rbx, qword [rdi + 0x28]
mov r13, qword [rax + 8]
mov r12, qword [rax]
test r13, r13
je 0x8004540
cmp byte [r12], 0x2f
je 0x80044c8
mov rdx, r13
xor r8d, r8d
cmp r13, 1
jbe 0x800449c
cmp r13, rbx
jne 0x800449c
cmp byte [r12 + rbx - 1], 0x2f
lea rcx, [rbx - 1]
jne 0x800449c
mov rax, rcx
jmp 0x800445b
sub rax, 1
cmp byte [r12 + rax], 0x2f
jne 0x8004462
cmp rax, rdx
ja 0x8004450
je 0x800449c
mov rax, qword [rbp]
mov qword [arg_28h], rcx
mov qword [arg_8h], 0
mov byte [rax], 0
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop
lea rax, [rbx - 1]
cmp rdx, rax
je 0x8004550
cmp byte [r12 + rbx - 1], 0x2f
jne 0x8004578
mov rbx, rax
cmp r8, rbx
jb 0x8004480
mov qword [arg_28h], 0
mov rdx, qword [arg_8h]
mov rcx, r12
pop rbx
mov rdi, rbp
xor esi, esi
pop rbp
pop r12
pop r13
pop r14
jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
nop word [rax + rax]
cmp r13, 1
je 0x8004530
cmp byte [r12 + 1], 0x2f
jne 0x80045d0
cmp r13, 2
je 0x80045eb
cmp byte [r12 + 2], 0x2f
je 0x80045d0
lea r14, [r12 + 2]
lea rdx, [r13 - 2]
mov esi, 0x2f
mov rdi, r14
call memchr
mov rdx, rax
test rax, rax
je 0x80045fb
sub rdx, r14
add rdx, 2
cmp r13, rdx
ja 0x80045d2
mov r8, rdx
jmp 0x8004434
nop word [rax + rax]
test rbx, rbx
je 0x80045e3
nop dword [rax]
xor r8d, r8d
xor edx, edx
jmp 0x800449c
nop word [rax + rax]
mov qword [arg_28h], rdx
mov rdx, qword [arg_8h]
mov rdi, rbp
mov ecx, 1
pop rbx
mov r8d, 0x2f
pop rbp
xor esi, esi
pop r12
pop r13
pop r14
jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
nop dword [rax]
mov rax, rbx
nop dword [rax + rax]
mov rdx, rax
sub rax, 1
cmp byte [r12 + rax], 0x2f
lea rcx, [r12 + rax]
je 0x80045b0
cmp r8, rax
jb 0x8004580
sub rbx, rax
mov qword [arg_28h], rax
mov rdx, qword [arg_8h]
mov r8, rbx
jmp 0x80044b0
nop word [rax + rax]
mov rax, rdx
lea rcx, [r12 + rdx]
mov rdx, qword [arg_8h]
sub rbx, rax
mov qword [arg_28h], rax
mov r8, rbx
jmp 0x80044b0
nop word [rax + rax]
xor edx, edx
mov r8, rdx
cmp rbx, rdx
jne 0x8004434
jmp 0x80044a1
xor r8d, r8d
jmp 0x80044a1
mov r8d, 2
mov edx, 2
jmp 0x8004434
mov r8, r13
mov rdx, r13
jmp 0x8004434
