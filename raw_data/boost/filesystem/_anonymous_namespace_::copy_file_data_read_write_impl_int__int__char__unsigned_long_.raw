push r15
push r14
mov r14, rcx
mov ecx, 2
push r13
mov r13d, edi
push r12
mov r12d, esi
xor esi, esi
push rbp
mov rbp, rdx
xor edx, edx
push rbx
sub rsp, 8
call posix_fadvise64
mov rdx, r14
mov rsi, rbp
mov edi, r13d
call read
mov rbx, rax
test rax, rax
je 0x800026b
mov r15d, 0
jns 0x8000218
jmp __errno_location
nop dword [rax + rax]
add r15, rax
cmp rbx, r15
jle 0x80001e8
mov rdx, rbx
lea rsi, [rbp + r15]
mov edi, r12d
sub rdx, r15
call write
test rax, rax
jns 0x8000210
call __errno_location
mov eax, dword [rax]
cmp eax, 4
je 0x8000213
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
call __errno_location
mov eax, dword [rax]
cmp eax, 4
je 0x80001e8
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
xor eax, eax
jmp 0x800023c
