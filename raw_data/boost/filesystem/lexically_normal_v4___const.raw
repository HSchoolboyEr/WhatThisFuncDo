push r15
lea r15, [rdi + 0x10]
push r14
mov r14, rdi
push r13
push r12
push rbp
push rbx
sub rsp, 0x38
mov rbp, qword [rsi + 8]
mov r12, qword [rsi]
mov qword [var_10h], r15
test rbp, rbp
je 0x8002238
cmp byte [r12], 0x2f
je 0x8001f81
mov qword [r14], r15
mov rbx, rbp
mov qword [arg_28h], 0
mov rax, qword [arg_28h]
mov rdi, qword [arg_10h]
mov qword [arg_18h], 0
lea rdx, [rdi + rax]
mov qword [r14 + 8], rax
mov byte [rdx], 0
cmp rbx, rbp
jb 0x8002275
mov rax, qword [arg_18h]
cmp rax, rbp
jae 0x800211f
mov rcx, rax
jmp 0x8001e9d
nop
add rcx, 1
cmp rbp, rcx
je 0x800211f
cmp byte [r12 + rcx], 0x2f
je 0x8001e90
mov rax, qword [r14 + 8]
mov qword [rsp], rax
nop dword [rax]
mov r13, rbp
lea r15, [r12 + rcx]
mov esi, 0x2f
mov qword [arg_8h], rcx
sub r13, rcx
mov rdi, r15
mov rdx, r13
call memchr
mov rcx, qword [arg_8h]
test rax, rax
je 0x8002230
sub rax, r15
mov r13, rax
lea rbx, [rcx + rax]
cmp r13, 1
je 0x8002038
cmp r13, 2
jne 0x8002138
cmp byte [r15], 0x2e
je 0x80021a0
cmp qword [rsp], 0
je 0x8001f35
mov rax, qword [r14]
mov rdi, qword [rsp]
cmp byte [rax + rdi - 1], 0x2f
jne 0x8002155
movabs rax, 0x3fffffffffffffff
sub rax, qword [rsp]
cmp r13, rax
ja .LC8
mov rdx, r13
mov rsi, r15
mov rdi, r14
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
mov rax, qword [r14 + 8]
mov qword [rsp], rax
xor eax, eax
cmp rbp, rbx
je 0x8002050
ja 0x8001f69
jmp 0x8001f79
nop word [rax + rax]
add rbx, 1
cmp rbp, rbx
jbe 0x8001f70
cmp byte [r12 + rbx], 0x2f
je 0x8001f60
cmp rbp, rbx
je 0x80020b0
mov rcx, rbx
jmp 0x8001eb0
cmp rbp, 1
je 0x800201f
cmp byte [r12 + 1], 0x2f
jne 0x800201f
cmp rbp, 2
je 0x80023c3
cmp byte [r12 + 2], 0x2f
je 0x800201f
lea rbx, [r12 + 2]
lea rdx, [var_2h]
mov esi, 0x2f
mov rdi, rbx
call memchr
test rax, rax
je 0x8002401
sub rax, rbx
mov qword [r14], r15
lea rbx, [rax + 2]
mov qword [arg_28h], rbx
cmp rbx, 0xf
jbe 0x8002255
mov rdi, r14
lea rsi, [arg_28h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [r14], rax
mov rdi, rax
mov rax, qword [arg_28h]
mov qword [r14 + 0x10], rax
mov rdx, rbx
mov rsi, r12
call memcpy
mov rax, qword [arg_28h]
mov rdx, qword [r14]
mov qword [arg_18h], rbx
add rdx, rax
jmp 0x8001e6b
mov qword [r14], r15
mov qword [arg_28h], 0
xor ebx, ebx
jmp 0x8001e54
nop word [rax + rax]
cmp byte [r15], 0x2e
jne 0x8001f05
mov eax, 1
cmp rbp, rbx
jne 0x8001f56
test al, al
je 0x8002114
mov rdi, qword [rsp]
mov rax, qword [r14]
test rdi, rdi
je 0x80022d3
movzx edx, byte [rax + rdi - 1]
cmp rdi, 1
je 0x800207c
cmp dl, 0x2e
je 0x80023dc
cmp dl, 0x2f
je 0x800211f
mov rsi, qword [rsp]
lea rbx, [rsi + 1]
cmp rax, qword [arg_10h]
je 0x8002472
mov rdx, qword [r14 + 0x10]
cmp rbx, rdx
ja 0x8002454
mov rsi, qword [rsp]
mov byte [rax + rsi], 0x2f
jmp 0x8002101
nop
mov rsi, qword [rsp]
mov rax, qword [r14]
test rsi, rsi
je 0x80022d3
movzx edx, byte [rax + rsi - 1]
cmp rsi, 1
je 0x80020d4
cmp dl, 0x2e
je 0x8002353
cmp dl, 0x2f
je 0x800211f
mov rdx, qword [rsp]
lea rbx, [rdx + 1]
cmp rax, qword [arg_10h]
je 0x800244a
mov rdx, qword [r14 + 0x10]
cmp rbx, rdx
ja 0x800242c
mov rdi, qword [rsp]
mov byte [rax + rdi], 0x2f
mov rax, qword [r14]
mov qword [r14 + 8], rbx
mov byte [rax + rbx], 0
mov rax, qword [r14 + 8]
mov qword [rsp], rax
cmp qword [rsp], 0
je 0x80022d0
add rsp, 0x38
mov rax, r14
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
cmp qword [rsp], 0
je 0x8001f1e
mov rax, qword [r14]
mov rdi, qword [rsp]
cmp byte [rax + rdi - 1], 0x2f
je 0x8001f1e
mov rsi, rdi
add rsi, 1
mov qword [arg_8h], rsi
cmp rax, qword [arg_10h]
je 0x80022f8
mov rdx, qword [r14 + 0x10]
cmp qword [arg_8h], rdx
ja 0x80022b2
mov rdx, qword [rsp]
mov byte [rax + rdx], 0x2f
mov rdx, qword [arg_8h]
mov rax, qword [r14]
mov qword [r14 + 8], rdx
mov byte [rax + rdx], 0
mov rax, qword [r14 + 8]
mov qword [rsp], rax
jmp 0x8001f1e
cmp byte [r12 + rcx + 1], 0x2e
jne 0x8001f05
mov rdi, qword [rsp]
cmp qword [arg_18h], rdi
jae 0x8001f05
mov rcx, qword [r14]
mov r9, qword [arg_18h]
mov rax, rdi
nop word cs:[rax + rax]
mov rdx, rax
lea rax, [rax - 1]
movzx edi, byte [rcx + rdx - 1]
lea rsi, [rcx + rax]
mov r8, rsi
cmp dil, 0x2f
je 0x8002380
cmp r9, rax
jb 0x80021d0
mov rdx, qword [rsp]
sub rdx, rax
cmp rdx, 2
jne 0x800220f
mov rdx, rax
cmp dil, 0x2e
je 0x8002393
mov r8, rsi
mov qword [r14 + 8], rax
mov byte [r8], 0
mov rax, qword [r14 + 8]
mov qword [rsp], rax
xor eax, eax
jmp 0x8001f4d
nop word cs:[rax + rax]
mov rbx, rbp
jmp 0x8001ee7
mov qword [r14], r15
test r12, r12
je 0x8002022
mov qword [rdi + 8], 0
mov byte [rdi + 0x10], 0
jmp 0x800211f
cmp rbx, 1
jne 0x800231c
movzx eax, byte [r12]
mov qword [r14 + 8], 1
mov byte [r14 + 0x11], 0
mov byte [r14 + 0x10], al
lea rax, [rbx + 1]
mov rbx, qword [r14 + 8]
mov qword [arg_18h], rax
mov rax, qword [r14]
lea r13, [rbx + 1]
cmp rax, qword [arg_10h]
je 0x8002330
mov rdx, qword [r14 + 0x10]
cmp r13, rdx
ja 0x8002302
mov byte [rax + rbx], 0x2f
mov rax, qword [r14]
mov qword [r14 + 8], r13
mov byte [rax + rbx + 1], 0
jmp 0x8001e7b
mov rsi, qword [rsp]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rdi, r14
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
mov rax, qword [r14]
jmp 0x800217b
mov rax, qword [r14]
cmp qword [arg_10h], rax
je 0x80022e1
cmp qword [r14 + 0x10], 0
je 0x800233a
mov byte [rax], 0x2e
mov rax, qword [r14]
mov qword [r14 + 8], 1
mov byte [rax + 1], 0
jmp 0x800211f
mov edx, 0xf
jmp 0x8002170
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
mov rdi, r14
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
mov rax, qword [r14]
jmp 0x800229d
test rbx, rbx
je 0x8001e54
mov rdi, qword [arg_10h]
jmp 0x8001fff
nop
mov edx, 0xf
jmp 0x8002298
mov r8d, 1
xor ecx, ecx
xor edx, edx
xor esi, esi
mov rdi, r14
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
mov rax, qword [r14]
jmp 0x80022e1
cmp byte [rax + rsi - 2], 0x2e
jne 0x80020d9
cmp rsi, 2
je 0x800211f
cmp byte [rax + rsi - 3], 0x2f
jne 0x80020d9
jmp 0x800211f
nop dword [rax + rax]
mov rax, qword [rsp]
sub rax, rdx
cmp rax, 2
jne 0x800239e
cmp byte [rcx + rdx], 0x2e
jne 0x800239e
cmp byte [rcx + rdx + 1], 0x2e
je 0x8001f05
cmp qword [arg_18h], rdx
jae 0x8002420
lea rax, [rdx - 1]
lea r8, [rcx + rax]
cmp byte [r8], 0x2f
je 0x800220f
lea r8, [rcx + rdx]
mov rax, rdx
jmp 0x800220f
mov qword [r14], r15
mov rdi, r15
mov ebx, 2
mov qword [arg_28h], 2
jmp 0x8001fff
cmp byte [rax + rdi - 2], 0x2e
jne 0x8002085
cmp rdi, 2
je 0x800211f
cmp byte [rax + rdi - 3], 0x2f
jne 0x8002085
jmp 0x800211f
mov qword [r14], r15
mov rbx, rbp
mov qword [arg_28h], rbp
cmp rbp, 0xf
ja 0x8001fe1
jmp 0x8002325
nop dword [rax + rax]
mov rax, rdx
lea rsi, [rcx + rdx]
jmp 0x800220c
mov rsi, qword [rsp]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rdi, r14
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
mov rax, qword [r14]
jmp 0x80020f9
mov edx, 0xf
jmp 0x80020f0
mov rsi, qword [rsp]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rdi, r14
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
mov rax, qword [r14]
jmp 0x80020a5
mov edx, 0xf
jmp 0x800209c
lea rdi, [0x08002483]
call _ZSt20__throw_length_errorPKc
mov rbp, rax
jmp sym boost::filesystem::path::begin() const
