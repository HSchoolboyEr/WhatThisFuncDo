push r12
push rbp
push rbx
mov r12, qword [rdi + 8]
test r12, r12
je 0x80016e3
mov rbx, qword [rdi]
xor ecx, ecx
cmp byte [rbx], 0x2f
jne 0x80016a0
cmp r12, 1
je 0x80016a0
cmp byte [rbx + 1], 0x2f
je 0x8001720
nop word [rax + rax]
mov rax, r12
jmp 0x80016ab
nop dword [rax]
mov rax, rdx
cmp rax, rcx
jbe 0x80016bb
cmp byte [rbx + rax - 1], 0x2f
lea rdx, [rax - 1]
jne 0x80016a8
mov rcx, r12
sub rcx, rax
je 0x80016e0
cmp byte [rbx + rax], 0x2e
mov rdx, r12
jne 0x80016fa
cmp rcx, 1
je 0x80016e0
cmp rcx, 2
jne 0x80016fa
cmp byte [rbx + rax + 1], 0x2e
jne 0x80016fa
nop
xor r12d, r12d
mov rax, r12
pop rbx
pop rbp
pop r12
ret
nop dword [rax + rax]
sub rdx, 1
cmp byte [rbx + rdx], 0x2e
je 0x8001708
cmp rdx, rax
ja 0x80016f0
jmp 0x80016e0
nop dword [rax]
sub r12, rdx
cmp rdx, rax
mov eax, 0
pop rbx
cmovbe r12, rax
pop rbp
mov rax, r12
pop r12
ret
nop
cmp r12, 2
je 0x800175c
cmp byte [rbx + 2], 0x2f
je 0x80016a0
lea rbp, [rbx + 2]
lea rdx, [r12 - 2]
mov esi, 0x2f
mov rdi, rbp
call memchr
mov rcx, rax
sub rcx, rbp
add rcx, 2
test rax, rax
cmove rcx, r12
jmp 0x80016a0
mov ecx, 2
jmp 0x80016a0
