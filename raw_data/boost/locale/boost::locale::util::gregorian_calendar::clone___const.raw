push r13
push r12
push rbp
push rbx
mov rbx, rdi
mov edi, 0xb0
sub rsp, 0x18
call _Znwm
movdqu xmm0, xmmword [rbx + 0x18]
movdqu xmm1, xmmword [rbx + 0x28]
mov r12, rax
movdqu xmm2, xmmword [rbx + 0x38]
movdqu xmm3, xmmword [rbx + 0x50]
lea rax, [0x08000eb5]
mov rbp, qword [rbx + 0x90]
mov r13, qword [rbx + 0x98]
mov qword [r12], rax
lea rdi, [r12 + 0xa0]
mov eax, dword [rbx + 8]
movdqu xmm4, xmmword [rbx + 0x60]
mov qword [r12 + 0x90], rdi
movdqu xmm5, xmmword [rbx + 0x70]
movups xmmword [r12 + 0x18], xmm0
mov dword [r12 + 8], eax
mov rax, qword [rbx + 0x10]
movups xmmword [r12 + 0x28], xmm1
mov qword [r12 + 0x10], rax
mov rax, qword [rbx + 0x48]
movups xmmword [r12 + 0x38], xmm2
mov qword [r12 + 0x48], rax
mov rax, qword [rbx + 0x80]
movups xmmword [r12 + 0x50], xmm3
mov qword [r12 + 0x80], rax
movzx eax, word [rbx + 0x88]
movups xmmword [r12 + 0x60], xmm4
mov word [r12 + 0x88], ax
mov eax, dword [rbx + 0x8c]
movups xmmword [r12 + 0x70], xmm5
mov dword [r12 + 0x8c], eax
mov rax, rbp
add rax, r13
je 0x8000f5d
test rbp, rbp
je .LC4
mov qword [var_8h], r13
cmp r13, 0xf
ja 0x8000fa0
cmp r13, 1
jne 0x8000f98
movzx eax, byte [rbp]
mov byte [r12 + 0xa0], al
mov qword [r12 + 0x98], r13
mov rax, r12
mov byte [rdi + r13], 0
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
test r13, r13
je 0x8000f7a
jmp 0x8000fcc
nop
lea rsi, [var_8h]
lea rdi, [r12 + 0x90]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [r12 + 0x90], rax
mov rdi, rax
mov rax, qword [var_8h]
mov qword [r12 + 0xa0], rax
mov rdx, r13
mov rsi, rbp
call memcpy
mov r13, qword [var_8h]
mov rdi, qword [r12 + 0x90]
jmp 0x8000f7a
lea rdi, [0x08000fed]
call _ZSt19__throw_logic_errorPKc
mov rbp, rax
mov rdi, r12
mov esi, 0xb0
call _ZdlPvm
mov rdi, rbp
call _Unwind_Resume
