push r15
mov r15d, r9d
push r14
mov r14, r8
push r13
mov r13, rcx
push r12
mov r12, rdi
mov edi, 0x18
push rbp
push rbx
mov rbx, rsi
sub rsp, 0xb8
mov qword [rsp], rdx
call _Znwm
mov rbp, rax
mov rsi, r14
lea rax, [0x08000d5b]
mov rdi, r13
mov qword [rbp], rax
mov qword [arg_8h], 0xffffffffffffffff
call iconv_open
mov qword [arg_8h], rax
mov dword [arg_10h], r15d
cmp rax, 0xffffffffffffffff
je .text.unlikely
mov rax, qword [rbp]
lea rdx, [0x08000d8c]
add byte [rax], al
add byte [rax], al
mov rax, qword [rax + 8]
cmp rax, rdx
jne 0x8000f30
lea rax, [r12 + 0x10]
mov rsi, qword [rsp]
mov byte [r12 + 0x10], 0
mov rdi, r12
mov qword [r12], rax
mov qword [r12 + 8], 0
sub rsi, rbx
mov qword [arg_18h], rax
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
lea rax, [arg_50h]
mov qword [arg_20h], rbx
xor r14d, r14d
lea r13, [arg_70h]
mov qword [arg_10h], rax
lea r15, [arg_30h]
jmp 0x8000df7
nop dword [rax + rax]
cmp r14d, 1
je 0x8000eb4
mov rbx, qword [arg_20h]
mov rax, qword [rsp]
mov rdi, qword [arg_8h]
mov qword [arg_50h], r13
mov qword [arg_30h], 0x40
sub rax, rbx
mov qword [arg_28h], rax
test r14d, r14d
jne 0x8000e23
test rax, rax
jne 0x8000ed8
mov rcx, qword [arg_10h]
mov r8, r15
xor edx, edx
xor esi, esi
call iconv
mov rbx, rax
mov r14d, 1
call __errno_location
mov rdx, qword [arg_50h]
mov eax, dword [rax]
sub rdx, r13
mov dword [arg_ch], eax
lea rax, [rbx - 1]
cmp rax, 0xfffffffffffffffd
ja 0x8000e64
cmp dword [arg_10h], 1
je .text.unlikely
movabs rax, 0x3fffffffffffffff
sub rax, qword [r12 + 8]
cmp rdx, rax
ja .LC4
mov rsi, r13
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
cmp rbx, 0xffffffffffffffff
jne 0x8000de8
mov eax, dword [arg_ch]
cmp eax, 0x54
je 0x8000f00
cmp eax, 0x16
je 0x8000f00
cmp dword [arg_ch], 7
je 0x8000df2
cmp dword [arg_10h], 1
je .text.unlikely
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
add rsp, 0xb8
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov rcx, qword [arg_10h]
lea rdx, [arg_28h]
lea rsi, [arg_20h]
mov r8, r15
call iconv
mov rbx, rax
jmp __errno_location
nop word [rax + rax]
cmp dword [arg_10h], 1
je .text.unlikely
mov rax, qword [arg_20h]
mov rcx, qword [rsp]
cmp rcx, rax
je 0x8000eb4
add rax, 1
mov qword [arg_20h], rax
cmp rcx, rax
ja 0x8000de8
jmp 0x8000eb4
nop dword [rax]
mov rcx, qword [rsp]
mov rdx, rbx
mov rsi, rbp
mov rdi, r12
call rax
jmp 0x8000eb4
lea rdi, [0x08000f4b]
call _ZSt20__throw_length_errorPKc
jmp .text.unlikely
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
nop word cs:[rax + rax]
nop dword [rax]
