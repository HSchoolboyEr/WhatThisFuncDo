movabs rax, 0xaaaaaaaaaaaaaaab
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x18
mov r14, qword [rdi]
mov r15, qword [r14]
mov r12, qword [r14 + 8]
sub r12, r15
sar r12, 4
imul r12, rax
test r12, r12
je 0x8000863
mov rcx, qword [rsi]
mov r13, qword [rsi + 8]
mov ebp, edx
xor eax, eax
xor ebx, ebx
jmp 0x8000803
nop dword [rax]
lea eax, [rbx + 1]
mov rbx, rax
cmp rax, r12
jae 0x8000878
lea rax, [rax + rax*2]
shl rax, 4
add rax, r15
cmp qword [rax + 8], r13
jne 0x80007f8
test r13, r13
je 0x8000835
mov rdi, qword [rax]
mov rsi, rcx
mov rdx, r13
mov qword [var_8h], rcx
call memcmp
mov rcx, qword [var_8h]
test eax, eax
jne 0x80007f8
mov rdi, qword [r14 + 0x18]
mov rcx, qword [r14 + 0x20]
sub rcx, rdi
sar rcx, 2
je 0x8000863
mov edx, 1
xor esi, esi
xor eax, eax
test ebp, edx
je 0x8000856
mov dword [rdi + rsi*4], ebx
lea esi, [rax + 1]
add edx, edx
mov rax, rsi
cmp rsi, rcx
jb 0x800084f
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
jne 0x8000835
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
