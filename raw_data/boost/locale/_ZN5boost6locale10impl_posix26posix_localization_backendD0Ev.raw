push r12
lea rax, [0x08000439]
mov r12, rdi
push rbp
push rbx
mov rbp, qword [rdi + 0x88]
mov qword [rdi], rax
test rbp, rbp
je 0x8000458
lock sub dword [arg_8h], 1
je 0x8000578
mov rdi, qword [r12 + 0x58]
lea rax, [r12 + 0x68]
cmp rdi, rax
je 0x8000475
mov rax, qword [r12 + 0x68]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [r12 + 0x38]
lea rax, [r12 + 0x48]
cmp rdi, rax
je 0x8000492
mov rax, qword [r12 + 0x48]
lea rsi, [rax + 1]
call _ZdlPvm
mov rbx, qword [r12 + 0x28]
mov rbp, qword [r12 + 0x20]
cmp rbx, rbp
je 0x80004d4
nop dword [rax]
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8000550
mov rax, qword [arg_10h]
add rbp, 0x20
lea rsi, [rax + 1]
call _ZdlPvm
cmp rbx, rbp
jne 0x80004a8
mov rbp, qword [r12 + 0x20]
test rbp, rbp
je 0x80004e9
mov rsi, qword [r12 + 0x30]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
mov rbx, qword [r12 + 0x10]
mov rbp, qword [r12 + 8]
cmp rbx, rbp
je 0x8000528
nop dword [rax + rax]
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8000568
mov rax, qword [arg_10h]
add rbp, 0x20
lea rsi, [rax + 1]
call _ZdlPvm
cmp rbx, rbp
jne 0x8000500
mov rbp, qword [r12 + 8]
test rbp, rbp
je 0x800053d
mov rsi, qword [r12 + 0x18]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
pop rbx
mov rdi, r12
pop rbp
mov esi, 0x90
pop r12
jmp _ZdlPvm
nop
add rbp, 0x20
cmp rbx, rbp
jne 0x80004a8
jmp 0x80004cf
nop word [rax + rax]
add rbp, 0x20
cmp rbx, rbp
jne 0x8000500
jmp 0x8000523
nop dword [rax + rax]
mov rax, qword [rbp]
lea rdx, [0x08000583]
add byte [rax], al
add byte [rax], al
mov rax, qword [rax + 0x10]
cmp rax, rdx
jne 0x80005c4
mov rdi, qword [arg_10h]
call qword [arg_18h]
lock sub dword [arg_ch], 1
jne 0x8000458
mov rax, qword [rbp]
lea rcx, [0x080005a9]
add byte [rax], al
add byte [rax], al
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x80005bd
call qword [rax + 8]
jmp 0x8000458
call rdx
jmp 0x8000458
mov rdi, rbp
call rax
jmp 0x8000593
