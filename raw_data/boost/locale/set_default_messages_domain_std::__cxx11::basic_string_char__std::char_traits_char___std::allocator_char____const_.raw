push r15
mov rdx, rsi
push r14
mov r14, rsi
push r13
push r12
mov r12, rdi
push rbp
push rbx
sub rsp, 0x48
mov rax, qword [rdi]
mov rbx, qword [rax + 0x88]
mov rdi, qword [rax + 0x80]
mov rsi, rbx
call method __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, <>>> >>() [clone ]
cmp rbx, rax
je 0x8001554
mov r13, qword [r12]
lea rdx, [rax + 0x20]
mov rcx, qword [r13 + 0x88]
cmp rcx, rdx
je 0x800152f
mov rsi, rcx
sub rsi, rdx
mov rbp, rsi
sar rbp, 5
test rsi, rsi
jle 0x8001970
lea rbx, [rax + 0x30]
jmp 0x80014e5
nop dword [rax]
lea rcx, [rbx - 0x20]
cmp rdi, rcx
je 0x80016e0
mov qword [rbx - 0x30], rax
mov rax, qword [rbx]
mov rcx, qword [rbx - 0x20]
mov qword [rbx - 0x28], rdx
mov qword [rbx - 0x20], rax
test rdi, rdi
je 0x80016ef
mov qword [rbx - 0x10], rdi
mov qword [rbx], rcx
mov qword [rbx - 8], 0
add rbx, 0x20
mov byte [rdi], 0
sub rbp, 1
je 0x8001528
mov rax, qword [rbx - 0x10]
mov rdi, qword [rbx - 0x30]
mov rdx, qword [rbx - 8]
cmp rax, rbx
jne 0x80014a0
test rdx, rdx
je 0x8001515
cmp rdx, 1
je 0x8001920
mov rsi, rbx
call memcpy
mov rdx, qword [rbx - 8]
mov rdi, qword [rbx - 0x30]
mov qword [rbx - 0x28], rdx
mov byte [rdi + rdx], 0
mov rdi, qword [rbx - 0x10]
jmp 0x80014d0
nop dword [rax + rax]
mov rdx, qword [r13 + 0x88]
lea rax, [rdx - 0x20]
mov rdi, qword [rdx - 0x20]
mov qword [r13 + 0x88], rax
lea rax, [rdx - 0x10]
cmp rdi, rax
je 0x8001554
mov rsi, qword [rdx - 0x10]
add rsi, 1
call _ZdlPvm
mov rbp, qword [r12]
mov r12, qword [arg_80h]
mov rbx, qword [arg_88h]
lea rdi, [arg_80h]
cmp rbx, qword [arg_90h]
je 0x80018b8
mov r15, qword [r14 + 8]
cmp r12, rbx
je 0x8001700
mov r14, qword [r14]
lea r13, [arg_28h_2]
mov qword [arg_10h], rdi
mov qword [arg_18h], r13
mov rax, r14
add rax, r15
je 0x80015aa
test r14, r14
je .LC3
mov qword [arg_8h], r15
cmp r15, 0xf
ja 0x8001778
cmp r15, 1
jne 0x8001760
movzx eax, byte [r14]
mov byte [arg_28h_2], al
mov rax, r13
mov qword [arg_20h_2], r15
mov byte [rax + r15], 0
mov rax, qword [arg_88h]
lea rdx, [rax + 0x10]
mov rcx, qword [rax - 0x20]
mov qword [rax], rdx
lea rdx, [rax - 0x10]
cmp rcx, rdx
je 0x80018d8
mov qword [rax], rcx
mov rcx, qword [rax - 0x10]
mov qword [rax + 0x10], rcx
mov rcx, qword [rax - 0x18]
mov byte [rax - 0x10], 0
mov rbx, qword [arg_88h]
mov qword [rax - 0x20], rdx
mov qword [rax + 8], rcx
mov qword [rax - 0x18], 0
lea rax, [rbx + 0x20]
mov qword [arg_88h], rax
lea rax, [rbx - 0x20]
sub rbx, 0x30
sub rax, r12
mov rbp, rax
sar rbp, 5
test rax, rax
jg 0x800169d
jmp 0x8001810
nop dword [rax + rax]
lea rcx, [rbx + 0x20]
cmp rdi, rcx
je 0x80017f0
mov qword [rbx + 0x10], rax
mov rax, qword [rbx]
mov rcx, qword [rbx + 0x20]
mov qword [rbx + 0x18], rdx
mov qword [rbx + 0x20], rax
test rdi, rdi
je 0x80017ff
mov qword [rbx - 0x10], rdi
mov qword [rbx], rcx
mov rax, qword [rbx - 0x10]
mov qword [rbx - 8], 0
sub rbx, 0x20
mov byte [rax], 0
sub rbp, 1
je 0x8001810
mov rax, qword [rbx - 0x10]
mov rdi, qword [rbx + 0x10]
mov rdx, qword [rbx - 8]
cmp rax, rbx
jne 0x8001650
test rdx, rdx
je 0x80016cd
cmp rdx, 1
je 0x80018a0
mov rsi, rbx
call memcpy
mov rdi, qword [rbx + 0x10]
mov rdx, qword [rbx - 8]
mov qword [rbx + 0x18], rdx
mov byte [rdi + rdx], 0
jmp 0x8001680
nop word [rax + rax]
mov qword [rbx - 0x30], rax
mov rax, qword [rbx]
mov qword [rbx - 0x28], rdx
mov qword [rbx - 0x20], rax
mov qword [rbx - 0x10], rbx
mov rdi, rbx
jmp 0x80014d0
nop dword [rax + rax]
lea rdi, [rbx + 0x10]
mov qword [rbx], rdi
mov r12, qword [r14]
mov rax, r12
add rax, r15
je 0x800171b
test r12, r12
je .LC3
mov qword [arg_10h], r15
cmp r15, 0xf
ja 0x80017b8
cmp r15, 1
jne 0x8001960
movzx eax, byte [r12]
mov byte [rbx + 0x10], al
mov qword [rbx + 8], r15
mov byte [rdi + r15], 0
add qword [arg_88h], 0x20
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
test r15, r15
jne 0x800198a
mov rax, r13
jmp 0x80015ce
nop dword [rax]
lea rdi, [arg_18h]
lea rsi, [arg_8h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [arg_18h], rax
mov rdi, rax
mov rax, qword [arg_8h]
mov qword [arg_28h_2], rax
mov rdx, r15
mov rsi, r14
call memcpy
mov r15, qword [arg_8h]
mov rax, qword [arg_18h]
jmp 0x80015ce
nop dword [rax]
mov rdi, rbx
lea rsi, [arg_10h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [rbx], rax
mov rdi, rax
mov rax, qword [arg_10h]
mov qword [rbx + 0x10], rax
mov rdx, r15
mov rsi, r12
call memcpy
mov r15, qword [arg_10h]
mov rdi, qword [rbx]
jmp 0x800173c
nop
mov qword [rbx + 0x10], rax
mov rax, qword [rbx]
mov qword [rbx + 0x18], rdx
mov qword [rbx + 0x20], rax
mov qword [rbx - 0x10], rbx
jmp 0x8001680
nop dword [rax + rax]
mov rax, qword [arg_90h]
mov rdi, qword [r12]
mov rdx, qword [arg_20h]
cmp rax, r13
je 0x80018f0
lea rcx, [r12 + 0x10]
cmp rdi, rcx
je 0x8001938
mov qword [r12], rax
mov rcx, qword [r12 + 0x10]
mov qword [r12 + 8], rdx
mov rax, qword [arg_28h]
mov qword [r12 + 0x10], rax
test rdi, rdi
je 0x800194b
mov qword [arg_90h], rdi
mov qword [arg_28h], rcx
mov qword [arg_20h], 0
mov byte [rdi], 0
mov rdi, qword [arg_90h]
cmp rdi, r13
je 0x800174d
mov rax, qword [arg_28h]
lea rsi, [rax + 1]
call _ZdlPvm
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
movzx eax, byte [rbx]
mov byte [rdi], al
mov rdi, qword [rbx + 0x10]
mov rdx, qword [rbx - 8]
jmp 0x80016cd
nop word [rax + rax]
add rsp, 0x48
mov rdx, r14
mov rsi, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
nop dword [rax]
movdqu xmm0, xmmword [rax - 0x10]
movups xmmword [rax + 0x10], xmm0
jmp 0x8001602
nop word cs:[rax + rax]
test rdx, rdx
je 0x800190c
cmp rdx, 1
je 0x8001978
mov rsi, r13
call memcpy
mov rdx, qword [arg_20h]
mov rdi, qword [r12]
mov qword [r12 + 8], rdx
mov byte [rdi + rdx], 0
mov rdi, qword [arg_90h]
jmp 0x8001860
nop
movzx eax, byte [rbx]
mov byte [rdi], al
mov rdx, qword [rbx - 8]
mov rdi, qword [rbx - 0x30]
jmp 0x8001515
nop word [rax + rax]
mov qword [r12], rax
mov qword [r12 + 8], rdx
mov rax, qword [arg_28h]
mov qword [r12 + 0x10], rax
mov qword [arg_90h], r13
lea r13, [arg_28h]
mov rdi, r13
jmp 0x8001860
nop dword [rax]
test r15, r15
je 0x800173c
jmp 0x80017d6
nop
mov rdx, rcx
jmp 0x800152f
movzx eax, byte [arg_28h]
mov byte [rdi], al
mov rdx, qword [arg_20h]
mov rdi, qword [r12]
jmp 0x800190c
mov rdi, r13
jmp 0x800179b
lea rdi, [0x08001999]
call _ZSt19__throw_logic_errorPKc
nop
