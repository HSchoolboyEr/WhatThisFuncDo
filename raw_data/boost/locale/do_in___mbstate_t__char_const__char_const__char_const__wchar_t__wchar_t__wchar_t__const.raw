push rbx
mov rdi, qword [arg_10h]
mov rsi, rdx
cmp r9, rdi
jb 0x80023ef
jmp 0x8002413
nop word [rax + rax]
cmp al, 0xc1
jbe 0x8002430
cmp al, 0xdf
jbe 0x8002448
cmp al, 0xef
jbe 0x8002468
cmp al, 0xf4
ja 0x8002430
cmp rcx, r10
je 0x800245a
movzx edx, byte [rsi + 1]
mov r10d, edx
and r10d, 0xffffffc0
cmp r10b, 0x80
jne 0x8002430
and eax, 7
and edx, 0x3f
lea r10, [rsi + 2]
mov r11d, 4
shl eax, 6
or eax, edx
cmp rcx, r10
je 0x800245a
movzx edx, byte [r10]
mov ebx, edx
and ebx, 0xffffffc0
cmp bl, 0x80
jne 0x8002430
shl eax, 6
add r10, 1
mov ebx, eax
mov eax, edx
and eax, 0x3f
or eax, ebx
cmp rcx, r10
je 0x800245a
movzx edx, byte [r10]
lea rbx, [r10 + 1]
mov r10d, edx
and r10d, 0xffffffc0
cmp r10b, 0x80
jne 0x8002430
and edx, 0x3f
shl eax, 6
or eax, edx
lea edx, [rax - 0xd800]
cmp edx, 0x7ff
jbe 0x8002430
lea edx, [rax - 0x80]
cmp edx, 0x10ff7f
ja 0x8002430
mov edx, 2
cmp eax, 0x7ff
jbe 0x80023da
xor edx, edx
cmp eax, 0xffff
seta dl
add edx, 3
cmp edx, r11d
jne 0x8002430
add r9, 4
mov rsi, rbx
mov dword [r9 - 4], eax
cmp rdi, r9
jbe 0x8002413
cmp rcx, rsi
jbe 0x8002413
movzx eax, byte [rsi]
lea r10, [rsi + 1]
test al, al
js 0x8002300
add r9, 4
mov rsi, r10
mov dword [r9 - 4], eax
cmp rdi, r9
ja 0x80023ef
mov rax, qword [arg_18h]
mov qword [r8], rsi
mov qword [rax], r9
xor eax, eax
cmp rcx, rsi
pop rbx
setne al
ret
nop dword [rax + rax]
mov eax, 2
mov rdi, qword [arg_18h_2]
mov qword [r8], rsi
mov qword [rdi], r9
pop rbx
ret
nop word [rax + rax]
and eax, 0x1f
mov r11d, 2
cmp rcx, r10
jne 0x8002387
mov eax, 1
jmp 0x8002435
nop dword [rax]
and eax, 0xf
mov r11d, 3
jmp 0x8002353
