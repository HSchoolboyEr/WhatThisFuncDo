push r15
push r14
push r13
push r12
lea r12, [rdi + 8]
push rbp
push rbx
sub rsp, 0x18
mov r15, qword [rdi + 0x10]
mov qword [var_8h], r12
test r15, r15
je 0x8004b6b
mov r13, qword [rsi]
mov r14, qword [rsi + 8]
mov ebp, 0x80000000
jmp 0x8004ad1
nop word [rax + rax]
mov r15, qword [r15 + 0x18]
test r15, r15
je 0x8004b1d
mov rbx, qword [r15 + 0x28]
mov rdx, r14
cmp rbx, r14
cmovbe rdx, rbx
test rdx, rdx
je 0x8004af4
mov rdi, qword [r15 + 0x20]
mov rsi, r13
call memcmp
test eax, eax
jne 0x8004b0d
sub rbx, r14
cmp rbx, rbp
jge 0x8004b11
movabs rax, 0xffffffff7fffffff
cmp rbx, rax
jle 0x8004ac8
mov eax, ebx
test eax, eax
js 0x8004ac8
mov r12, r15
mov r15, qword [r15 + 0x10]
test r15, r15
jne 0x8004ad1
cmp qword [var_8h], r12
je 0x8004b6b
mov rbx, qword [r12 + 0x28]
mov rdx, r14
cmp rbx, r14
cmovbe rdx, rbx
test rdx, rdx
je 0x8004b49
mov rsi, qword [r12 + 0x20]
mov rdi, r13
call memcmp
test eax, eax
jne 0x8004b63
mov rcx, r14
sub rcx, rbx
cmp rcx, 0x7fffffff
jg 0x8004b6b
cmp rcx, 0xffffffff80000000
jl 0x8004b7d
mov eax, ecx
test eax, eax
cmovs r12, qword [arg_8h]
add rsp, 0x18
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov r12, qword [var_8h]
jmp 0x8004b6b
