push r15
xor edx, edx
mov ecx, 1
push r14
push r13
push r12
mov r12, rdi
push rbp
push rbx
mov rbx, rsi
lea rsi, [0x0800006e]
mov rdi, rbx
sub rsp, 0x58
call _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm
mov r14, qword [rbx + 8]
mov r15, qword [rbx]
lea r13, [var_20h]
mov rbp, rax
mov qword [var_10h], r13
cmp rax, r14
cmovbe r14, rax
mov rax, r15
add rax, r14
je 0x80000a6
test r15, r15
je .LC1
mov qword [var_30h], r14
cmp r14, 0xf
ja 0x80001e0
cmp r14, 1
jne 0x80001a0
movzx eax, byte [r15]
mov byte [var_20h], al
mov rax, r13
mov qword [var_18h], r14
mov byte [rax + r14], 0
mov rdi, qword [var_18h]
test rdi, rdi
je 0x8000177
xor edx, edx
xor eax, eax
mov r8, qword [var_10h]
add rax, r8
movzx ecx, byte [rax]
lea esi, [rcx - 0x41]
cmp sil, 0x19
jbe 0x80001b8
lea eax, [rdx + 1]
mov rdx, rax
cmp rax, rdi
jb 0x80000eb
lea rsi, [var_10h]
lea rdi, [r12 + 0x60]
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
lea r14, [var_30h]
mov rsi, qword [r12 + 0x60]
mov rdi, r14
call _ZN5boost6locale4conv4impl18normalize_encodingB5cxx11EPKc
add byte [rax], al
add byte [rax], al
mov rdi, r14
lea rsi, [0x08000134]
lea r15, [var_40h]
call _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
add byte [rax], al
add byte [rax], al
mov rdi, qword [var_30h]
test eax, eax
sete byte [r12 + 0x80]
cmp rdi, r15
je 0x8000161
mov rax, qword [var_40h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rcx, qword [rbx + 8]
cmp rbp, rcx
jae 0x8000177
mov rax, qword [rbx]
cmp byte [rax + rbp], 0x40
je 0x8000220
mov rdi, qword [var_10h]
cmp rdi, r13
je 0x800018f
mov rax, qword [var_20h]
lea rsi, [rax + 1]
call _ZdlPvm
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
test r14, r14
jne 0x8000363
mov rax, r13
jmp 0x80000ca
nop dword [rax]
add ecx, 0x20
mov byte [rax], cl
mov rdi, qword [var_18h]
lea eax, [rdx + 1]
mov rdx, rax
cmp rdi, rax
ja 0x80000e6
jmp 0x8000109
nop word cs:[rax + rax]
lea rdi, [var_10h]
lea rsi, [var_30h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
add byte [rax], al
add byte [rax], al
mov qword [var_10h], rax
mov rdi, rax
mov rax, qword [var_30h]
mov qword [var_20h], rax
mov rdx, r14
mov rsi, r15
call memcpy
mov r14, qword [var_30h]
mov rax, qword [var_10h]
jmp 0x80000ca
nop dword [rax]
lea rdx, [arg_1h]
cmp rdx, rcx
ja .LC3
mov rbx, rcx
lea rbp, [rax + rdx]
mov qword [var_30h], r15
sub rbx, rdx
add rax, rcx
je 0x8000258
test rbp, rbp
jne 0x8000258
lea rdi, [0x0800024d]
call _ZSt19__throw_logic_errorPKc
add byte [rax], al
add byte [rax], al
nop word [rax + rax]
mov qword [var_8h], rbx
cmp rbx, 0xf
ja 0x8000307
cmp rbx, 1
jne 0x80002dc
movzx eax, byte [rbp]
mov byte [var_40h], al
mov rax, r15
mov qword [var_38h], rbx
lea rdi, [r12 + 0x40]
mov rsi, r14
mov byte [rax + rbx], 0
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
mov rdi, qword [r12 + 0x48]
xor eax, eax
xor edx, edx
test rdi, rdi
je 0x80002bb
mov r8, qword [r12 + 0x40]
add rax, r8
movzx ecx, byte [rax]
lea esi, [rcx - 0x41]
cmp sil, 0x19
jbe 0x80002f0
lea eax, [rdx + 1]
mov rdx, rax
cmp rax, rdi
jb 0x80002a1
mov rdi, qword [var_30h]
cmp rdi, r15
je 0x8000177
mov rax, qword [var_40h]
lea rsi, [rax + 1]
call _ZdlPvm
jmp 0x8000177
test rbx, rbx
jne 0x800036b
mov rax, r15
jmp 0x8000278
nop word [rax + rax]
add ecx, 0x20
mov byte [rax], cl
mov rdi, qword [r12 + 0x48]
lea eax, [rdx + 1]
mov rdx, rax
cmp rdi, rax
ja 0x800029c
jmp 0x80002bb
lea rsi, [var_8h]
xor edx, edx
mov rdi, r14
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_30h], rax
mov rdi, rax
mov rax, qword [var_8h]
mov qword [var_40h], rax
mov rdx, rbx
mov rsi, rbp
call memcpy
mov rbx, qword [var_8h]
mov rax, qword [var_30h]
jmp 0x8000278
lea rdi, [0x08000349]
call _ZSt19__throw_logic_errorPKc
lea rsi, [0x08000355]
lea rdi, [0x0800035c]
xor eax, eax
call _ZSt24__throw_out_of_range_fmtPKcz
add byte [rax], al
add byte [rax], al
mov rdi, r13
jmp 0x8000203
mov rdi, r15
jmp 0x8000328
