mov r9, rdx
mov rdi, rcx
test r8, r8
je 0x80022ce
cmp rcx, rdx
jbe 0x80022ce
mov rcx, rdx
jmp 0x800227b
cmp al, 0xc1
jbe 0x80022a0
cmp al, 0xdf
jbe 0x80022b0
cmp al, 0xef
jbe 0x80022c0
cmp al, 0xf4
ja 0x80022a0
cmp rdi, rsi
je 0x80022a0
movzx edx, byte [rcx + 1]
mov esi, edx
and esi, 0xffffffc0
cmp sil, 0x80
jne 0x80022a0
and eax, 7
and edx, 0x3f
lea rsi, [rcx + 2]
mov r11d, 4
shl eax, 6
or eax, edx
cmp rdi, rsi
je 0x80022a0
movzx edx, byte [rsi]
mov r10d, edx
and r10d, 0xffffffc0
cmp r10b, 0x80
jne 0x80022a0
shl eax, 6
add rsi, 1
mov r10d, eax
mov eax, edx
and eax, 0x3f
or eax, r10d
cmp rdi, rsi
je 0x80022a0
movzx edx, byte [rsi]
lea r10, [rsi + 1]
mov esi, edx
and esi, 0xffffffc0
cmp sil, 0x80
jne 0x80022a0
and edx, 0x3f
shl eax, 6
or eax, edx
lea edx, [rax - 0xd800]
cmp edx, 0x7ff
jbe 0x80022a0
lea edx, [rax - 0x80]
cmp edx, 0x10ff7f
ja 0x80022a0
mov edx, 2
cmp eax, 0x7ff
jbe 0x8002265
xor edx, edx
cmp eax, 0xffff
seta dl
add edx, 3
cmp edx, r11d
jne 0x80022a0
mov rcx, r10
sub r8, 1
cmp rdi, rcx
jbe 0x80022a0
test r8, r8
je 0x80022a0
movzx eax, byte [rcx]
lea rsi, [rcx + 1]
test al, al
js 0x8002190
mov rcx, rsi
sub r8, 1
cmp rdi, rcx
ja 0x8002276
nop word cs:[rax + rax]
sub ecx, r9d
mov eax, ecx
ret
nop word cs:[rax + rax]
and eax, 0x1f
mov r11d, 2
jmp 0x8002210
nop
and eax, 0xf
mov r11d, 3
jmp 0x80021e1
xor ecx, ecx
jmp 0x80022a3
