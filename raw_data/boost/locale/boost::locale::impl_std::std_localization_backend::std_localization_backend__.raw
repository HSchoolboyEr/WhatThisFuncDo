lea rax, [0x08000557]
push r12
mov r12, rdi
push rbp
push rbx
mov qword [rdi], rax
mov rdi, qword [rdi + 0x100]
lea rax, [r12 + 0x110]
cmp rdi, rax
je 0x8000586
mov rax, qword [r12 + 0x110]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [r12 + 0xe0]
lea rax, [r12 + 0xf0]
cmp rdi, rax
je 0x80005ac
mov rax, qword [r12 + 0xf0]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [r12 + 0xb8]
lea rax, [r12 + 0xc8]
cmp rdi, rax
je 0x80005d2
mov rax, qword [r12 + 0xc8]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [r12 + 0x98]
lea rax, [r12 + 0xa8]
cmp rdi, rax
je 0x80005f8
mov rax, qword [r12 + 0xa8]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [r12 + 0x78]
lea rax, [r12 + 0x88]
cmp rdi, rax
je 0x800061b
mov rax, qword [r12 + 0x88]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [r12 + 0x58]
lea rax, [r12 + 0x68]
cmp rdi, rax
je 0x8000638
mov rax, qword [r12 + 0x68]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [r12 + 0x38]
lea rax, [r12 + 0x48]
cmp rdi, rax
je 0x8000655
mov rax, qword [r12 + 0x48]
lea rsi, [rax + 1]
call _ZdlPvm
mov rbx, qword [r12 + 0x28]
mov rbp, qword [r12 + 0x20]
cmp rbx, rbp
je 0x8000694
nop dword [rax]
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8000710
mov rax, qword [arg_10h]
add rbp, 0x20
lea rsi, [rax + 1]
call _ZdlPvm
cmp rbx, rbp
jne 0x8000668
mov rbp, qword [r12 + 0x20]
test rbp, rbp
je 0x80006a9
mov rsi, qword [r12 + 0x30]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
mov rbx, qword [r12 + 0x10]
mov rbp, qword [r12 + 8]
cmp rbx, rbp
je 0x80006e8
nop dword [rax + rax]
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8000728
mov rax, qword [arg_10h]
add rbp, 0x20
lea rsi, [rax + 1]
call _ZdlPvm
cmp rbx, rbp
jne 0x80006c0
mov rbp, qword [r12 + 8]
test rbp, rbp
je 0x80006fd
mov rsi, qword [r12 + 0x18]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
pop rbx
mov rdi, r12
pop rbp
mov esi, 0x128
pop r12
jmp _ZdlPvm
nop
add rbp, 0x20
cmp rbx, rbp
jne 0x8000668
jmp 0x800068f
nop word [rax + rax]
add rbp, 0x20
cmp rbx, rbp
jne 0x80006c0
jmp 0x80006e3
