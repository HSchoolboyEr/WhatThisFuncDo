push rbp
lea rax, [0x08001388]
push rbx
mov rbx, rdi
sub rsp, 8
mov rbp, qword [rdi + 0x20]
mov qword [rdi], rax
test rbp, rbp
je 0x80013a3
lock sub dword [arg_8h], 1
je 0x80013f8
mov rbp, qword [rbx + 0x10]
test rbp, rbp
je 0x80013b3
lock sub dword [arg_8h], 1
je 0x80013c0
add rsp, 8
pop rbx
pop rbp
ret
nop word [rax + rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x80013b3
mov rax, qword [rbp]
lea rcx, [0x080013dc]
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x8001430
mov rax, qword [rax + 8]
add rsp, 8
mov rdi, rbp
pop rbx
pop rbp
jmp rax
nop dword [rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x80013a3
mov rax, qword [rbp]
lea rcx, [0x08001414]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x8001440
call qword [rax + 8]
jmp 0x80013a3
nop dword [rax + rax]
mov rdi, rbp
call rdx
jmp 0x80013b3
nop word [rax + rax]
call rdx
jmp 0x80013a3
