push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x58
mov rcx, qword [rdi + 0x10]
mov rax, qword [rdi + 8]
mov qword [var_28h], rdi
mov dword [var_10h], 0
cmp rax, rcx
je 0x800297b
xor edx, edx
lea rbx, [0x08002655]
add byte [rax], al
add byte [rax], al
shl rdx, 4
mov r14, qword [rax + rdx]
mov rdx, qword [r14]
mov rdx, qword [rdx + 0x20]
cmp rdx, rbx
jne 0x80029d7
mov rsi, qword [r14 + 0x10]
mov rdx, qword [r14 + 8]
cmp rdx, rsi
je 0x800295f
mov dword [var_14h], 0
xor eax, eax
mov qword [var_30h], r14
shl rax, 4
mov r14, qword [rdx + rax]
mov rax, qword [r14]
mov rax, qword [rax + 0x20]
cmp rax, rbx
jne 0x80029cd
mov rdi, qword [r14 + 0x10]
mov rcx, qword [r14 + 8]
cmp rdi, rcx
je 0x8002936
mov dword [var_18h], 0
xor eax, eax
mov r15, r14
shl rax, 4
mov r12, qword [rcx + rax]
mov rax, qword [r12]
mov rax, qword [rax + 0x20]
cmp rax, rbx
jne 0x80029bb
mov rsi, qword [r12 + 0x10]
mov rax, qword [r12 + 8]
cmp rsi, rax
je 0x800290d
mov dword [var_1ch], 0
xor edx, edx
mov qword [var_38h], r15
shl rdx, 4
mov rbp, qword [rax + rdx]
mov rdx, qword [rbp]
mov rdx, qword [rdx + 0x20]
cmp rdx, rbx
jne 0x80029a7
mov rdi, qword [var_10h]
mov rdx, qword [var_8h]
cmp rdi, rdx
je 0x80028e4
mov dword [var_8h], 0
xor eax, eax
mov qword [var_20h], r12
nop word [rax + rax]
shl rax, 4
mov r15, qword [rdx + rax]
mov rax, qword [r15]
mov rax, qword [rax + 0x20]
cmp rax, rbx
jne 0x80028ac
mov rcx, qword [r15 + 0x10]
mov rax, qword [r15 + 8]
cmp rcx, rax
je 0x80028b9
mov dword [var_ch], 0
xor edx, edx
jmp 0x80027a1
nop dword [rax]
mov rdi, r14
call rdx
mov rcx, qword [r15 + 0x10]
mov rax, qword [r15 + 8]
mov rsi, rcx
add dword [var_ch], 1
mov edx, dword [var_ch]
sub rsi, rax
sar rsi, 4
cmp rdx, rsi
jae 0x80028b1
shl rdx, 4
mov r14, qword [rax + rdx]
mov rdx, qword [r14]
mov rdx, qword [rdx + 0x20]
cmp rdx, rbx
jne 0x8002778
mov rdi, qword [r14 + 0x10]
mov rdx, qword [r14 + 8]
cmp rdi, rdx
je 0x8002785
xor eax, eax
xor r12d, r12d
jmp 0x80027f4
nop dword [rax]
mov rdi, r13
call rax
mov rdi, qword [r14 + 0x10]
mov rdx, qword [r14 + 8]
mov rcx, rdi
lea eax, [r12 + 1]
sub rcx, rdx
mov r12, rax
sar rcx, 4
cmp rax, rcx
jae 0x800277d
shl rax, 4
mov r13, qword [rdx + rax]
mov rax, qword [r13]
mov rax, qword [rax + 0x20]
cmp rax, rbx
jne 0x80027d0
mov r10, qword [r13 + 0x10]
mov rsi, qword [r13 + 8]
cmp r10, rsi
je 0x80027dd
mov qword [var_40h], rbp
xor eax, eax
mov rbp, r13
mov dword [var_48h], 0
mov dword [var_4ch], r12d
jmp 0x8002859
nop
mov rdi, r13
call rax
mov r10, qword [var_10h]
mov rsi, qword [var_8h]
mov rdx, r10
add dword [var_48h], 1
mov eax, dword [var_48h]
sub rdx, rsi
sar rdx, 4
cmp rax, rdx
jae 0x8002990
shl rax, 4
mov r13, qword [rsi + rax]
mov rax, qword [r13]
mov rax, qword [rax + 0x20]
cmp rax, rbx
jne 0x8002830
mov rcx, qword [r13 + 8]
cmp qword [r13 + 0x10], rcx
je 0x800283d
xor edx, edx
xor r12d, r12d
nop dword [rax]
shl rdx, 4
mov rdi, qword [rcx + rdx]
mov rax, qword [rdi]
call qword [rax + 0x20]
mov rcx, qword [r13 + 8]
mov rax, qword [r13 + 0x10]
lea edx, [r12 + 1]
mov r12, rdx
sub rax, rcx
sar rax, 4
cmp rdx, rax
jb 0x8002880
jmp 0x8002835
mov rdi, r15
call rax
mov rdi, qword [var_10h]
mov rdx, qword [var_8h]
mov rcx, rdi
add dword [var_8h], 1
mov eax, dword [var_8h]
sub rcx, rdx
sar rcx, 4
cmp rax, rcx
jb 0x8002740
mov r12, qword [var_20h]
mov rsi, qword [r12 + 0x10]
mov rax, qword [r12 + 8]
mov rcx, rsi
add dword [var_1ch], 1
mov edx, dword [var_1ch]
sub rcx, rax
sar rcx, 4
cmp rdx, rcx
jb 0x80026fe
mov r15, qword [var_38h]
mov rdi, qword [r15 + 0x10]
mov rcx, qword [r15 + 8]
mov rdx, rdi
add dword [var_18h], 1
mov eax, dword [var_18h]
sub rdx, rcx
sar rdx, 4
cmp rax, rdx
jb 0x80026c3
mov rax, qword [var_30h]
mov rsi, qword [rax + 0x10]
mov rdx, qword [rax + 8]
mov rcx, rsi
add dword [var_14h], 1
mov eax, dword [var_14h]
sub rcx, rdx
sar rcx, 4
cmp rax, rcx
jb 0x800268d
mov rsi, qword [var_28h]
mov rax, qword [rsi + 8]
mov rcx, qword [rsi + 0x10]
mov rsi, rcx
add dword [var_10h], 1
mov edx, dword [var_10h]
sub rsi, rax
sar rsi, 4
cmp rdx, rsi
jb 0x8002655
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov rbp, qword [var_40h]
mov r12d, dword [var_4ch]
mov rdi, qword [r14 + 0x10]
mov rdx, qword [r14 + 8]
jmp 0x80027dd
mov rdi, rbp
call rdx
mov rsi, qword [r12 + 0x10]
mov rax, qword [r12 + 8]
jmp 0x80028e4
mov rdi, r12
call rax
mov rdi, qword [r15 + 0x10]
mov rcx, qword [r15 + 8]
jmp 0x800290d
mov rdi, r14
call rax
jmp 0x8002929
mov rdi, r14
call rdx
mov rdi, qword [var_28h]
mov rax, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jmp 0x800295f
