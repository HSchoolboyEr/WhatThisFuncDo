push r15
push r14
push r13
mov r13d, 8
push r12
push rbp
mov rbp, r8
push rbx
sub rsp, 0x88
mov qword [var_50h], rdi
lea rdi, [r8 + 0xd0]
mov qword [var_58h], rsi
mov qword [var_40h], rdx
mov qword [var_48h], rcx
mov qword [var_20h], r9
call .text
mov r15d, dword [var_18h]
mov rbx, rax
and r15d, 0x4a
cmp r15d, 0x40
je 0x800e1a3
cmp r15d, 8
mov r13d, 0x10
mov eax, 0xa
cmovne r13d, eax
mov rdi, qword [var_50h]
cmp dword [var_58h], 0xffffffff
sete bpl
test rdi, rdi
setne al
and al, bpl
mov r12d, eax
jne 0x800ea50
mov rdi, qword [var_40h]
cmp dword [var_48h], 0xffffffff
sete al
test rdi, rdi
setne dl
and dl, al
jne 0x800ea20
cmp bpl, al
je 0x800e9b8
lea r12, [var_50h]
mov rdi, r12
call _ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv
add byte [rax], al
add byte [rax], al
cmp eax, dword [rbx + 0xe0]
movzx ecx, byte [rbx + 0x20]
mov ebp, eax
sete byte [var_3fh]
je 0x800e213
cmp eax, dword [rbx + 0xe4]
jne 0x800eaa0
test cl, cl
jne 0x800e288
cmp ebp, dword [rbx + 0x48]
je 0x800e290
mov rdi, qword [var_50h]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae .text
add rax, 4
mov qword [rdi + 0x10], rax
lea rsi, [var_40h]
mov rdi, r12
mov dword [var_58h], 0xffffffff
call .text
mov byte [var_3ch], al
test al, al
je _ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv
movzx ecx, byte [rbx + 0x20]
xor r14d, r14d
xor r12d, r12d
cmp r13d, 0x10
jne 0x800e36a
mov qword [var_18h], 0x16
mov dword [var_8h], 0x16
jmp 0x800e377
nop word [rax + rax]
cmp ebp, dword [rbx + 0x4c]
jne 0x800e217
nop dword [rax]
xor r14d, r14d
xor r12d, r12d
test cl, cl
je 0x800e2a3
cmp dword [rbx + 0x4c], ebp
je 0x800e5b8
cmp dword [rbx + 0x48], ebp
je 0x800e5b8
cmp dword [rbx + 0xf0], ebp
je 0x800e510
test r12b, r12b
je 0x800e5b8
cmp dword [rbx + 0xe8], ebp
je 0x800e2d5
cmp dword [rbx + 0xec], ebp
jne 0x800eae0
cmp r13d, 0x10
sete al
test r15d, r15d
sete dl
or al, dl
je 0x800eb01
xor r14d, r14d
xor r12d, r12d
mov r13d, 0x10
mov rdi, qword [var_50h]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800e560
add rax, 4
mov dword [var_58h], 0xffffffff
mov qword [rdi + 0x10], rax
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800ea10
mov eax, dword [rax]
xor ecx, ecx
cmp eax, 0xffffffff
je 0x800e7e0
mov rdi, qword [var_40h]
cmp dword [var_48h], 0xffffffff
sete al
test rdi, rdi
setne dl
and dl, al
jne 0x800e640
cmp cl, al
jne 0x800e590
mov byte [var_3ch], 1
movzx ecx, byte [rbx + 0x20]
cmp r13d, 0x10
je 0x800e26c
movsxd rax, r13d
mov dword [var_8h], r13d
mov qword [var_18h], rax
lea rax, [var_60h]
mov byte [var_70h], 0
mov qword [var_28h], rax
lea rax, [var_70h]
mov qword [var_30h], rax
mov qword [var_60h], rax
mov qword [var_68h], 0
test cl, cl
jne 0x800e9a0
movsxd rsi, r13d
mov rax, 0xffffffffffffffff
xor edx, edx
movzx r13d, byte [rbx + 0x148]
div rsi
mov qword [var_10h], rsi
mov qword [rsp], rax
test r13b, r13b
jne 0x800e7f8
cmp byte [var_3ch], 0
mov byte [var_3dh], 0
jne 0x800eb7a
mov eax, dword [var_18h]
xor r15d, r15d
add eax, 0x30
mov dword [var_18h], eax
nop dword [rax]
cmp dword [var_8h], 0xa
jg 0x800e5c8
cmp ebp, 0x2f
jle 0x800e7d0
cmp dword [var_18h], ebp
jle 0x800e7d0
sub ebp, 0x30
cmp qword [rsp], r15
jae 0x800e5e0
mov rdi, qword [var_50h]
mov byte [var_3dh], 1
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800e617
add rax, 4
mov dword [var_58h], 0xffffffff
mov qword [rdi + 0x10], rax
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800ead0
mov eax, dword [rax]
xor r13d, r13d
cmp eax, 0xffffffff
je 0x800e9d8
mov rdi, qword [var_40h]
cmp dword [var_48h], 0xffffffff
sete al
test rdi, rdi
setne bpl
and bpl, al
jne 0x800e6d0
cmp r13b, al
jne 0x800e670
mov r13d, 1
cmp qword [var_68h], 0
jne 0x800e740
test r14d, r14d
jne 0x800e787
cmp r12b, 1
je 0x800e787
mov rax, qword [arg_c0h]
mov qword [rax], 0
mov rax, qword [var_20h]
mov dword [rax], 4
test r13b, r13b
je 0x800e4d1
mov rax, qword [var_20h]
or dword [rax], 2
mov r12, qword [var_50h]
mov r13, qword [var_58h]
mov rdi, qword [var_60h]
cmp rdi, qword [var_30h]
je 0x800e4f5
mov rax, qword [var_70h]
lea rsi, [rax + 1]
call _ZdlPvm
add rsp, 0x88
mov rax, r12
mov rdx, r13
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
xor r12d, 1
cmp r13d, 0xa
sete al
or al, r12b
je 0x800e2c1
cmp r13d, 8
sete r12b
test r15d, r15d
sete dl
or r12b, dl
je 0x800e7c0
mov rdi, qword [var_50h]
xor r14d, r14d
mov r13d, 8
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jb 0x800e309
nop word [rax + rax]
mov rax, qword [rdi]
call qword [rax + 0x50]
mov rdi, qword [var_50h]
mov dword [var_58h], 0xffffffff
test rdi, rdi
jne 0x800e319
mov ecx, 1
jmp 0x800e334
nop word cs:[rax + rax]
mov ebp, dword [var_58h]
mov rdi, qword [var_50h]
cmp ebp, 0xffffffff
jne 0x800e5a7
test rdi, rdi
jne 0x800e718
movzx ecx, byte [rbx + 0x20]
test r12b, r12b
jne 0x800e296
nop dword [rax]
mov byte [var_3ch], 0
jmp 0x800e360
nop word [rax + rax]
lea eax, [var_bp_30h]
cmp eax, 9
ja 0x800e6b8
mov ebp, eax
cmp qword [rsp], r15
jb 0x800e41b
mov rax, qword [var_10h]
movsxd rbp, ebp
mov rdi, qword [var_50h]
mov rdx, rbp
imul rax, r15
not rdx
cmp rax, rdx
lea r15, [rax + rbp]
mov rax, qword [rdi + 0x10]
seta dl
add r14d, 1
or byte [var_3dh], dl
cmp rax, qword [rdi + 0x18]
jb 0x800e433
mov rax, qword [rdi]
call qword [rax + 0x50]
mov rdi, qword [var_50h]
mov dword [var_58h], 0xffffffff
test rdi, rdi
jne 0x800e443
mov r13d, 1
jmp 0x800e45f
nop
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800e9f0
mov esi, dword [rax]
xor eax, eax
cmp esi, 0xffffffff
jne 0x800e34f
mov qword [var_40h], 0
mov eax, edx
jmp 0x800e34f
nop dword [rax + rax]
mov rdi, qword [var_50h]
mov ebp, dword [var_58h]
test rdi, rdi
je 0x800e3f0
cmp ebp, 0xffffffff
jne 0x800e3f0
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800eb2a
mov ebp, dword [rax]
mov eax, ebp
cmp eax, 0xffffffff
jne 0x800e3f0
mov qword [var_50h], 0
jmp 0x800e3f0
nop dword [rax]
lea eax, [var_61h]
cmp eax, 5
ja 0x800e700
sub ebp, 0x57
jmp 0x800e411
nop dword [rax + rax]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800eac0
mov edx, dword [rax]
xor eax, eax
cmp edx, 0xffffffff
jne 0x800e47c
mov qword [var_40h], 0
mov eax, ebp
jmp 0x800e47c
nop dword [rax + rax]
lea eax, [var_41h]
cmp eax, 5
ja 0x800e7d0
sub ebp, 0x37
jmp 0x800e411
nop dword [rax]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800eb1d
mov ebp, dword [rax]
cmp ebp, 0xffffffff
jne 0x800e5a7
mov qword [var_50h], 0
jmp 0x800e5a7
nop
mov rbp, qword [var_28h]
movsx esi, r14b
mov rdi, rbp
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
add byte [rax], al
add byte [rax], al
mov rsi, qword [rbx + 0x18]
mov rdi, qword [rbx + 0x10]
mov rdx, rbp
call _ZSt17__verify_groupingPKcmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
test al, al
jne 0x800e770
mov rax, qword [var_20h]
mov dword [rax], 4
test r14d, r14d
jne 0x800e787
cmp r12b, 1
je 0x800e787
cmp qword [var_68h], 0
je 0x800e4aa
cmp byte [var_3ch], 0
jne 0x800e4aa
cmp byte [var_3dh], 0
je 0x800ea80
mov rax, qword [arg_c0h]
mov qword [rax], 0xffffffffffffffff
mov rax, qword [var_20h]
mov dword [rax], 4
jmp 0x800e4c4
nop dword [rax]
add r14d, 1
mov r12d, eax
jmp 0x800e2f6
nop dword [rax]
xor r13d, r13d
jmp 0x800e48b
nop dword [rax + rax]
mov qword [var_50h], 0
mov ecx, 1
jmp 0x800e334
nop dword [rax + rax]
cmp byte [var_3ch], 0
jne 0x800eb8d
lea rax, [rbx + 0xf0]
mov byte [var_3dh], 0
xor r15d, r15d
mov qword [var_8h], rax
movzx eax, byte [rbx + 0x20]
test al, al
je 0x800e828
cmp dword [rbx + 0x4c], ebp
je 0x800e90a
cmp ebp, dword [rbx + 0x48]
je 0x800e7d0
mov esi, ebp
mov rbp, qword [var_8h]
mov rdx, qword [var_18h]
mov rdi, rbp
call wmemchr
test rax, rax
je 0x800e7d0
sub rax, rbp
sar rax, 2
lea edx, [rax - 6]
cmp eax, 0xf
cmovg eax, edx
cmp qword [rsp], r15
jb 0x800e960
mov rdx, qword [var_10h]
cdqe
mov rcx, rax
imul rdx, r15
not rcx
cmp rdx, rcx
lea r15, [rdx + rax]
seta cl
or byte [var_3dh], cl
add r14d, 1
mov rdi, qword [var_50h]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800e937
add rax, 4
mov dword [var_58h], 0xffffffff
mov qword [rdi + 0x10], rax
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800eb44
mov eax, dword [rax]
xor ebp, ebp
cmp eax, 0xffffffff
je 0x800eaf0
mov rdi, qword [var_40h]
cmp dword [var_48h], 0xffffffff
sete al
test rdi, rdi
setne dl
and dl, al
mov byte [var_3eh], dl
jne 0x800e970
cmp bpl, al
je 0x800e48b
lea rdi, [var_50h]
call _ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv
mov ebp, eax
movzx eax, byte [rbx + 0x20]
test al, al
je 0x800e828
cmp dword [rbx + 0x4c], ebp
jne 0x800e828
test r14d, r14d
je 0x800eba5
mov rdi, qword [var_28h]
movsx esi, r14b
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
mov rdi, qword [var_50h]
xor r14d, r14d
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jb 0x800e896
mov rax, qword [rdi]
call qword [rax + 0x50]
mov rdi, qword [var_50h]
mov dword [var_58h], 0xffffffff
test rdi, rdi
jne 0x800e8a6
mov ebp, r13d
jmp 0x800e8c1
nop dword [rax + rax]
mov byte [var_3dh], r13b
jmp 0x800e883
nop word [rax + rax]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800eb37
mov edx, dword [rax]
xor eax, eax
cmp edx, 0xffffffff
jne 0x800e8e0
mov qword [var_40h], 0
movzx eax, byte [var_3eh]
jmp 0x800e8e0
nop
mov rdi, qword [var_28h]
mov esi, 0x20
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
add byte [rax], al
add byte [rax], al
jmp 0x800e3a6
nop dword [rax]
mov byte [var_3fh], 0
movzx ecx, byte [rbx + 0x20]
xor ebp, ebp
xor r14d, r14d
mov byte [var_3ch], 1
xor r12d, r12d
jmp 0x800e360
nop dword [rax + rax]
mov qword [var_50h], 0
mov r13d, 1
jmp 0x800e45f
nop dword [rax]
mov rax, qword [rdi]
mov byte [var_3dh], cl
mov byte [var_3ch], dl
call qword [rax + 0x48]
movzx ecx, byte [var_3dh]
movzx edx, byte [var_3ch]
mov esi, eax
jmp 0x800e650
nop
mov rax, qword [rdi]
call qword [rax + 0x48]
jmp 0x800e329
nop dword [rax + rax]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800eb64
mov ecx, dword [rax]
xor eax, eax
cmp ecx, 0xffffffff
jne 0x800e1de
mov qword [var_40h], 0
mov eax, edx
jmp 0x800e1de
nop dword [rax + rax]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x800eb59
mov eax, dword [rax]
xor ebp, ebp
cmp eax, 0xffffffff
jne 0x800e1c3
mov qword [var_50h], 0
mov ebp, r12d
jmp 0x800e1c3
nop dword [rax]
mov rax, r15
neg rax
cmp byte [var_3fh], 0
cmovne r15, rax
mov rax, qword [arg_c0h]
mov qword [rax], r15
jmp 0x800e4c4
nop
mov byte [var_3fh], 0
jmp 0x800e290
mov rdi, r12
call _ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv
movzx ecx, byte [rbx + 0x20]
mov ebp, eax
jmp 0x800e290
nop dword [rax]
mov rax, qword [rdi]
call qword [rax + 0x48]
mov edx, eax
jmp 0x800e6e0
nop dword [rax]
mov rax, qword [rdi]
call qword [rax + 0x48]
jmp 0x800e453
nop dword [rax + rax]
mov byte [var_3ch], 0
mov r12d, 1
jmp 0x800e360
mov qword [var_50h], 0
mov ebp, r13d
jmp 0x800e8c1
mov byte [var_3ch], al
movsxd rax, r13d
mov r12d, 1
mov qword [var_18h], rax
mov dword [var_8h], r13d
jmp 0x800e377
mov rax, qword [rdi]
call qword [rax + 0x48]
mov ebp, eax
jmp 0x800e728
mov rax, qword [rdi]
call qword [rax + 0x48]
mov ebp, eax
jmp 0x800e69d
mov rax, qword [rdi]
call qword [rax + 0x48]
mov edx, eax
jmp 0x800e980
mov rax, qword [rdi]
call qword [rax + 0x48]
jmp 0x800e8b6
call .text
jmp 0x800e237
mov rax, qword [rdi]
call qword [rax + 0x48]
jmp 0x800ea60
mov rax, qword [rdi]
mov byte [var_3ch], dl
call qword [rax + 0x48]
movzx edx, byte [var_3ch]
mov ecx, eax
jmp 0x800ea30
movzx r13d, byte [var_3ch]
xor r15d, r15d
mov byte [var_3ch], 0
jmp 0x800e48b
movzx r13d, byte [var_3ch]
mov byte [var_3dh], 0
xor r15d, r15d
mov byte [var_3ch], 0
jmp 0x800e48b
mov byte [var_3ch], al
xor r13d, r13d
jmp 0x800e48b
