push r15
push r14
push r13
mov r13d, edx
mov rdx, r8
push r12
lea eax, [r13 - 1]
mov r12, rdi
push rbp
mov rbp, rcx
push rbx
sub rsp, 0x58
cmp eax, 2
ja 0x8000c20
lea r15, [var_30h]
mov rbx, rsi
lea r14, [var_40h]
xor r8d, r8d
lea rdi, [var_10h]
mov rcx, r15
mov rsi, rbp
mov qword [var_30h], r14
mov dword [var_40h], 0x2d465455
mov byte [var_44h], 0x38
mov qword [var_38h], 5
mov byte [var_45h], 0
call _ZN5boost6locale4conv6to_utfIwEENSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEEPKcSB_RKNS4_IcS6_IcESaIcEEENS1_11method_typeE
mov rdi, qword [var_30h]
cmp rdi, r14
je 0x8000aff
mov rax, qword [var_40h]
lea rsi, [rax + 1]
call _ZdlPvm
lea rdi, [rbx + 0x10]
call _ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale
movabs rdx, 0x1fffffffffffffff
mov qword [rsp], rax
mov rax, qword [var_18h]
add rax, 1
cmp rax, rdx
ja .LC0
lea rbx, [rax*4]
test rax, rax
je 0x8000c80
mov rdi, rbx
call _Znwm
mov rbp, rax
add rax, rbx
mov qword [var_8h], rax
cmp rax, rbp
je 0x8000b5e
mov rdx, rbx
xor esi, esi
mov rdi, rbp
call memset
sub rbx, 4
jne 0x8000cf0
mov rax, qword [rsp]
add rbx, rbp
mov rdi, qword [rsp]
mov rsi, rbp
mov rdx, rbx
mov rax, qword [rax]
cmp r13d, 1
je 0x8000c70
call qword [rax + 0x48]
xor r8d, r8d
mov rcx, r15
mov rdx, rbx
mov rsi, rbp
mov rdi, r12
mov qword [var_30h], r14
mov dword [var_40h], 0x2d465455
mov byte [var_44h], 0x38
mov qword [var_38h], 5
mov byte [var_45h], 0
call _ZN5boost6locale4conv8from_utfIwEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKT_SB_RKS8_NS1_11method_typeE
mov rdi, qword [var_30h]
cmp rdi, r14
je 0x8000bd5
mov rax, qword [var_40h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rsi, qword [var_8h]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
mov rdi, qword [var_10h]
lea rax, [var_20h]
cmp rdi, rax
je 0x8000c06
mov rax, qword [var_20h]
lea rsi, [rax*4 + 4]
call _ZdlPvm
add rsp, 0x58
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
lea rdi, [rdi + 0x10]
mov qword [r12], rdi
test rcx, rcx
jne 0x8000c36
test r8, r8
jne .LC1
sub rdx, rbp
mov qword [var_30h], rdx
mov r13, rdx
cmp rdx, 0xf
ja 0x8000cb0
cmp rdx, 1
jne 0x8000c68
movzx eax, byte [rbp]
mov byte [r12 + 0x10], al
mov qword [r12 + 8], r13
mov byte [rdi + r13], 0
jmp 0x8000c06
nop word [rax + rax]
test rdx, rdx
je 0x8000c56
jmp 0x8000cd0
nop
call qword [rax + 0x38]
jmp 0x8000b89
nop dword [rax + rax]
mov qword [var_8h], 0
mov rsi, qword [var_10h]
xor ebp, ebp
mov rbx, 0xfffffffffffffffc
mov rdx, rbx
mov rdi, rbp
call memmove
jmp 0x8000b68
nop word [rax + rax]
mov rdi, r12
lea rsi, [var_30h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [r12], rax
mov rdi, rax
mov rax, qword [var_30h]
mov qword [r12 + 0x10], rax
mov rdx, r13
mov rsi, rbp
call memcpy
mov r13, qword [var_30h]
mov rdi, qword [r12]
jmp 0x8000c56
nop dword [rax]
mov rsi, qword [var_10h]
jmp 0x8000c97
lea rdi, [0x08000cfe]
call _ZSt20__throw_length_errorPKc
lea rdi, [0x08000d0a]
call _ZSt19__throw_logic_errorPKc
mov rbx, rax
jmp 0x8000d31
mov rbp, rax
jmp 0x8000d44
mov rdi, qword [rsp + 0x30]
cmp rdi, r14
je 0x8000d31
mov rax, qword [rsp + 0x40]
lea rsi, [rax + 1]
call _ZdlPvm
mov rsi, qword [var_8h]
mov rdi, rbp
sub rsi, rbp
mov rbp, rbx
call _ZdlPvm
mov rdi, qword [var_10h]
lea rax, [var_20h]
cmp rdi, rax
je 0x8000d87
mov rax, qword [var_20h]
lea rsi, [rax*4 + 4]
call _ZdlPvm
jmp 0x8000d87
mov rbx, rax
jmp 0x8000d19
mov rbp, rax
mov rdi, qword [rsp + 0x30]
cmp rdi, r14
je 0x8000d87
mov rax, qword [rsp + 0x40]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, rbp
call _Unwind_Resume
