push r15
mov r15d, 8
push r14
push r13
push r12
push rbp
mov rbp, r8
push rbx
sub rsp, 0x98
mov qword [var_60h], rdi
lea rdi, [r8 + 0xd0]
mov qword [var_50h], rdx
mov qword [var_68h], rsi
mov qword [var_58h], rcx
mov qword [var_28h], r9
call .text
mov edx, dword [arg_18h]
mov rbx, rax
and edx, 0x4a
cmp edx, 0x40
je 0x801655f
cmp edx, 8
mov r15d, 0x10
mov eax, 0xa
cmovne r15d, eax
mov rdi, qword [var_60h]
cmp dword [var_68h], 0xffffffff
sete bpl
test rdi, rdi
setne al
and al, bpl
mov r12d, eax
jne 0x8016e40
mov rdi, qword [var_50h]
cmp dword [var_58h], 0xffffffff
sete r12b
test rdi, rdi
setne al
and al, r12b
mov r13d, eax
jne 0x8016e00
mov dword [var_8h], edx
cmp r12b, bpl
je 0x8016d90
lea r12, [var_60h]
mov rdi, r12
call _ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv
add byte [rax], al
add byte [rax], al
cmp al, byte [rbx + 0x6e]
mov edx, dword [var_8h]
movzx ecx, byte [rbx + 0x20]
mov r13d, eax
sete byte [var_4fh]
je 0x80165d7
cmp al, byte [rbx + 0x6f]
jne 0x8016ea8
test cl, cl
jne 0x8016650
cmp byte [rbx + 0x48], al
je 0x8016658
mov rdi, qword [var_60h]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae .text
add rax, 1
mov qword [rdi + 0x10], rax
lea rsi, [var_50h]
mov rdi, r12
mov dword [var_8h], edx
mov dword [var_68h], 0xffffffff
call .text
mov edx, dword [var_8h]
test al, al
mov ebp, eax
je 0x8016eb2
movzx ecx, byte [rbx + 0x20]
xor r14d, r14d
xor r12d, r12d
cmp r15d, 0x10
jne 0x8016731
mov qword [var_20h], 0x16
mov dword [var_48h], 0x16
jmp 0x801673e
nop dword [rax]
cmp byte [rbx + 0x49], al
jne 0x80165db
nop dword [rax]
xor r12d, r12d
xor r14d, r14d
mov eax, r12d
mov r12d, edx
mov edx, eax
test cl, cl
je 0x8016674
cmp byte [rbx + 0x49], r13b
je 0x8016988
cmp byte [rbx + 0x48], r13b
je 0x8016988
cmp byte [rbx + 0x72], r13b
je 0x80168e8
test dl, dl
je 0x8016988
cmp byte [rbx + 0x70], r13b
je 0x80166a0
cmp byte [rbx + 0x71], r13b
jne 0x8016ef8
cmp r15d, 0x10
sete al
test r12d, r12d
sete dl
or al, dl
je 0x8016f05
xor r14d, r14d
xor edx, edx
mov r15d, 0x10
mov rdi, qword [var_60h]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x8016930
add rax, 1
mov dword [var_68h], 0xffffffff
mov qword [rdi + 0x10], rax
mov rax, qword [rdi + 0x18]
xor esi, esi
cmp qword [rdi + 0x10], rax
jae 0x8016dc8
mov rdi, qword [var_50h]
cmp dword [var_58h], 0xffffffff
sete bpl
test rdi, rdi
setne al
and al, bpl
mov ecx, eax
jne 0x8016a30
cmp sil, bpl
jne 0x8016960
movzx ecx, byte [rbx + 0x20]
mov r12d, edx
mov ebp, 1
cmp r15d, 0x10
je 0x8016636
movsxd rax, r15d
mov dword [var_48h], r15d
mov qword [var_20h], rax
lea rax, [var_70h]
mov byte [var_80h], 0
mov qword [var_38h], rax
lea rax, [var_80h]
mov qword [var_40h], rax
mov qword [var_70h], rax
mov qword [var_78h], 0
test cl, cl
jne 0x8016db0
movsxd rsi, r15d
mov rax, 0xffffffffffffffff
xor edx, edx
movzx r15d, byte [rbx + 0x88]
div rsi
mov qword [var_18h], rsi
mov qword [var_10h], rax
test r15b, r15b
jne 0x8016bd0
mov byte [var_4eh], 0
test bpl, bpl
jne 0x8016fb9
mov qword [var_8h], 0
movzx eax, byte [var_20h]
add eax, 0x30
mov byte [var_20h], al
cmp dword [var_48h], 0xa
movsx edx, r13b
jg 0x8016998
cmp r13b, 0x2f
jle 0x8016bc0
cmp byte [var_20h], r13b
jle 0x8016bc0
sub edx, 0x30
mov rsi, qword [var_8h]
cmp qword [var_10h], rsi
jae 0x80169c8
mov rdi, qword [var_60h]
mov byte [var_4eh], 1
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x8016a03
add rax, 1
mov dword [var_68h], 0xffffffff
mov qword [rdi + 0x10], rax
mov rax, qword [rdi + 0x18]
xor r15d, r15d
cmp qword [rdi + 0x10], rax
jae 0x8016ed0
mov rdi, qword [var_50h]
cmp dword [var_58h], 0xffffffff
sete al
test rdi, rdi
setne r13b
and r13b, al
jne 0x8016ab8
cmp r15b, al
jne 0x8016a80
mov r15d, 1
cmp qword [var_78h], 0
jne 0x8016b30
cmp r12b, 1
je 0x8016b77
test r14d, r14d
jne 0x8016b77
mov rax, qword [arg_d0h]
mov qword [rax], 0
mov rax, qword [var_28h]
mov dword [rax], 4
test r15b, r15b
je 0x80168a2
mov rax, qword [var_28h]
or dword [rax], 2
mov r12, qword [var_60h]
mov r13, qword [var_68h]
mov rdi, qword [var_70h]
cmp rdi, qword [var_40h]
je 0x80168c9
mov rax, qword [var_80h]
lea rsi, [rax + 1]
call _ZdlPvm
add rsp, 0x98
mov rax, r12
mov rdx, r13
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
xor edx, 1
cmp r15d, 0xa
sete al
or al, dl
je 0x8016690
cmp r15d, 8
sete cl
test r12d, r12d
sete dl
or dl, cl
je 0x8016bb0
mov rdi, qword [var_60h]
xor r14d, r14d
mov r15d, 8
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jb 0x80166d3
nop dword [rax + rax]
mov rax, qword [rdi]
mov byte [var_8h], dl
call qword [rax + 0x50]
mov rdi, qword [var_60h]
mov dword [var_68h], 0xffffffff
movzx edx, byte [var_8h]
test rdi, rdi
jne 0x80166e3
mov esi, 1
jmp 0x80166f3
nop
mov r13d, dword [var_68h]
mov rdi, qword [var_60h]
cmp r13d, 0xffffffff
jne 0x8016979
test rdi, rdi
jne 0x8016b10
movzx ecx, byte [rbx + 0x20]
test dl, dl
jne 0x8016666
nop dword [rax]
mov r12d, edx
xor ebp, ebp
jmp 0x8016727
nop word [rax + rax]
lea eax, [r13 - 0x30]
cmp al, 9
jbe 0x80167e4
lea eax, [r13 - 0x61]
cmp al, 5
ja 0x8016af0
mov rsi, qword [var_8h]
sub edx, 0x57
cmp qword [var_10h], rsi
jb 0x80167f7
nop dword [rax + rax]
mov rax, qword [var_18h]
movsxd rdx, edx
mov rdi, qword [var_60h]
mov rcx, rdx
imul rax, rsi
not rcx
cmp rax, rcx
seta cl
add rax, rdx
or byte [var_4eh], cl
add r14d, 1
mov qword [var_8h], rax
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jb 0x801680f
mov rax, qword [rdi]
call qword [rax + 0x50]
mov rdi, qword [var_60h]
mov dword [var_68h], 0xffffffff
test rdi, rdi
jne 0x801681f
mov r15d, 1
jmp 0x8016830
nop word [rax + rax]
mov rax, qword [rdi + 0x18]
xor ebp, ebp
cmp qword [rdi + 0x10], rax
jb 0x8016712
mov rax, qword [rdi]
mov byte [var_10h], dl
mov byte [var_4eh], cl
mov byte [var_8h], sil
call qword [rax + 0x48]
movzx esi, byte [var_8h]
movzx ecx, byte [var_4eh]
cmp eax, 0xffffffff
movzx edx, byte [var_10h]
jne 0x8016712
mov qword [var_50h], 0
mov ebp, ecx
jmp 0x8016712
nop dword [rax + rax]
mov r13d, dword [var_68h]
mov rdi, qword [var_60h]
cmp r13d, 0xffffffff
jne 0x80167c0
test rdi, rdi
je 0x80167c0
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x8016f48
movzx r13d, byte [rax]
jmp 0x80167c0
nop dword [rax]
mov rcx, qword [rdi + 0x18]
xor eax, eax
cmp qword [rdi + 0x10], rcx
jb 0x801684d
mov rax, qword [rdi]
call qword [rax + 0x48]
mov r8d, eax
xor eax, eax
cmp r8d, 0xffffffff
jne 0x801684d
mov qword [var_50h], 0
mov eax, r13d
jmp 0x801684d
nop
sub r13d, 0x41
cmp r13b, 5
ja 0x8016bc0
sub edx, 0x37
jmp 0x80167e7
nop word cs:[rax + rax]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x8016f1f
movzx r13d, byte [rax]
jmp 0x8016979
nop word [rax + rax]
mov r13, qword [var_38h]
movsx esi, r14b
mov rdi, r13
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
mov rsi, qword [rbx + 0x18]
mov rdi, qword [rbx + 0x10]
mov rdx, r13
call _ZSt17__verify_groupingPKcmRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
test al, al
jne 0x8016b60
mov rax, qword [var_28h]
mov dword [rax], 4
test r14d, r14d
jne 0x8016b77
cmp r12b, 1
je 0x8016b77
cmp qword [var_78h], 0
je 0x801687b
test bpl, bpl
jne 0x801687b
cmp byte [var_4eh], 0
je 0x8016e80
mov rax, qword [arg_d0h]
mov qword [rax], 0xffffffffffffffff
mov rax, qword [var_28h]
mov dword [rax], 4
jmp 0x8016895
nop word [rax + rax]
add r14d, 1
mov edx, eax
jmp 0x80166c0
nop dword [rax + rax]
xor r15d, r15d
jmp 0x801685c
nop dword [rax + rax]
test bpl, bpl
jne 0x8016fcc
lea rax, [rbx + 0x72]
mov byte [var_4eh], 0
mov qword [var_30h], rax
movzx eax, byte [rbx + 0x20]
mov qword [var_8h], 0
test al, al
je 0x8016c02
cmp r13b, byte [rbx + 0x49]
je 0x8016ce6
cmp r13b, byte [rbx + 0x48]
je 0x8016bc0
movsx esi, r13b
mov r13, qword [var_30h]
mov rdx, qword [var_20h]
mov rdi, r13
call memchr
test rax, rax
je 0x8016bc0
sub rax, r13
mov rsi, qword [var_8h]
lea edx, [rax - 6]
cmp eax, 0xf
cmovg eax, edx
cmp qword [var_10h], rsi
jb 0x8016d40
mov rdx, qword [var_18h]
cdqe
mov rcx, rax
imul rdx, rsi
not rcx
cmp rdx, rcx
seta cl
add rax, rdx
or byte [var_4eh], cl
add r14d, 1
mov qword [var_8h], rax
mov rdi, qword [var_60h]
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jae 0x8016d13
add rax, 1
mov dword [var_68h], 0xffffffff
mov qword [rdi + 0x10], rax
mov byte [var_48h], 0
mov rax, qword [rdi + 0x18]
cmp qword [rdi + 0x10], rax
jae 0x8016f80
mov rdi, qword [var_50h]
cmp dword [var_58h], 0xffffffff
sete al
test rdi, rdi
setne r13b
and r13b, al
jne 0x8016d50
cmp byte [var_48h], al
je 0x801685c
lea rdi, [var_60h]
call _ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv
mov r13d, eax
movzx eax, byte [rbx + 0x20]
test al, al
je 0x8016c02
cmp r13b, byte [rbx + 0x49]
jne 0x8016c02
test r14d, r14d
je 0x8016fe4
mov rdi, qword [var_38h]
movsx esi, r14b
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
mov rdi, qword [var_60h]
xor r14d, r14d
mov rax, qword [rdi + 0x10]
cmp rax, qword [rdi + 0x18]
jb 0x8016c79
mov rax, qword [rdi]
call qword [rax + 0x50]
mov rdi, qword [var_60h]
mov dword [var_68h], 0xffffffff
test rdi, rdi
jne 0x8016c89
mov byte [var_48h], r15b
jmp 0x8016c9c
nop dword [rax]
mov byte [var_4eh], r15b
jmp 0x8016c66
nop word [rax + rax]
mov rcx, qword [rdi + 0x18]
xor eax, eax
cmp qword [rdi + 0x10], rcx
jb 0x8016cb9
mov rax, qword [rdi]
call qword [rax + 0x48]
mov r8d, eax
xor eax, eax
cmp r8d, 0xffffffff
jne 0x8016cb9
mov qword [var_50h], 0
mov eax, r13d
jmp 0x8016cb9
nop word cs:[rax + rax]
mov byte [var_4fh], 0
movzx ecx, byte [rbx + 0x20]
xor r13d, r13d
xor r14d, r14d
mov ebp, 1
xor r12d, r12d
jmp 0x8016727
nop dword [rax]
mov rdi, qword [var_38h]
mov esi, 0x20
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
jmp 0x8016773
nop dword [rax]
mov rax, qword [rdi]
mov byte [var_4eh], dl
mov byte [var_8h], sil
call qword [rax + 0x48]
movzx esi, byte [var_8h]
movzx edx, byte [var_4eh]
cmp eax, 0xffffffff
jne 0x80166f3
mov qword [var_60h], 0
mov esi, 1
jmp 0x80166f3
nop dword [rax]
mov rax, qword [rdi + 0x18]
xor r12d, r12d
cmp qword [rdi + 0x10], rax
jb 0x801659f
mov rax, qword [rdi]
mov dword [var_8h], edx
call qword [rax + 0x48]
mov edx, dword [var_8h]
cmp eax, 0xffffffff
jne 0x801659f
mov qword [var_50h], 0
mov r12d, r13d
jmp 0x801659f
nop dword [rax]
mov rax, qword [rdi + 0x18]
xor ebp, ebp
cmp qword [rdi + 0x10], rax
jb 0x801657f
mov rax, qword [rdi]
mov dword [var_8h], edx
call qword [rax + 0x48]
mov edx, dword [var_8h]
cmp eax, 0xffffffff
jne 0x801657f
mov qword [var_60h], 0
mov ebp, r12d
jmp 0x801657f
nop dword [rax + rax]
mov rcx, qword [var_8h]
mov rsi, qword [arg_d0h]
mov rax, rcx
neg rax
cmp byte [var_4fh], 0
cmove rax, rcx
mov qword [rsi], rax
jmp 0x8016895
nop dword [rax]
mov byte [var_4fh], 0
jmp 0x8016658
mov rdi, r12
mov dword [var_8h], edx
call _ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv
movzx ecx, byte [rbx + 0x20]
mov edx, dword [var_8h]
mov r13d, eax
jmp 0x8016658
nop
mov rax, qword [rdi]
call qword [rax + 0x48]
cmp eax, 0xffffffff
jne 0x8016830
mov qword [var_60h], 0
mov r15d, 1
jmp 0x8016830
nop dword [rax + rax]
xor ebp, ebp
mov r12d, 1
jmp 0x8016727
mov ebp, eax
movsxd rax, r15d
mov dword [var_48h], r15d
mov r12d, 1
mov qword [var_20h], rax
jmp 0x801673e
mov rax, qword [rdi]
mov byte [var_8h], dl
call qword [rax + 0x48]
movzx edx, byte [var_8h]
cmp eax, 0xffffffff
mov r13d, eax
jne 0x8016979
mov qword [var_60h], 0
jmp 0x8016979
mov rax, qword [rdi]
call qword [rax + 0x48]
mov edx, eax
mov r13d, eax
cmp eax, 0xffffffff
jne 0x80167c0
mov qword [var_60h], 0
cmp dword [var_48h], 0xa
jle 0x8016bc0
mov r13d, 0xffffffff
jmp 0x80169a4
nop dword [rax + rax]
mov rax, qword [rdi]
call qword [rax + 0x48]
mov byte [var_48h], 0
cmp eax, 0xffffffff
jne 0x8016c9c
mov qword [var_60h], 0
mov byte [var_48h], r15b
jmp 0x8016c9c
mov dword [var_8h], edx
call .text
mov edx, dword [var_8h]
jmp 0x80165fb
mov qword [var_8h], 0
mov r15d, ebp
xor ebp, ebp
jmp 0x801685c
mov r15d, ebp
mov byte [var_4eh], 0
xor ebp, ebp
mov qword [var_8h], 0
jmp 0x801685c
xor r15d, r15d
mov ebp, eax
jmp 0x801685c
