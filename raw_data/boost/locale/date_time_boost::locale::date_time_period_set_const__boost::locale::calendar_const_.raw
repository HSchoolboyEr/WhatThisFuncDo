push r13
push r12
mov r12, rdi
push rbp
push rbx
mov rbx, rsi
sub rsp, 8
mov rdi, qword [rdx + 0x28]
mov rax, qword [rdi]
call qword [rax]
mov ecx, dword [rbx]
mov qword [r12], rax
mov rdi, rax
test ecx, ecx
je 0x8000e9d
xor ebp, ebp
xor eax, eax
nop
mov esi, dword [rbx + 8]
mov rcx, qword [rdi]
test esi, esi
je 0x8000eb0
mov edx, dword [rbx + 0x10]
test edx, edx
je 0x8000ed0
mov r13d, dword [rbx + 0x18]
mov edx, 3
test r13d, r13d
je 0x8000e07
mov rdx, qword [rbx + 0x28]
sub rdx, qword [rbx + 0x20]
sar rdx, 3
add rdx, 4
cmp rax, rdx
jae 0x8000e9d
mov r8, qword [rcx + 8]
mov ecx, dword [rbx + 0x18]
mov edx, 3
test ecx, ecx
je 0x8000e30
mov rdx, qword [rbx + 0x28]
sub rdx, qword [rbx + 0x20]
sar rdx, 3
add rdx, 4
cmp rdx, rax
jbe .text.unlikely
cmp rax, 3
jbe 0x8000eb9
mov rdx, qword [rbx + 0x20]
lea rcx, [rdx + rax*8 - 0x20]
mov r9d, dword [rcx + 4]
mov r11d, dword [rbx + 0x10]
mov edx, 2
test r11d, r11d
je 0x8000e78
mov r10d, dword [rbx + 0x18]
mov edx, 3
test r10d, r10d
je 0x8000e78
mov rdx, qword [rbx + 0x28]
sub rdx, qword [rbx + 0x20]
sar rdx, 3
add rdx, 4
cmp rax, rdx
jae .text.unlikely
mov esi, dword [rcx]
mov edx, r9d
call r8
mov esi, dword [rbx]
lea eax, [arg_1h]
mov rdi, qword [r12]
mov rbp, rax
test esi, esi
jne 0x8000dd0
mov rax, qword [rdi]
call qword [rax + 0x10]
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop
test rax, rax
jne 0x8000e9d
mov r8, qword [rcx + 8]
lea rcx, [rbx + rax*8]
mov r9d, dword [rcx + 4]
test esi, esi
jne 0x8000e4c
mov edx, 1
jmp 0x8000e78
cmp rax, 1
ja 0x8000e9d
mov r8, qword [rcx + 8]
jmp 0x8000e39
