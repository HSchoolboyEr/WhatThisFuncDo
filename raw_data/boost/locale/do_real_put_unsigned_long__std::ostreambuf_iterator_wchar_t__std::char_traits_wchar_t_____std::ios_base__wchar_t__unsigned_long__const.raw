push r15
push r14
mov r14d, r8d
push r13
mov r13, rdx
push r12
mov r12, rcx
push rbp
mov rbp, rsi
push rbx
mov rbx, r9
sub rsp, 0x1b8
mov qword [var_8h], rdi
mov rdi, rcx
call _ZN5boost6locale8ios_info3getERSt8ios_base
mov rdi, rax
mov r15, rax
call _ZNK5boost6locale8ios_info13display_flagsEv
cmp rax, 7
ja 0x800d6e0
lea rdx, [0x0800d5d9]
movsxd rax, dword [rdx + rax*4]
add rax, rdx
jmp rax
nop word [rax + rax]
mov rdi, r15
call _ZNK5boost6locale8ios_info21date_time_pattern_setEv
mov r15, rax
mov rax, qword [rax]
test rax, rax
je .text.unlikely
mov rdi, qword [rax + 8]
mov rsi, qword [0x0800d60a]
cmp rdi, rsi
je 0x800d625
cmp byte [rdi], 0x2a
je .text.unlikely
call strcmp
test eax, eax
jne .text.unlikely
lea rax, [rsp + 0x30]
mov r15, qword [r15 + 0x10]
mov qword [rsp + 0x10], rax
lea rax, [rsp + 0x40]
mov qword [rsp + 8], rax
mov qword [rsp + 0x30], rax
test r15, r15
je .LC6
mov rdi, r15
call wcslen
shl rax, 2
mov r8, rax
sar r8, 2
mov qword [rsp + 0x28], r8
cmp rax, 0xc
ja 0x800d930
mov rdi, qword [rsp + 8]
mov rax, r8
cmp r8, 1
je 0x800d920
test r8, r8
jne 0x800d900
mov qword [rsp + 0x38], rax
mov r9, qword [rsp + 0x10]
mov r8, rbx
mov ecx, r14d
mov dword [rdi + rax*4], 0
mov rdx, r12
mov rdi, rbp
mov rsi, r13
call .text
mov rdi, qword [rsp + 0x30]
mov r12, rax
mov r13, rdx
cmp rdi, qword [rsp + 8]
je 0x800d83a
mov rax, qword [rsp + 0x40]
lea rsi, [rax*4 + 4]
call _ZdlPvm
jmp 0x800d83a
nop word [rax + rax]
mov rdi, qword [var_8h]
mov r9, rbx
mov r8d, r14d
mov rcx, r12
add rsp, 0x1b8
mov edx, r13d
mov rsi, rbp
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp _ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_.isra.0
nop word [rax + rax]
lea rax, [arg_30h]
mov rdi, rax
mov qword [arg_10h], rax
call _ZNSt7__cxx1119basic_ostringstreamIwSt11char_traitsIwESaIwEEC1Ev
call _ZNSt6locale7classicEv
mov rdx, rax
lea r15, [arg_a0h]
lea rax, [arg_28h]
mov rsi, r15
mov rdi, rax
mov qword [arg_18h], rax
call _ZNSt9basic_iosIwSt11char_traitsIwEE5imbueERKSt6locale
mov rdi, qword [arg_18h]
call _ZNSt6localeD1Ev
mov eax, dword [r12 + 0x18]
mov r9, rbx
mov r8d, r14d
movdqu xmm1, xmmword [r12 + 8]
mov rcx, r15
mov edx, r13d
mov rsi, rbp
mov rdi, qword [arg_8h]
mov dword [arg_b8h], eax
movups xmmword [arg_a8h], xmm1
call _ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_.isra.0
mov qword [r12 + 0x10], 0
mov r12, rax
lea rax, [0x0800d798]
xor r13d, r13d
mov qword [arg_a0h], rax
lea rbx, [0x0800d7aa]
lea rax, [0x0800d7b1]
mov r13b, dl
movq xmm2, rax
movq xmm0, rbx
mov rdi, qword [arg_80h]
lea rax, [arg_90h]
punpcklqdq xmm0, xmm2
movaps xmmword [arg_30h], xmm0
cmp rdi, rax
je 0x800d7f1
mov rax, qword [arg_90h]
lea rsi, [rax*4 + 4]
call _ZdlPvm
lea rax, [0x0800d7f8]
lea rdi, [arg_70h]
mov qword [arg_38h], rax
call _ZNSt6localeD1Ev
mov rax, qword [0x0800d80e]
mov rdx, qword [0x0800d815]
mov rdi, r15
mov qword [arg_30h], rax
mov rax, qword [rax - 0x18]
mov qword [rsp + rax + 0x30], rdx
lea rax, [0x0800d82d]
mov qword [arg_a0h], rax
call _ZNSt8ios_baseD2Ev
add rsp, 0x1b8
mov rax, r12
mov rdx, r13
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
