push r12
mov r12, rdi
push rbp
push rbx
mov r10d, dword [rsi]
test r10d, r10d
je 0x8000fdf
mov rbx, rsi
xor ebp, ebp
xor eax, eax
nop word [rax + rax]
mov rdi, qword [r12]
mov esi, dword [rbx + 8]
mov rcx, qword [rdi]
test esi, esi
je 0x8000ff8
mov r9d, dword [rbx + 0x10]
test r9d, r9d
je 0x8001018
mov r8d, dword [rbx + 0x18]
mov edx, 3
test r8d, r8d
je 0x8000f4d
mov rdx, qword [rbx + 0x28]
sub rdx, qword [rbx + 0x20]
sar rdx, 3
add rdx, 4
cmp rax, rdx
jae 0x8000fe3
mov r8, qword [rcx + 8]
mov ecx, dword [rbx + 0x18]
mov edx, 3
test ecx, ecx
je 0x8000f76
mov rdx, qword [rbx + 0x28]
sub rdx, qword [rbx + 0x20]
sar rdx, 3
add rdx, 4
cmp rax, rdx
jae .text.unlikely
cmp rax, 3
jbe 0x8001001
mov rdx, qword [rbx + 0x20]
lea rcx, [rdx + rax*8 - 0x20]
mov r9d, dword [rcx + 4]
mov r11d, dword [rbx + 0x10]
mov edx, 2
test r11d, r11d
je 0x8000fbe
mov r10d, dword [rbx + 0x18]
mov edx, 3
test r10d, r10d
je 0x8000fbe
mov rdx, qword [rbx + 0x28]
sub rdx, qword [rbx + 0x20]
sar rdx, 3
add rdx, 4
cmp rax, rdx
jae .text.unlikely
mov esi, dword [rcx]
mov edx, r9d
call r8
mov esi, dword [rbx]
lea eax, [arg_1h]
mov rbp, rax
test esi, esi
jne 0x8000f10
mov rdi, qword [r12]
mov rax, qword [rdi]
call qword [rax + 0x10]
mov rax, r12
pop rbx
pop rbp
pop r12
ret
nop dword [rax]
test rax, rax
jne 0x8000fe3
mov r8, qword [rcx + 8]
lea rcx, [rbx + rax*8]
mov r9d, dword [rcx + 4]
test esi, esi
jne 0x8000f92
mov edx, 1
jmp 0x8000fbe
nop dword [rax]
cmp rax, 1
ja 0x8000fe3
mov r8, qword [rcx + 8]
jmp 0x8000f7f
