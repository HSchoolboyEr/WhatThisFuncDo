push r15
push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x48
call _ZN5boost6locale4util24check_is_simple_encodingERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
test al, al
je 0x8000b9c
mov edi, 0x808
call _Znwm
movdqa xmm0, xmmword [0x08000a40]
movdqa xmm2, xmmword [0x08000a48]
mov r12, rax
lea rax, [0x08000a52]
mov qword [r12], rax
lea rdx, [r12 + 0x208]
lea rax, [r12 + 8]
nop dword [rax + rax]
movdqa xmm1, xmm0
add rax, 0x10
paddd xmm0, xmm2
movups xmmword [rax - 0x10], xmm1
cmp rdx, rax
jne 0x8000a68
mov ebx, 0x80
lea r15, [var_20h]
lea r14, [var_1eh]
lea r13, [var_1fh]
nop dword [rax]
mov r8d, 1
mov rcx, rbp
mov rdx, r13
mov rsi, r14
mov rdi, r15
mov byte [var_1fh], 0
mov byte [var_1eh], bl
call _ZN5boost6locale4conv6to_utfIwEENSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEEPKcSB_RKNS4_IcS6_IcESaIcEEENS1_11method_typeE
cmp qword [var_28h], 1
mov rdi, qword [var_20h]
mov eax, 0xffffffff
jne 0x8000acc
mov eax, dword [rdi]
lea rdx, [var_30h]
cmp rdi, rdx
je 0x8000af0
mov rdx, qword [var_30h]
mov dword [var_ch], eax
lea rsi, [rdx*4 + 4]
call _ZdlPvm
mov eax, dword [var_ch]
mov dword [r12 + rbx*4 + 8], eax
add rbx, 1
cmp rbx, 0x100
jne 0x8000a98
lea rdi, [r12 + 0x410]
mov eax, r12d
mov qword [r12 + 0x408], 0
mov edx, 1
mov qword [r12 + 0x800], 0
and rdi, 0xfffffffffffffff8
sub eax, edi
lea ecx, [rax + 0x808]
xor eax, eax
shr ecx, 3
rep stosq qword [rdi], rax
nop
mov eax, dword [r12 + rdx*4 + 8]
cmp eax, 0xffffffff
jne 0x8000b73
add rdx, 1
cmp rdx, 0x100
jne 0x8000b40
add rsp, 0x48
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
add eax, 1
and eax, 0x3ff
mov ecx, eax
cmp byte [r12 + rcx + 0x408], 0
jne 0x8000b70
mov byte [r12 + rcx + 0x408], dl
add rdx, 1
cmp rdx, 0x100
jne 0x8000b40
jmp 0x8000b57
xor r12d, r12d
jmp 0x8000b57
