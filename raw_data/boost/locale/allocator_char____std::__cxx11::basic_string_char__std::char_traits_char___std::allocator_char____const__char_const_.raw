push r14
push r13
push r12
mov r12, rdi
push rbp
mov rbp, rdx
push rbx
lea rbx, [rdi + 0x10]
sub rsp, 0x10
mov qword [rdi], rbx
mov r14, qword [rsi]
mov r13, qword [rsi + 8]
mov rax, r14
add rax, r13
je 0x80036c1
test r14, r14
je .LC0
mov qword [var_8h], r13
cmp r13, 0xf
ja 0x8003738
cmp r13, 1
jne 0x8003728
movzx eax, byte [r14]
mov byte [r12 + 0x10], al
mov rax, rbx
mov qword [r12 + 8], r13
mov rdi, rbp
mov byte [rax + r13], 0
call strlen
mov rdx, rax
movabs rax, 0x3fffffffffffffff
sub rax, qword [r12 + 8]
cmp rdx, rax
ja 0x800377d
mov rsi, rbp
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
add rsp, 0x10
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop word [rax + rax]
test r13, r13
jne 0x8003789
mov rax, rbx
jmp 0x80036de
nop word [rax + rax]
mov rdi, r12
lea rsi, [var_8h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [r12], rax
mov rdi, rax
mov rax, qword [var_8h]
mov qword [r12 + 0x10], rax
mov rdx, r13
mov rsi, r14
call memcpy
mov r13, qword [var_8h]
mov rax, qword [r12]
jmp 0x80036de
lea rdi, [0x08003778]
call _ZSt19__throw_logic_errorPKc
lea rdi, [0x08003784]
call _ZSt20__throw_length_errorPKc
add byte [rax], al
add byte [rax], al
mov rdi, rbx
jmp 0x8003758
