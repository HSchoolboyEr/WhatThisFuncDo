push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 8
mov r13, qword [rdi]
test r13, r13
je 0x80051a8
mov rdi, qword [r13 + 0x18]
test rdi, rdi
je 0x80050bf
mov rsi, qword [r13 + 0x28]
sub rsi, rdi
call _ZdlPvm
mov rbx, qword [r13 + 8]
mov rbp, qword [r13]
cmp rbx, rbp
je 0x8005119
lea r14, [0x080050d3]
lea r15, [0x080050da]
nop word [rax + rax]
mov r12, qword [arg_28h]
test r12, r12
je 0x80050f2
lock sub dword [r12 + 8], 1
je 0x8005160
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8005150
mov rax, qword [arg_10h]
add rbp, 0x30
lea rsi, [rax + 1]
call _ZdlPvm
cmp rbx, rbp
jne 0x80050e0
mov rbp, qword [r13]
test rbp, rbp
je 0x800512d
mov rsi, qword [r13 + 0x10]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
add rsp, 8
mov rdi, r13
mov esi, 0x30
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp _ZdlPvm
nop dword [rax + rax]
add rbp, 0x30
cmp rbx, rbp
jne 0x80050e0
mov rbp, qword [r13]
jmp 0x8005119
nop
mov rax, qword [r12]
mov rax, qword [rax + 0x10]
cmp rax, r14
jne 0x80051c0
mov rdi, qword [r12 + 0x10]
test rdi, rdi
je 0x800517d
mov rax, qword [rdi]
call qword [rax + 8]
lock sub dword [r12 + 0xc], 1
jne 0x80050f2
mov rax, qword [r12]
mov rdi, r12
mov rdx, qword [rax + 0x18]
cmp rdx, r15
jne 0x80051d0
call qword [rax + 8]
jmp 0x80050f2
nop word [rax + rax]
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov rdi, r12
call rax
jmp 0x800517d
nop word [rax + rax]
call rdx
jmp 0x80050f2
