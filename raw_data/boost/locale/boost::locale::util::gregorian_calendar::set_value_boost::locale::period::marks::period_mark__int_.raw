cmp esi, 0x10
ja 0x800283e
push r14
lea rcx, [0x08001d22]
push r13
push r12
mov r12d, esi
push rbp
mov ebp, edx
mov edx, esi
push rbx
mov rbx, rdi
sub rsp, 0x70
movsxd rax, dword [rcx + rdx*4]
add rax, rcx
jmp rax
nop
sub ebp, 0x76c
mov dword [rdi + 0x64], ebp
nop dword [rax]
mov byte [rbx + 0x88], 0
add rsp, 0x70
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
mov rax, qword [rdi]
lea rcx, [0x08001d72]
add byte [rax], al
add byte [rax], al
mov rdx, qword [rax + 0x10]
cmp rdx, rcx
jne 0x80023a0
cmp byte [rdi + 0x88], 0
jne 0x8001e47
movdqu xmm7, xmmword [rdi + 0x50]
movdqu xmm6, xmmword [rdi + 0x60]
mov qword [rsp + 8], 0xffffffffffffffff
mov rax, qword [rdi + 0x80]
cmp byte [rdi + 0x89], 0
movups xmmword [rsp + 0x30], xmm7
movdqu xmm7, xmmword [rdi + 0x70]
movups xmmword [rsp + 0x40], xmm6
movups xmmword [rsp + 0x50], xmm7
mov qword [rsp + 0x60], rax
mov dword [rsp + 0x50], 0xffffffff
mov dword [rsp + 0x48], 0xffffffff
je 0x8002510
lea rdi, [rsp + 0x30]
call mktime
mov qword [rsp + 8], rax
cmp rax, 0xffffffffffffffff
je 0x8002760
movsxd rdx, dword [rbx + 0x8c]
movdqu xmm2, xmmword [rsp + 0x30]
mov byte [rbx + 0x88], 1
movdqu xmm1, xmmword [rsp + 0x40]
movdqu xmm0, xmmword [rsp + 0x50]
sub rax, rdx
movups xmmword [rbx + 0x18], xmm2
mov qword [rbx + 0x10], rax
mov rax, qword [rsp + 0x60]
movups xmmword [rbx + 0x28], xmm1
mov qword [rbx + 0x48], rax
mov qword [rbx + 0x80], rax
mov rax, qword [rbx]
movups xmmword [rbx + 0x38], xmm0
movups xmmword [rbx + 0x50], xmm2
movups xmmword [rbx + 0x60], xmm1
movups xmmword [rbx + 0x70], xmm0
mov rax, qword [rax + 0x18]
lea rdx, [0x08001e52]
mov esi, r12d
mov rdi, rbx
cmp rax, rdx
mov edx, 3
jne 0x80023b0
call _ZNK5boost6locale4util18gregorian_calendar9get_valueENS0_6period5marks11period_markENS0_17abstract_calendar10value_typeE
sub ebp, eax
lea eax, [rbp*8]
sub eax, ebp
add dword [rbx + 0x5c], eax
jmp 0x8001d50
nop
test ebp, ebp
jle 0x8002290
sub ebp, dword [rbx + 8]
lea eax, [rbp + 0xd]
movsxd rbp, eax
cdq
imul rbp, rbp, 0xffffffff92492493
shr rbp, 0x20
add ebp, eax
sar ebp, 2
sub ebp, edx
lea edx, [rbp*8]
sub edx, ebp
sub eax, edx
mov ebp, eax
add ebp, 1
mov rax, qword [rbx]
lea rdx, [0x08001ebe]
mov rax, qword [rax + 0x10]
cmp rax, rdx
jne 0x8002358
cmp byte [rbx + 0x88], 0
jne 0x80020b7
movdqu xmm3, xmmword [rbx + 0x50]
movdqu xmm4, xmmword [rbx + 0x60]
mov qword [rsp + 8], 0xffffffffffffffff
movdqu xmm5, xmmword [rbx + 0x70]
mov rax, qword [rbx + 0x80]
cmp byte [rbx + 0x89], 0
movups xmmword [rsp + 0x40], xmm4
movups xmmword [rsp + 0x50], xmm5
mov qword [rsp + 0x60], rax
mov dword [rsp + 0x50], 0xffffffff
mov dword [rsp + 0x48], 0xffffffff
movups xmmword [rsp + 0x30], xmm3
jne 0x80022c0
mov eax, dword [rsp + 0x44]
mov ecx, dword [rsp + 0x40]
lea r12d, [rax + 0x76c]
cmp ecx, 0xb
jle 0x8002368
movsxd rax, ecx
mov edx, ecx
imul rax, rax, 0x2aaaaaab
sar edx, 0x1f
sar rax, 0x21
sub eax, edx
add r12d, eax
lea eax, [rax + rax*2]
shl eax, 2
sub ecx, eax
imul esi, r12d, 0xc28f5c29
mov eax, dword [rsp + 0x3c]
mov edx, 1
add esi, 0x51eb850
ror esi, 4
cmp esi, 0xa3d70a
jbe 0x8001faa
movsxd rdx, r12d
mov esi, r12d
imul rdx, rdx, 0x51eb851f
sar esi, 0x1f
sar rdx, 0x25
sub edx, esi
imul esi, edx, 0x64
mov edx, r12d
sub edx, esi
je 0x8001faa
xor edx, edx
test r12b, 3
sete dl
movsxd rdx, edx
movsxd rcx, ecx
lea rdx, [rdx + rdx*2]
lea rcx, [rcx + rdx*4]
lea rdx, [0x08001fbf]
add eax, dword [rdx + rcx*4]
lea r13d, [rax - 1]
movzx eax, byte [0x08001fcd]
test al, al
je .bss
lea r8d, [r12 - 1]
movsxd rdi, r8d
imul esi, r8d, 0x16d
imul rdi, rdi, 0x51eb851f
mov rax, rdi
sar rdi, 0x25
sar rax, 0x27
mov rdx, rax
mov eax, r8d
sar eax, 0x1f
sub edx, eax
sub eax, edi
lea rdi, [rsp + 8]
test r8d, r8d
lea ecx, [rsi + rdx]
lea rsi, [rsp + 0x30]
lea edx, [rcx + rax]
lea eax, [r12 + 2]
cmovns eax, r8d
sar eax, 2
add eax, edx
imul edx, dword [rsp + 0x38], 0xe10
sub eax, dword [0x08002032]
add eax, r13d
cdqe
imul rax, rax, 0x15180
movsxd rdx, edx
add rax, rdx
imul edx, dword [rsp + 0x34], 0x3c
movsxd rdx, edx
add rax, rdx
movsxd rdx, dword [rsp + 0x30]
add rax, rdx
mov qword [rsp + 8], rax
call gmtime_r
test rax, rax
je 0x800283f
mov rax, qword [rsp + 8]
movsxd rdx, dword [rbx + 0x8c]
movdqu xmm2, xmmword [rsp + 0x30]
movdqu xmm1, xmmword [rsp + 0x40]
movdqu xmm0, xmmword [rsp + 0x50]
sub rax, rdx
movups xmmword [rbx + 0x18], xmm2
mov qword [rbx + 0x10], rax
mov rax, qword [rsp + 0x60]
movups xmmword [rbx + 0x28], xmm1
mov qword [rbx + 0x48], rax
mov qword [rbx + 0x80], rax
movups xmmword [rbx + 0x38], xmm0
movups xmmword [rbx + 0x50], xmm2
movups xmmword [rbx + 0x60], xmm1
movups xmmword [rbx + 0x70], xmm0
mov ecx, dword [rbx + 0x68]
sub ecx, dword [rbx + 8]
sub ebp, 1
add ecx, 7
movsxd rax, ecx
mov edx, ecx
imul rax, rax, 0xffffffff92492493
sar edx, 0x1f
shr rax, 0x20
add eax, ecx
sar eax, 2
sub eax, edx
lea edx, [rax*8]
sub edx, eax
sub ecx, edx
sub ebp, ecx
add dword [rbx + 0x5c], ebp
jmp 0x8001d50
nop word [rax + rax]
mov dword [rdi + 0x54], ebp
jmp 0x8001d50
mov dword [rdi + 0x50], ebp
jmp 0x8001d50
nop dword [rax + rax]
mov dword [rdi + 0x60], ebp
jmp 0x8001d50
nop dword [rax + rax]
mov dword [rdi + 0x5c], ebp
jmp 0x8001d50
nop dword [rax + rax]
mov rax, qword [rdi]
lea rdx, [0x0800213a]
mov rax, qword [rax + 0x10]
cmp rax, rdx
jne 0x8002398
cmp byte [rdi + 0x88], 0
jne 0x8002205
movdqu xmm6, xmmword [rdi + 0x50]
movdqu xmm7, xmmword [rdi + 0x60]
mov qword [rsp + 8], 0xffffffffffffffff
mov rax, qword [rdi + 0x80]
cmp byte [rdi + 0x89], 0
movups xmmword [rsp + 0x30], xmm6
movdqu xmm6, xmmword [rdi + 0x70]
movups xmmword [rsp + 0x40], xmm7
movups xmmword [rsp + 0x50], xmm6
mov qword [rsp + 0x60], rax
mov dword [rsp + 0x50], 0xffffffff
mov dword [rsp + 0x48], 0xffffffff
je 0x80023c0
lea rdi, [rsp + 0x30]
call mktime
mov qword [rsp + 8], rax
cmp rax, 0xffffffffffffffff
je 0x80026e3
movsxd rdx, dword [rbx + 0x8c]
movdqu xmm2, xmmword [rsp + 0x30]
movdqu xmm1, xmmword [rsp + 0x40]
movdqu xmm0, xmmword [rsp + 0x50]
sub rax, rdx
movups xmmword [rbx + 0x18], xmm2
mov qword [rbx + 0x10], rax
mov rax, qword [rsp + 0x60]
movups xmmword [rbx + 0x28], xmm1
mov qword [rbx + 0x48], rax
mov qword [rbx + 0x80], rax
movups xmmword [rbx + 0x38], xmm0
movups xmmword [rbx + 0x50], xmm2
movups xmmword [rbx + 0x60], xmm1
movups xmmword [rbx + 0x70], xmm0
mov eax, dword [rbx + 0x6c]
add eax, 1
sub ebp, eax
add dword [rbx + 0x5c], ebp
jmp 0x8001d50
nop dword [rax]
movsxd rax, dword [rdi + 0x58]
mov rdx, rax
imul rax, rax, 0x2aaaaaab
mov ecx, edx
sar ecx, 0x1f
sar rax, 0x21
sub eax, ecx
lea eax, [rax + rax*2]
shl eax, 2
sub edx, eax
lea eax, [rbp + rbp*2]
lea eax, [rdx + rax*4]
mov dword [rdi + 0x58], eax
jmp 0x8001d50
nop dword [rax + rax]
movsxd rax, dword [rdi + 0x58]
mov rdx, rax
imul rax, rax, 0x2aaaaaab
sar edx, 0x1f
sar rax, 0x21
sub eax, edx
lea eax, [rax + rax*2]
lea eax, [rbp + rax*4]
mov dword [rdi + 0x58], eax
jmp 0x8001d50
nop word cs:[rax + rax]
mov dword [rdi + 0x58], ebp
jmp 0x8001d50
nop dword [rax + rax]
movsxd rax, ebp
mov edx, ebp
imul rax, rax, 0xffffffff92492493
sar edx, 0x1f
shr rax, 0x20
add eax, ebp
sar eax, 2
sub edx, eax
lea eax, [rdx + 1]
lea ebp, [rbp + rax*8]
sub ebp, eax
jmp 0x8001e88
nop dword [rax + rax]
lea rdi, [rsp + 0x30]
call mktime
mov qword [rsp + 8], rax
cmp rax, 0xffffffffffffffff
jne 0x800206f
cmp dword [rsp + 0x48], 0xffffffff
jne 0x800206f
mov edi, 0x10
lea rbp, [rsp + 0x10]
call __cxa_allocate_exception
lea rdx, [rsp + 7]
lea rsi, [0x080022ff]
mov rdi, rbp
mov r12, rax
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
mov rsi, rbp
mov rdi, r12
call _ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
lea rax, [0x0800231c]
mov rdi, qword [rsp + 0x10]
mov qword [r12], rax
lea rax, [rsp + 0x20]
cmp rdi, rax
je 0x800233d
mov rax, qword [rsp + 0x20]
lea rsi, [rax + 1]
call _ZdlPvm
lea rdx, [0x08002344]
lea rsi, [0x0800234b]
mov rdi, r12
call __cxa_throw
nop dword [rax + rax]
mov rdi, rbx
call rax
jmp 0x80020b7
nop word [rax + rax]
test ecx, ecx
jns 0x8001f60
mov eax, 0xb
mov edx, 0xaaaaaaab
sub eax, ecx
imul rax, rdx
shr rax, 0x23
sub r12d, eax
lea eax, [rax + rax*2]
lea ecx, [rcx + rax*4]
jmp 0x8001f60
nop word [rax + rax]
call rax
jmp 0x8002205
nop
call rdx
mov rax, qword [rbx]
jmp 0x8001e47
nop word [rax + rax]
call rax
jmp 0x8001e6b
nop word [rax + rax]
mov eax, dword [rsp + 0x44]
mov edx, dword [rsp + 0x40]
lea r12d, [rax + 0x76c]
cmp edx, 0xb
jle 0x80026b9
movsxd rax, edx
mov ecx, edx
imul rax, rax, 0x2aaaaaab
sar ecx, 0x1f
sar rax, 0x21
sub eax, ecx
add r12d, eax
lea eax, [rax + rax*2]
shl eax, 2
sub edx, eax
imul ecx, r12d, 0xc28f5c29
mov r13d, dword [rsp + 0x3c]
mov eax, 1
add ecx, 0x51eb850
ror ecx, 4
cmp ecx, 0xa3d70a
jbe 0x8002443
movsxd rax, r12d
mov ecx, r12d
imul rax, rax, 0x51eb851f
sar ecx, 0x1f
sar rax, 0x25
sub eax, ecx
imul ecx, eax, 0x64
mov eax, r12d
sub eax, ecx
je 0x8002443
xor eax, eax
test r12b, 3
sete al
cdqe
movsxd rdx, edx
lea rax, [rax + rax*2]
lea rdx, [rdx + rax*4]
lea rax, [0x08002457]
add r13d, dword [rax + rdx*4]
movzx eax, byte [0x08002462]
lea r13d, [r13 - 1]
test al, al
je .bss
lea r8d, [r12 - 1]
movsxd rdi, r8d
imul esi, r8d, 0x16d
imul rdi, rdi, 0x51eb851f
mov rax, rdi
sar rdi, 0x25
sar rax, 0x27
mov rdx, rax
mov eax, r8d
sar eax, 0x1f
sub edx, eax
sub eax, edi
lea rdi, [rsp + 8]
test r8d, r8d
lea ecx, [rsi + rdx]
lea rsi, [rsp + 0x30]
lea edx, [rcx + rax]
lea eax, [r12 + 2]
cmovns eax, r8d
sar eax, 2
add eax, edx
imul edx, dword [rsp + 0x38], 0xe10
sub eax, dword [0x080024cb]
add eax, r13d
cdqe
imul rax, rax, 0x15180
movsxd rdx, edx
add rax, rdx
imul edx, dword [rsp + 0x34], 0x3c
movsxd rdx, edx
add rax, rdx
movsxd rdx, dword [rsp + 0x30]
add rax, rdx
mov qword [rsp + 8], rax
call gmtime_r
test rax, rax
je 0x80028e5
mov rax, qword [rsp + 8]
jmp 0x80021bd
nop dword [rax]
mov eax, dword [rsp + 0x44]
mov edx, dword [rsp + 0x40]
lea r13d, [rax + 0x76c]
cmp edx, 0xb
jle 0x800268f
movsxd rax, edx
mov ecx, edx
imul rax, rax, 0x2aaaaaab
sar ecx, 0x1f
sar rax, 0x21
sub eax, ecx
add r13d, eax
lea eax, [rax + rax*2]
shl eax, 2
sub edx, eax
imul ecx, r13d, 0xc28f5c29
mov r14d, dword [rsp + 0x3c]
mov eax, 1
add ecx, 0x51eb850
ror ecx, 4
cmp ecx, 0xa3d70a
jbe 0x8002593
movsxd rax, r13d
mov ecx, r13d
imul rax, rax, 0x51eb851f
sar ecx, 0x1f
sar rax, 0x25
sub eax, ecx
imul ecx, eax, 0x64
mov eax, r13d
sub eax, ecx
je 0x8002593
xor eax, eax
test r13b, 3
sete al
cdqe
movsxd rdx, edx
lea rax, [rax + rax*2]
lea rdx, [rdx + rax*4]
lea rax, [0x080025a7]
add r14d, dword [rax + rdx*4]
movzx eax, byte [0x080025b2]
lea r14d, [r14 - 1]
test al, al
je .bss
lea r8d, [r13 - 1]
movsxd rdi, r8d
imul esi, r8d, 0x16d
imul rdi, rdi, 0x51eb851f
mov rax, rdi
sar rdi, 0x25
sar rax, 0x27
mov rdx, rax
mov eax, r8d
sar eax, 0x1f
sub edx, eax
sub eax, edi
lea rdi, [rsp + 8]
test r8d, r8d
lea ecx, [rsi + rdx]
lea rsi, [rsp + 0x30]
lea edx, [rcx + rax]
lea eax, [r13 + 2]
cmovns eax, r8d
sar eax, 2
add eax, edx
imul edx, dword [rsp + 0x38], 0xe10
sub eax, dword [0x08002619]
add eax, r14d
cdqe
imul rax, rax, 0x15180
movsxd rdx, edx
add rax, rdx
imul edx, dword [rsp + 0x34], 0x3c
movsxd rdx, edx
add rax, rdx
movsxd rdx, dword [rsp + 0x30]
add rax, rdx
mov qword [rsp + 8], rax
call gmtime_r
test rax, rax
je 0x80029c2
mov rax, qword [rsp + 8]
jmp 0x8001df5
nop dword [rax + rax]
lea rdi, [0x08002667]
call __cxa_guard_acquire
test eax, eax
je 0x8001fd5
lea rdi, [0x0800267b]
mov dword [0x08002685], 0xaf93a
call __cxa_guard_release
jmp 0x8001fd5
test edx, edx
jns 0x8002548
mov eax, 0xb
mov ecx, 0xaaaaaaab
sub eax, edx
imul rax, rcx
shr rax, 0x23
sub r13d, eax
lea eax, [rax + rax*2]
lea edx, [rdx + rax*4]
jmp 0x8002548
test edx, edx
jns 0x80023f8
mov eax, 0xb
mov ecx, 0xaaaaaaab
sub eax, edx
imul rax, rcx
shr rax, 0x23
sub r12d, eax
lea eax, [rax + rax*2]
lea edx, [rdx + rax*4]
jmp 0x80023f8
cmp dword [rsp + 0x48], 0xffffffff
jne 0x80021bd
mov edi, 0x10
lea rbp, [rsp + 0x10]
call __cxa_allocate_exception
lea rdx, [rsp + 7]
lea rsi, [0x08002709]
mov rdi, rbp
mov r12, rax
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
mov rsi, rbp
mov rdi, r12
call _ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
lea rax, [0x08002726]
mov rdi, qword [rsp + 0x10]
mov qword [r12], rax
lea rax, [rsp + 0x20]
cmp rdi, rax
je 0x8002747
mov rax, qword [rsp + 0x20]
lea rsi, [rax + 1]
call _ZdlPvm
lea rdx, [0x0800274e]
lea rsi, [0x08002755]
mov rdi, r12
call __cxa_throw
nop dword [rax]
cmp dword [rsp + 0x48], 0xffffffff
jne 0x8001df5
mov edi, 0x10
lea rbp, [rsp + 0x10]
call __cxa_allocate_exception
lea rdx, [rsp + 7]
lea rsi, [0x08002786]
mov rdi, rbp
mov r12, rax
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
mov rsi, rbp
mov rdi, r12
call _ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
lea rax, [0x080027a3]
mov rdi, qword [rsp + 0x10]
mov qword [r12], rax
lea rax, [rsp + 0x20]
cmp rdi, rax
je 0x80027c4
mov rax, qword [rsp + 0x20]
lea rsi, [rax + 1]
call _ZdlPvm
lea rdx, [0x080027cb]
lea rsi, [0x080027d2]
mov rdi, r12
call __cxa_throw
nop word [rax + rax]
lea rdi, [0x080027e7]
call __cxa_guard_acquire
test eax, eax
je 0x80025be
lea rdi, [0x080027fb]
mov dword [0x08002805], 0xaf93a
call __cxa_guard_release
jmp 0x80025be
lea rdi, [0x08002816]
call __cxa_guard_acquire
test eax, eax
je 0x800246e
lea rdi, [0x0800282a]
mov dword [0x08002834], 0xaf93a
call __cxa_guard_release
jmp 0x800246e
ret
