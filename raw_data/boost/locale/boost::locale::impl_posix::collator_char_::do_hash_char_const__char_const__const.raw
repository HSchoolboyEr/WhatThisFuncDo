push r14
mov rcx, rdx
lea rdx, [0x08001b5c]
add byte [rax], al
add byte [rax], al
push r13
mov r13, rdi
push r12
mov r12, rsi
push rbp
push rbx
sub rsp, 0x70
mov rax, qword [rdi]
mov rax, qword [rax + 0x18]
cmp rax, rdx
jne 0x8001e48
mov rbx, rcx
lea rbp, [arg_60h]
mov qword [arg_50h], rbp
sub rbx, rsi
test rsi, rsi
jne 0x8001b9a
test rcx, rcx
jne .LC0
mov qword [arg_30h], rbx
cmp rbx, 0xf
ja 0x8001da8
cmp rbx, 1
jne 0x8001d50
movzx eax, byte [r12]
mov byte [arg_60h], al
mov qword [arg_58h], rbx
lea r12, [rbx + rbx + 1]
mov byte [rsp + rbx + 0x60], 0
mov qword [arg_20h], 0
pxor xmm0, xmm0
mov rdi, r12
movaps xmmword [arg_10h], xmm0
call _Znwm
lea rbx, [rax + r12]
mov rdx, r12
mov rdi, rax
xor esi, esi
mov qword [arg_10h], rax
mov qword [arg_20h], rbx
call memset
mov rsi, qword [arg_50h]
mov rdx, r12
mov qword [arg_18h], rbx
mov rdi, rax
mov rax, qword [r13 + 0x18]
mov rcx, qword [rax]
call strxfrm_l
mov r14, qword [arg_10h]
mov r12, rax
mov rax, qword [arg_18h]
sub rax, r14
cmp r12, rax
jbe 0x8001c5f
mov rsi, r12
lea rdi, [arg_10h]
sub rsi, rax
call _ZNSt6vectorIcSaIcEE17_M_default_appendEm
mov rax, qword [r13 + 0x18]
mov rsi, qword [arg_50h]
mov rdx, r12
mov rdi, qword [arg_10h]
mov rcx, qword [rax]
call strxfrm_l
mov r14, qword [arg_10h]
mov rax, r14
lea rbx, [arg_40h]
add rax, r12
mov qword [arg_30h], rbx
je 0x8001c7a
test r14, r14
je .LC0
mov qword [arg_8h], r12
cmp r12, 0xf
ja 0x8001e08
cmp r12, 1
jne 0x8001d90
movzx eax, byte [r14]
mov byte [arg_40h], al
mov rax, rbx
mov qword [arg_38h], r12
mov byte [rax + r12], 0
mov rdi, qword [arg_10h]
test rdi, rdi
je 0x8001cbf
mov rsi, qword [arg_20h]
sub rsi, rdi
call _ZdlPvm
mov rdi, qword [arg_50h]
cmp rdi, rbp
je 0x8001cd7
mov rax, qword [arg_60h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [arg_30h]
mov rsi, qword [arg_38h]
add rsi, rdi
cmp rsi, rdi
je 0x8001e60
lea rdx, [rdi + 1]
movzx eax, byte [rdi]
cmp rsi, rdx
je 0x8001d25
nop dword [rax]
movzx ecx, byte [rdx]
shl eax, 4
add rdx, 1
add eax, ecx
mov ecx, eax
and ecx, 0xf0000000
je 0x8001d20
and eax, 0xfffffff
shr ecx, 0x18
xor eax, ecx
cmp rsi, rdx
jne 0x8001d00
mov r12d, eax
cmp rdi, rbx
je 0x8001d3b
mov rax, qword [arg_40h]
lea rsi, [rax + 1]
call _ZdlPvm
add rsp, 0x70
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
test rbx, rbx
je 0x8001bbc
mov rdx, rbx
mov rsi, r12
mov rdi, rbp
add rbx, rbx
call memcpy
mov rax, qword [arg_30h]
mov rdx, qword [arg_50h]
lea r12, [rbx + 1]
mov qword [arg_58h], rax
mov byte [rdx + rax], 0
jmp 0x8001bcb
nop word cs:[rax + rax]
test r12, r12
jne 0x8001e74
mov rax, rbx
jmp 0x8001c9e
nop dword [rax]
lea rsi, [arg_30h]
lea rdi, [arg_50h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov rdx, rbx
mov rsi, r12
lea r12, [rbx + rbx + 1]
mov qword [arg_50h], rax
mov rdi, rax
mov rax, qword [arg_30h]
mov qword [arg_60h], rax
call memcpy
mov rax, qword [arg_30h]
mov rdx, qword [arg_50h]
mov qword [arg_58h], rax
mov byte [rdx + rax], 0
test r12, r12
jns 0x8001bcb
lea rdi, [0x08001dfe]
call _ZSt20__throw_length_errorPKc
nop dword [rax + rax]
lea rsi, [arg_8h]
lea rdi, [arg_30h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [arg_30h], rax
mov rdi, rax
mov rax, qword [arg_8h]
mov qword [arg_40h], rax
mov rdx, r12
mov rsi, r14
call memcpy
mov r12, qword [arg_8h]
mov rax, qword [arg_30h]
jmp 0x8001c9e
nop dword [rax]
mov rdx, rsi
lea rdi, [arg_30h]
lea rbx, [arg_40h]
mov rsi, r13
call rax
jmp 0x8001cd7
nop
xor r12d, r12d
jmp 0x8001d28
lea rdi, [0x08001e6f]
call _ZSt19__throw_logic_errorPKc
mov rdi, rbx
jmp 0x8001e2b
lea rdi, [0x08001e80]
call _ZSt19__throw_logic_errorPKc
mov r12, rax
jmp 0x8001ea4
mov r12, rax
mov rdi, qword [rsp + 0x10]
mov rsi, qword [rsp + 0x20]
sub rsi, rdi
test rdi, rdi
je 0x8001ea4
call _ZdlPvm
mov rdi, qword [arg_50h]
cmp rdi, rbp
je 0x8001ebc
mov rax, qword [arg_60h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, r12
call _Unwind_Resume
