push rbp
mov rbp, rsp
push r15
mov r15, r9
push r14
mov r14, rsi
push r13
mov r13d, edx
push r12
push rbx
mov rbx, rcx
sub rsp, 0x48
mov qword [var_60h], rdi
lea rdi, [rcx + 0xd0]
mov dword [var_48h], r8d
call .text
mov r10d, dword [rbx + 0x18]
sub rsp, 0xb0
lea rsi, [rax + 0x50]
mov r12, rax
lea r9, [var_fh]
mov eax, r10d
and r9, 0xfffffffffffffff0
mov qword [var_70h], rsi
and eax, 0x4a
lea rdi, [r9 + 0xa0]
mov qword [var_58h], r9
cmp eax, 0x40
mov dword [var_64h], eax
setne dl
cmp eax, 8
mov dword [var_50h], r10d
setne al
mov ecx, edx
mov rdx, rsi
mov rsi, r15
and ecx, eax
mov eax, ecx
mov byte [var_41h], cl
mov ecx, r10d
mov r8d, eax
and r8d, 1
call _ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb
add byte [rax], al
add byte [rax], al
mov edx, 0x28
mov r9, qword [var_58h]
mov r10d, dword [var_50h]
sub edx, eax
cmp byte [r12 + 0x20], 0
mov dword [var_34h], eax
movsxd rdx, edx
lea rsi, [r9 + rdx*4]
jne 0x800c6f8
cmp byte [var_41h], 0
je 0x800c75f
mov rdx, qword [rbx + 0x10]
movsxd r12, eax
cmp rdx, r12
jg 0x800c7a8
mov qword [rbx + 0x10], 0
test r13b, r13b
jne 0x800c6dd
mov rax, qword [r14]
mov rdx, r12
mov rdi, r14
call qword [rax + 0x60]
cmp r12, rax
setne r13b
lea rsp, [var_28h]
xor edx, edx
mov rax, r14
pop rbx
mov dl, r13b
pop r12
pop r13
pop r14
pop r15
pop rbp
ret
nop dword [rax]
add eax, 1
lea rdi, [var_34h]
mov ecx, dword [r12 + 0x4c]
mov r8, rbx
cdqe
mov r11, qword [r12 + 0x10]
mov rdx, qword [r12 + 0x18]
mov dword [var_58h], r10d
lea rax, [rax*8 + 0x17]
and rax, 0xfffffffffffffff0
sub rsp, rax
lea r9, [var_fh]
push rdi
mov rdi, qword [var_60h]
push rsi
and r9, 0xfffffffffffffff0
mov rsi, r11
add r9, 8
mov qword [var_50h], r9
call _ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE12_M_group_intEPKcmwRSt8ios_basePwS9_Ri
mov r9, qword [var_50h]
cmp byte [var_41h], 0
pop rcx
mov eax, dword [var_34h]
pop rsi
mov r10d, dword [var_58h]
mov rsi, r9
jne 0x800c6ad
test r10d, 0x200
je 0x800c6ad
test r15, r15
je 0x800c6ad
cmp dword [var_64h], 0x40
je 0x800c7ec
mov rcx, qword [var_70h]
shr r10d, 0xe
add eax, 2
sub rsi, 8
and r10d, 1
mov edx, dword [rcx + r10*4 + 8]
mov dword [var_34h], eax
mov dword [rsi + 4], edx
mov edx, dword [r12 + 0x60]
mov dword [rsi], edx
jmp 0x800c6ad
nop dword [rax]
lea rax, [rdx*4 + 0x17]
mov r9, rsi
mov rdi, qword [var_60h]
mov esi, dword [var_48h]
and rax, 0xfffffffffffffff0
mov rcx, rbx
sub rsp, rax
lea rax, [var_34h]
lea r15, [var_fh]
sub rsp, 8
push rax
and r15, 0xfffffffffffffff0
mov r8, r15
call _ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwlRSt8ios_basePwPKwRi
pop rax
movsxd r12, dword [var_34h]
mov rsi, r15
pop rdx
jmp 0x800c6bd
mov edx, dword [r12 + 0x60]
add eax, 1
sub rsi, 4
mov dword [var_34h], eax
mov dword [rsi], edx
jmp 0x800c6ad
