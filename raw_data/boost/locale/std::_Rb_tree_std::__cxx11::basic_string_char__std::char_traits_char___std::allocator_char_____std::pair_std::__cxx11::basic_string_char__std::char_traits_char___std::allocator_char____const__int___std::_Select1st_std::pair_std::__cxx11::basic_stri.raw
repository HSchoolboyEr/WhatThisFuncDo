push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov qword [var_10h], rdi
test rdi, rdi
je 0x8000992
mov rax, qword [arg_10h]
mov rax, qword [rax + 0x18]
mov qword [rsp], rax
test rax, rax
je 0x800093d
mov rax, qword [rsp]
mov rax, qword [rax + 0x18]
mov qword [arg_8h], rax
test rax, rax
je 0x80008ea
mov rax, qword [arg_8h]
mov r15, qword [rax + 0x18]
test r15, r15
je 0x8000894
mov r12, qword [r15 + 0x18]
test r12, r12
je 0x800081c
mov rbp, qword [r12 + 0x18]
test rbp, rbp
je 0x8000745
mov r13, qword [arg_18h]
test r13, r13
je 0x80007e0
mov r14, qword [r13 + 0x18]
test r14, r14
je 0x8000858
mov r9, qword [r14 + 0x18]
test r9, r9
je 0x800079a
mov rdi, qword [r9 + 0x18]
mov qword [arg_18h], r9
call method std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<> > >::() [clone ]
mov r9, qword [arg_18h]
mov rdi, qword [r9 + 0x20]
lea rax, [r9 + 0x30]
mov rbx, qword [r9 + 0x10]
cmp rdi, rax
je 0x8000788
mov rax, qword [r9 + 0x30]
lea rsi, [rax + 1]
call _ZdlPvm
mov r9, qword [arg_18h]
mov esi, 0x48
mov rdi, r9
call _ZdlPvm
test rbx, rbx
je 0x800079a
mov r9, rbx
jmp 0x80006f8
mov rdi, qword [r12 + 0x20]
lea rax, [r12 + 0x30]
mov rbx, qword [r12 + 0x10]
cmp rdi, rax
je 0x8000767
mov rax, qword [r12 + 0x30]
lea rsi, [rax + 1]
call _ZdlPvm
mov esi, 0x48
mov rdi, r12
call _ZdlPvm
test rbx, rbx
je 0x800081c
mov r12, rbx
jmp 0x80006c7
nop dword [rax]
mov esi, 0x48
mov rdi, r9
call _ZdlPvm
test rbx, rbx
jne 0x8000740
mov rdi, qword [r14 + 0x20]
lea rax, [r14 + 0x30]
mov rbx, qword [r14 + 0x10]
cmp rdi, rax
je 0x80007b8
mov rax, qword [r14 + 0x30]
lea rsi, [rax + 1]
call _ZdlPvm
mov esi, 0x48
mov rdi, r14
call _ZdlPvm
test rbx, rbx
je 0x8000858
mov r14, rbx
jmp 0x80006eb
nop word cs:[rax + rax]
mov rdi, qword [arg_20h]
lea rax, [arg_30h]
mov rbx, qword [arg_10h]
cmp rdi, rax
je 0x80007fe
mov rax, qword [arg_30h]
lea rsi, [rax + 1]
call _ZdlPvm
mov esi, 0x48
mov rdi, rbp
call _ZdlPvm
test rbx, rbx
je 0x8000745
mov rbp, rbx
jmp 0x80006d1
mov rdi, qword [r15 + 0x20]
lea rax, [r15 + 0x30]
mov rbx, qword [r15 + 0x10]
cmp rdi, rax
je 0x800083a
mov rax, qword [r15 + 0x30]
lea rsi, [rax + 1]
call _ZdlPvm
mov esi, 0x48
mov rdi, r15
call _ZdlPvm
test rbx, rbx
je 0x8000894
mov r15, rbx
jmp 0x80006ba
nop dword [rax]
mov rdi, qword [r13 + 0x20]
lea rax, [r13 + 0x30]
mov rbx, qword [r13 + 0x10]
cmp rdi, rax
je 0x8000876
mov rax, qword [r13 + 0x30]
lea rsi, [rax + 1]
call _ZdlPvm
mov esi, 0x48
mov rdi, r13
call _ZdlPvm
test rbx, rbx
je 0x80007e0
mov r13, rbx
jmp 0x80006de
mov r15, qword [arg_8h]
mov rdi, qword [r15 + 0x20]
lea rax, [r15 + 0x30]
mov rbx, qword [r15 + 0x10]
cmp rdi, rax
je 0x80008d8
mov rax, qword [r15 + 0x30]
lea rsi, [rax + 1]
mov qword [arg_8h], rax
call _ZdlPvm
mov esi, 0x48
mov rdi, r15
call _ZdlPvm
test rbx, rbx
je 0x80008ea
mov qword [arg_8h], rbx
jmp 0x80006a8
mov rdi, r15
mov esi, 0x48
call _ZdlPvm
test rbx, rbx
jne 0x80008ce
mov r15, qword [rsp]
mov rdi, qword [r15 + 0x20]
lea rax, [r15 + 0x30]
mov rbx, qword [r15 + 0x10]
cmp rdi, rax
je 0x800092b
mov rax, qword [r15 + 0x30]
lea rsi, [rax + 1]
mov qword [rsp], rax
call _ZdlPvm
mov esi, 0x48
mov rdi, r15
call _ZdlPvm
test rbx, rbx
je 0x800093d
mov qword [rsp], rbx
jmp 0x8000692
mov rdi, r15
mov esi, 0x48
call _ZdlPvm
test rbx, rbx
jne 0x8000922
mov r14, qword [arg_10h]
mov rdi, qword [r14 + 0x20]
lea rax, [r14 + 0x30]
mov rbx, qword [r14 + 0x10]
cmp rdi, rax
je 0x8000980
mov rax, qword [r14 + 0x30]
lea rsi, [rax + 1]
mov qword [rsp], rax
call _ZdlPvm
mov esi, 0x48
mov rdi, r14
call _ZdlPvm
test rbx, rbx
je 0x8000992
mov qword [arg_10h], rbx
jmp 0x800067c
mov rdi, r14
mov esi, 0x48
call _ZdlPvm
test rbx, rbx
jne 0x8000976
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
