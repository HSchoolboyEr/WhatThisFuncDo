push r15
push r14
push r13
push r12
push rbp
mov ebp, ecx
push rbx
mov rbx, rdx
sub rsp, 0x58
mov qword [var_10h], rdi
mov rdi, rdx
mov qword [var_18h], rsi
call _ZN5boost6locale4util24check_is_simple_encodingERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
test al, al
je .text.unlikely
cmp ebp, 1
je 0x8000e8e
cmp ebp, 2
je 0x800100c
mov rsi, qword [var_18h]
mov rdi, qword [var_10h]
call _ZNSt6localeC1ERKS_
mov rax, qword [var_10h]
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov edi, 0x818
call _Znwm
xor esi, esi
mov rdi, rax
mov r12, rax
call _ZNSt7codecvtIcc11__mbstate_tEC2Em
lea rax, [0x08000eac]
movdqa xmm0, xmmword [0x08000eb4]
movdqa xmm1, xmmword [0x08000ebc]
lea rdx, [r12 + 0x218]
mov qword [r12], rax
lea rax, [r12 + 0x18]
nop dword [rax]
movdqa xmm2, xmm0
add rax, 0x10
paddd xmm0, xmm1
movups xmmword [rax - 0x10], xmm2
cmp rdx, rax
jne 0x8000ed0
mov r15d, 0x80
lea rbp, [var_30h]
lea r14, [var_2eh]
lea r13, [var_2fh]
nop word [rax + rax]
mov r8d, 1
mov rcx, rbx
mov rdx, r13
mov rsi, r14
mov rdi, rbp
mov byte [var_2fh], 0
mov byte [var_2eh], r15b
call _ZN5boost6locale4conv6to_utfIwEENSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEEPKcSB_RKNS4_IcS6_IcESaIcEEENS1_11method_typeE
cmp qword [var_38h], 1
mov rdi, qword [var_30h]
mov eax, 0xffffffff
jne 0x8000f35
mov eax, dword [rdi]
lea rdx, [var_40h]
cmp rdi, rdx
je 0x8000f59
mov rdx, qword [var_40h]
mov dword [var_ch], eax
lea rsi, [rdx*4 + 4]
call _ZdlPvm
mov eax, dword [var_ch]
mov dword [r12 + r15*4 + 0x18], eax
add r15, 1
cmp r15, 0x100
jne 0x8000f00
lea rdi, [r12 + 0x420]
mov eax, r12d
mov qword [r12 + 0x418], 0
mov qword [r12 + 0x810], 0
and rdi, 0xfffffffffffffff8
sub eax, edi
lea ecx, [rax + 0x818]
xor eax, eax
shr ecx, 3
rep stosq qword [rdi], rax
mov ecx, 1
nop word [rax + rax]
mov eax, dword [r12 + rcx*4 + 0x18]
cmp eax, 0xffffffff
jne 0x8000fe3
add rcx, 1
cmp rcx, 0x100
jne 0x8000fb0
mov rsi, qword [var_18h]
mov rdi, qword [var_10h]
mov rdx, r12
call _ZNSt6localeC1IN5boost6locale4util14simple_codecvtIcEEEERKS_PT_
add byte [rax], al
add byte [rax], al
jmp 0x8000e7a
nop
add eax, 1
and eax, 0x3ff
mov edx, eax
cmp byte [r12 + rdx + 0x418], 0
jne 0x8000fe0
mov byte [r12 + rdx + 0x418], cl
add rcx, 1
cmp rcx, 0x100
jne 0x8000fb0
jmp 0x8000fc7
mov edi, 0x818
call _Znwm
xor esi, esi
mov rdi, rax
mov r12, rax
call _ZNSt7codecvtIwc11__mbstate_tEC2Em
lea rax, [0x0800102a]
movdqa xmm0, xmmword [0x08001032]
movdqa xmm1, xmmword [0x0800103a]
lea rdx, [r12 + 0x218]
mov qword [r12], rax
lea rax, [r12 + 0x18]
nop dword [rax + rax]
movdqa xmm2, xmm0
add rax, 0x10
paddd xmm0, xmm1
movups xmmword [rax - 0x10], xmm2
cmp rdx, rax
jne 0x8001050
mov r15d, 0x80
lea rbp, [var_30h]
lea r14, [var_2eh]
lea r13, [var_2fh]
nop word [rax + rax]
mov r8d, 1
mov rcx, rbx
mov rdx, r13
mov rsi, r14
mov rdi, rbp
mov byte [var_2fh], 0
mov byte [var_2eh], r15b
call _ZN5boost6locale4conv6to_utfIwEENSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEEPKcSB_RKNS4_IcS6_IcESaIcEEENS1_11method_typeE
cmp qword [var_38h], 1
mov rdi, qword [var_30h]
mov eax, 0xffffffff
jne 0x80010b5
mov eax, dword [rdi]
lea rdx, [var_40h]
cmp rdi, rdx
je 0x80010d9
mov rdx, qword [var_40h]
mov dword [var_ch], eax
lea rsi, [rdx*4 + 4]
call _ZdlPvm
mov eax, dword [var_ch]
mov dword [r12 + r15*4 + 0x18], eax
add r15, 1
cmp r15, 0x100
jne 0x8001080
lea rdi, [r12 + 0x420]
mov eax, r12d
mov qword [r12 + 0x418], 0
mov qword [r12 + 0x810], 0
and rdi, 0xfffffffffffffff8
sub eax, edi
lea ecx, [rax + 0x818]
xor eax, eax
shr ecx, 3
rep stosq qword [rdi], rax
mov ecx, 1
nop word [rax + rax]
mov eax, dword [r12 + rcx*4 + 0x18]
cmp eax, 0xffffffff
jne 0x8001163
add rcx, 1
cmp rcx, 0x100
jne 0x8001130
mov rsi, qword [var_18h]
mov rdi, qword [var_10h]
mov rdx, r12
call _ZNSt6localeC1IN5boost6locale4util14simple_codecvtIwEEEERKS_PT_
jmp 0x8000e7a
nop
add eax, 1
and eax, 0x3ff
mov edx, eax
cmp byte [r12 + rdx + 0x418], 0
jne 0x8001160
mov byte [r12 + rdx + 0x418], cl
add rcx, 1
cmp rcx, 0x100
jne 0x8001130
jmp 0x8001147
