push r15
push r14
push r13
push r12
mov r12, rsi
push rbp
push rbx
mov rbx, rsi
movabs rsi, 0x3ffffffffffffff
sub rsp, 0x48
mov rbp, qword [rdi + 8]
mov r13, qword [rdi]
mov rax, rbp
sub rax, r13
sar rax, 5
cmp rax, rsi
je .LC0
test rax, rax
mov ecx, 1
mov r14, r12
mov r15, rdi
cmovne rcx, rax
add rax, rcx
setb cl
mov qword [var_10h], rax
sub r14, r13
movzx ecx, cl
test rcx, rcx
jne 0x8000eb8
test rax, rax
jne 0x8000dc0
mov qword [var_8h], 0
add r14, qword [var_8h]
mov rax, qword [rdx]
lea rdi, [r14 + 0x10]
mov qword [var_18h], r14
mov qword [r14], rdi
mov r14, qword [rdx + 8]
mov qword [var_20h], rdi
mov rdi, rax
add rdi, r14
mov qword [var_28h], rax
je 0x8000d19
test rax, rax
je .LC1
mov qword [var_38h], r14
cmp r14, 0xf
ja 0x8000ee0
cmp r14, 1
jne 0x8000ed0
mov rax, qword [var_28h]
mov rdi, qword [var_18h]
movzx eax, byte [rax]
mov byte [rdi + 0x10], al
mov rax, qword [var_18h]
mov qword [rax + 8], r14
mov rax, qword [var_20h]
mov byte [rax + r14], 0
cmp r12, r13
je 0x8000df0
mov rax, qword [var_8h]
mov rdi, r12
mov rdx, r13
sub rdi, r13
add rdi, rax
jmp 0x8000d98
nop dword [rax]
mov qword [rax], rcx
mov rcx, qword [rdx + 0x10]
mov qword [rax + 0x10], rcx
mov rcx, qword [rdx + 8]
add rax, 0x20
add rdx, 0x20
mov qword [rax - 0x18], rcx
cmp rax, rdi
je 0x8000df8
lea rcx, [rax + 0x10]
lea rsi, [rdx + 0x10]
mov qword [rax], rcx
mov rcx, qword [rdx]
cmp rcx, rsi
jne 0x8000d78
movdqu xmm1, xmmword [rdx + 0x10]
movups xmmword [rax + 0x10], xmm1
jmp 0x8000d83
nop word cs:[rax + rax]
cmp rax, rsi
cmovbe rsi, rax
shl rsi, 5
mov qword [var_10h], rsi
mov rdi, rsi
mov qword [var_18h], rdx
call _Znwm
mov rdx, qword [var_18h]
mov qword [var_8h], rax
jmp 0x8000ce6
nop dword [rax]
mov rdi, qword [var_8h]
nop dword [rax]
lea r14, [rdi + 0x20]
cmp r12, rbp
je 0x8000e46
mov rsi, rbp
mov rax, r14
sub rsi, r12
nop word [rax + rax]
lea rdx, [rax + 0x10]
lea rcx, [rbx + 0x10]
mov qword [rax], rdx
mov rdx, qword [rbx]
cmp rdx, rcx
je 0x8000e90
mov qword [rax], rdx
mov rdx, qword [rbx + 0x10]
add rbx, 0x20
add rax, 0x20
mov qword [rax - 0x10], rdx
mov rdx, qword [rbx - 0x18]
mov qword [rax - 0x18], rdx
cmp rbx, rbp
jne 0x8000e10
add r14, rsi
test r13, r13
je 0x8000e5a
mov rsi, qword [r15 + 0x10]
mov rdi, r13
sub rsi, r13
call _ZdlPvm
mov rax, qword [var_8h]
movq xmm3, r14
movq xmm0, rax
add rax, qword [var_10h]
punpcklqdq xmm0, xmm3
mov qword [r15 + 0x10], rax
movups xmmword [r15], xmm0
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
movdqu xmm2, xmmword [rbx + 0x10]
mov rdx, qword [rbx + 8]
add rbx, 0x20
add rax, 0x20
movups xmmword [rax - 0x10], xmm2
mov qword [rax - 0x18], rdx
cmp rbp, rbx
jne 0x8000e10
jmp 0x8000e43
nop dword [rax]
movabs rax, 0x7fffffffffffffe0
mov qword [var_10h], rax
mov rdi, rax
jmp 0x8000dd3
nop
test r14, r14
je 0x8000d42
mov rdi, qword [var_20h]
jmp 0x8000f05
mov rdi, qword [var_18h]
lea rsi, [var_38h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
add byte [rax], al
add byte [rax], al
mov rsi, qword [var_18h]
mov rdi, rax
mov qword [rsi], rax
mov rax, qword [var_38h]
mov qword [rsi + 0x10], rax
mov rsi, qword [var_28h]
mov rdx, r14
call memcpy
mov rax, qword [var_18h]
mov r14, qword [var_38h]
mov rax, qword [rax]
mov qword [var_20h], rax
jmp 0x8000d42
lea rdi, [0x08000f30]
call _ZSt19__throw_logic_errorPKc
add byte [rax], al
add byte [rax], al
lea rdi, [0x08000f3c]
call _ZSt20__throw_length_errorPKc
add byte [rax], al
add byte [rax], al
mov rdi, rax
call __cxa_begin_catch
cmp qword [var_8h], 0
je 0x8000f73
mov rbx, qword [var_8h]
mov rsi, rbx
mov rdi, rbx
call _ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
mov rsi, qword [var_10h]
mov rdi, rbx
call _ZdlPvm
call __cxa_rethrow
mov rax, qword [var_18h]
mov rdi, qword [rax]
cmp qword [var_20h], rdi
je __cxa_rethrow
mov rsi, qword [rax + 0x10]
add rsi, 1
call _ZdlPvm
jmp __cxa_rethrow
