push rbp
mov rbp, rsp
push r15
mov r15, rsi
push r14
mov r14d, edx
push r13
push r12
mov r12, r9
push rbx
mov rbx, rcx
sub rsp, 0x48
mov qword [var_60h], rdi
lea rdi, [rcx + 0xd0]
mov dword [var_50h], r8d
call .text
mov r11d, dword [rbx + 0x18]
sub rsp, 0xb0
mov rsi, r12
mov r13, rax
add rax, 0x50
lea r9, [var_fh]
mov qword [var_48h], rax
mov eax, r11d
and r9, 0xfffffffffffffff0
and eax, 0x4a
cmp eax, 0x40
mov dword [var_64h], eax
setne r10b
cmp eax, 8
setne al
and r10d, eax
test r12, r12
jg 0x800da8b
neg rsi
test r10b, r10b
cmove rsi, r12
mov r8d, r10d
lea rdx, [r13 + 0x50]
mov ecx, r11d
mov qword [var_58h], r9
lea rdi, [r9 + 0xa0]
and r8d, 1
mov byte [var_4ch], r10b
mov dword [var_48h], r11d
call _ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb
mov edx, 0x28
mov r9, qword [var_58h]
mov r11d, dword [var_48h]
sub edx, eax
cmp byte [r13 + 0x20], 0
movzx r10d, byte [var_4ch]
mov dword [var_34h], eax
movsxd rdx, edx
lea rsi, [r9 + rdx*4]
jne 0x800dbb8
test r10b, r10b
je 0x800dc24
test r12, r12
js 0x800dba0
and r11d, 0x800
jne 0x800db40
mov rdx, qword [rbx + 0x10]
movsxd r12, eax
cmp rdx, r12
jg 0x800db5c
mov qword [rbx + 0x10], 0
test r14b, r14b
jne 0x800db21
mov rax, qword [r15]
mov rdx, r12
mov rdi, r15
call qword [rax + 0x60]
cmp rax, r12
setne r14b
lea rsp, [var_28h]
xor edx, edx
mov rax, r15
pop rbx
mov dl, r14b
pop r12
pop r13
pop r14
pop r15
pop rbp
ret
nop dword [rax + rax]
mov edx, dword [r13 + 0x54]
add eax, 1
sub rsi, 4
movsxd r12, eax
mov dword [var_34h], eax
mov dword [rsi], edx
mov rdx, qword [rbx + 0x10]
cmp rdx, r12
jle 0x800db01
lea rax, [rdx*4 + 0x17]
mov r9, rsi
mov rdi, qword [var_60h]
mov esi, dword [var_50h]
and rax, 0xfffffffffffffff0
mov rcx, rbx
sub rsp, rax
lea rax, [var_34h]
lea r13, [var_fh]
sub rsp, 8
push rax
and r13, 0xfffffffffffffff0
mov r8, r13
call _ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwlRSt8ios_basePwPKwRi
pop rax
movsxd r12, dword [var_34h]
mov rsi, r13
pop rdx
jmp 0x800db01
mov edx, dword [r13 + 0x50]
add eax, 1
sub rsi, 4
mov dword [var_34h], eax
mov dword [rsi], edx
jmp 0x800daf5
nop dword [rax]
add eax, 1
lea rdi, [var_34h]
mov ecx, dword [r13 + 0x4c]
mov rdx, qword [r13 + 0x18]
cdqe
mov r8, rbx
mov byte [var_58h], r10b
lea rax, [rax*8 + 0x17]
mov dword [var_4ch], r11d
and rax, 0xfffffffffffffff0
sub rsp, rax
mov rax, qword [r13 + 0x10]
lea r9, [var_fh]
push rdi
mov rdi, qword [var_60h]
push rsi
and r9, 0xfffffffffffffff0
mov rsi, rax
add r9, 8
mov qword [var_48h], r9
call _ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE12_M_group_intEPKcmwRSt8ios_basePwS9_Ri
mov r9, qword [var_48h]
movzx r10d, byte [var_58h]
pop rcx
mov eax, dword [var_34h]
pop rsi
mov r11d, dword [var_4ch]
mov rsi, r9
test r10b, r10b
jne 0x800dae3
test r11d, 0x200
je 0x800daf5
test r12, r12
je 0x800daf5
cmp dword [var_64h], 0x40
je 0x800dc65
shr r11d, 0xe
add eax, 2
sub rsi, 8
and r11d, 1
mov edx, dword [r13 + r11*4 + 0x58]
mov dword [var_34h], eax
mov dword [rsi + 4], edx
mov edx, dword [r13 + 0x60]
mov dword [rsi], edx
jmp 0x800daf5
mov edx, dword [r13 + 0x60]
add eax, 1
sub rsi, 4
mov dword [var_34h], eax
mov dword [rsi], edx
jmp 0x800daf5
