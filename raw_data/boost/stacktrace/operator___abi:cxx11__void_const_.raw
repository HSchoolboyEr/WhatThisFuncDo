push r15
push r14
push r13
push r12
mov r12, rdi
push rbp
mov rbp, rdx
push rbx
mov rbx, rsi
sub rsp, 0x78
mov rax, qword [rsi]
mov qword [rsi + 8], 0
mov byte [rax], 0
test rdx, rdx
je 0x8000c48
lea r13, [var_50h]
mov rdi, rdx
mov rsi, r13
call dladdr
test eax, eax
jne 0x8000ad0
lea r14, [var_40h]
lea rax, [rbx + 0x10]
mov byte [var_40h], 0
xor edx, edx
mov qword [var_30h], r14
mov rdi, qword [rbx]
mov qword [rsp], rax
mov qword [rbx + 8], rdx
mov byte [rdi + rdx], 0
mov rdi, qword [var_30h]
mov qword [var_38h], 0
mov byte [rdi], 0
mov rdi, qword [var_30h]
cmp rdi, r14
je 0x80008f3
mov rax, qword [var_40h]
lea rsi, [rax + 1]
call _ZdlPvm
cmp qword [rbx + 8], 0
jne 0x8000c80
mov rdx, rbp
lea rax, [0x08000908]
mov byte [var_62h], 0
mov rdi, r13
mov qword [var_50h], 0x7830
and edx, 0xf
movzx edx, byte [rax + rdx]
mov byte [var_61h], dl
mov edx, ebp
shr dl, 4
and edx, 0xf
movzx edx, byte [rax + rdx]
mov byte [var_60h], dl
mov rdx, rbp
shr rdx, 8
mov rcx, rdx
shr dl, 4
and edx, 0xf
and ecx, 0xf
movzx edx, byte [rax + rdx]
movzx ecx, byte [rax + rcx]
mov byte [var_5eh], dl
mov rdx, rbp
shr rdx, 0x10
mov byte [var_5fh], cl
mov rcx, rdx
shr dl, 4
and edx, 0xf
and ecx, 0xf
movzx edx, byte [rax + rdx]
movzx ecx, byte [rax + rcx]
mov byte [var_5ch], dl
mov rdx, rbp
shr rdx, 0x18
mov byte [var_5dh], cl
mov rcx, rdx
shr dl, 4
and edx, 0xf
and ecx, 0xf
movzx edx, byte [rax + rdx]
movzx ecx, byte [rax + rcx]
mov byte [var_5ah], dl
mov rdx, rbp
shr rdx, 0x20
mov byte [var_5bh], cl
mov rcx, rdx
shr dl, 4
and edx, 0xf
and ecx, 0xf
movzx edx, byte [rax + rdx]
movzx ecx, byte [rax + rcx]
mov byte [var_58h], dl
mov rdx, rbp
shr rdx, 0x28
mov byte [var_59h], cl
mov rcx, rdx
shr dl, 4
and edx, 0xf
and ecx, 0xf
movzx edx, byte [rax + rdx]
movzx ecx, byte [rax + rcx]
mov byte [var_56h], dl
mov rdx, rbp
shr rdx, 0x30
mov byte [var_57h], cl
mov rcx, rdx
shr dl, 4
and edx, 0xf
and ecx, 0xf
movzx edx, byte [rax + rdx]
movzx ecx, byte [rax + rcx]
mov byte [var_54h], dl
mov rdx, rbp
shr rdx, 0x38
mov byte [var_55h], cl
mov rcx, rdx
shr rdx, 4
and ecx, 0xf
movzx ecx, byte [rax + rcx]
mov byte [var_53h], cl
movzx eax, byte [rax + rdx]
mov byte [var_52h], al
call strlen
xor edx, edx
mov rcx, r13
xor esi, esi
mov r8, rax
mov rdi, rbx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
pxor xmm0, xmm0
mov rsi, r13
mov rdi, rbp
movaps xmmword [var_50h], xmm0
movaps xmmword [var_60h], xmm0
call dladdr
test eax, eax
jne 0x8000bd8
mov qword [var_50h], 0
lea rdi, [r12 + 0x10]
mov r13, qword [rbx + 8]
mov qword [r12], rdi
mov rbp, qword [rbx]
mov rax, rbp
add rax, r13
je 0x8000a89
test rbp, rbp
je .LC1
mov qword [var_30h], r13
cmp r13, 0xf
ja 0x8000db0
cmp r13, 1
jne 0x8000c70
movzx eax, byte [rbp]
mov byte [r12 + 0x10], al
mov qword [r12 + 8], r13
mov rax, r12
mov byte [rdi + r13], 0
add rsp, 0x78
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov r15, qword [var_60h]
test r15, r15
je 0x80008a6
lea r9, [var_28h]
lea r8, [var_30h]
xor esi, esi
mov rdi, r15
mov rcx, r9
mov rdx, r8
mov qword [var_10h], r9
lea r14, [var_40h]
mov qword [var_8h], r8
mov dword [var_28h], 0
mov qword [var_30h], 0
call __cxa_demangle
mov qword [var_30h], r14
test rax, rax
mov qword [rsp], rax
cmovne r15, rax
mov rdi, r15
call strlen
mov r8, qword [var_8h]
mov r9, qword [var_10h]
cmp rax, 0xf
mov qword [var_18h], rax
mov qword [var_28h], rax
ja 0x8000f1f
cmp rax, 1
jne 0x8000ee1
movzx edx, byte [r15]
mov byte [var_40h], dl
mov rdx, r14
mov qword [var_38h], rax
mov rdi, qword [rsp]
mov byte [rdx + rax], 0
call free
mov rsi, qword [var_30h]
lea rax, [rbx + 0x10]
mov rdi, qword [rbx]
mov qword [rsp], rax
mov rdx, qword [var_38h]
cmp rsi, r14
je 0x8000f5a
mov rax, qword [var_40h]
cmp rdi, qword [rsp]
je 0x8000ef8
movq xmm0, rdx
movq xmm1, rax
mov rcx, qword [rbx + 0x10]
mov qword [rbx], rsi
punpcklqdq xmm0, xmm1
movups xmmword [rbx + 8], xmm0
test rdi, rdi
je 0x8000f0d
mov qword [var_30h], rdi
mov qword [var_40h], rcx
jmp 0x80008cf
nop dword [rax + rax]
cmp qword [var_50h], 0
mov rdx, qword [rbx + 8]
je 0x8000a68
movabs rbp, 0x3fffffffffffffff
mov rax, rbp
sub rax, rdx
cmp rax, 3
jbe .LC2
mov edx, 4
lea rsi, [0x08000c0e]
mov rdi, rbx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
mov r13, qword [var_50h]
mov rdi, r13
call strlen
sub rbp, qword [rbx + 8]
mov rdx, rax
cmp rax, rbp
ja .LC2
mov rsi, r13
mov rdi, rbx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
jmp 0x8000a68
nop dword [rax + rax]
lea r14, [var_40h]
lea rax, [rsi + 0x10]
mov byte [var_40h], 0
xor edx, edx
mov qword [var_30h], r14
mov rdi, qword [rsi]
lea r13, [var_50h]
mov qword [rsp], rax
jmp 0x80008c2
nop
test r13, r13
je 0x8000aab
jmp 0x8000dd0
nop
lea r8, [var_30h]
mov rdi, qword [rbx]
xor esi, esi
mov rdx, r13
mov rcx, r8
mov qword [var_8h], r8
mov qword [var_10h], rdi
mov dword [var_30h], 0
mov qword [var_50h], 0
call __cxa_demangle
mov r8, qword [var_8h]
test rax, rax
mov r15, rax
je 0x8000e48
lea rax, [var_60h]
mov rdi, r15
mov qword [var_18h], r8
mov qword [var_8h], rax
mov qword [var_50h], rax
call strlen
mov qword [var_10h], r15
mov r8, qword [var_18h]
lea r14, [r15 + rax]
sub r14, qword [var_10h]
mov qword [var_30h], r14
cmp r14, 0xf
ja 0x8000e08
cmp r14, 1
jne 0x8000df0
mov rax, qword [var_10h]
movzx eax, byte [rax]
mov byte [var_60h], al
mov rax, qword [var_50h]
mov qword [var_58h], r14
mov rdi, r15
mov byte [rax + r14], 0
call free
mov rdi, qword [rbx]
mov rdx, qword [var_50h]
cmp rdx, qword [var_8h]
je 0x8000e70
mov rcx, qword [var_60h]
mov rax, qword [var_58h]
cmp rdi, qword [rsp]
je 0x8000eb0
movq xmm0, rax
movq xmm3, rcx
mov rsi, qword [rbx + 0x10]
mov qword [rbx], rdx
punpcklqdq xmm0, xmm3
movups xmmword [rbx + 8], xmm0
test rdi, rdi
je 0x8000ec5
mov qword [var_50h], rdi
mov qword [var_60h], rsi
mov qword [var_58h], 0
mov byte [rdi], 0
mov rdi, qword [var_50h]
cmp rdi, qword [var_8h]
je 0x8000a3e
mov rax, qword [var_60h]
lea rsi, [rax + 1]
call _ZdlPvm
jmp 0x8000a3e
nop
mov rdi, r12
lea rsi, [var_30h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [r12], rax
mov rdi, rax
mov rax, qword [var_30h]
mov qword [r12 + 0x10], rax
mov rdx, r13
mov rsi, rbp
call memcpy
mov r13, qword [var_30h]
mov rdi, qword [r12]
jmp 0x8000aab
nop dword [rax]
test r14, r14
jne 0x8000fdd
mov rax, qword [var_8h]
jmp 0x8000d1a
nop dword [rax + rax]
xor edx, edx
mov rsi, r8
mov rdi, r13
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_50h], rax
mov rdi, rax
mov rax, qword [var_30h]
mov qword [var_60h], rax
mov rsi, qword [var_10h]
mov rdx, r14
call memcpy
mov r14, qword [var_30h]
mov rax, qword [var_50h]
jmp 0x8000d1a
nop dword [rax + rax]
lea rax, [var_60h]
cmp qword [var_10h], 0
mov qword [var_8h], rax
mov qword [var_50h], rax
jne 0x8000fbe
lea rdi, [0x08000e6a]
call _ZSt19__throw_logic_errorPKc
add byte [rax], al
add byte [rax], al
nop
mov rdx, qword [var_58h]
test rdx, rdx
je 0x8000e96
cmp rdx, 1
je 0x8000f92
mov rsi, qword [var_8h]
call memcpy
mov rdx, qword [var_58h]
mov rdi, qword [rbx]
mov qword [rbx + 8], rdx
mov byte [rdi + rdx], 0
mov rdi, qword [var_50h]
jmp 0x8000d7f
nop dword [rax + rax]
movq xmm0, rax
movq xmm4, rcx
mov qword [rbx], rdx
punpcklqdq xmm0, xmm4
movups xmmword [rbx + 8], xmm0
mov rax, qword [var_8h]
mov qword [var_50h], rax
lea rax, [var_60h]
mov qword [var_8h], rax
mov rdi, rax
jmp 0x8000d7f
cmp qword [var_18h], 0
jne 0x8000fe7
mov rdx, r14
jmp 0x8000b63
nop dword [rax]
movq xmm0, rdx
movq xmm2, rax
mov qword [rbx], rsi
punpcklqdq xmm0, xmm2
movups xmmword [rbx + 8], xmm0
mov qword [var_30h], r14
lea r14, [var_40h]
mov rdi, r14
jmp 0x80008cf
xor edx, edx
mov rsi, r9
mov rdi, r8
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_30h], rax
mov rdi, rax
mov rax, qword [var_28h]
mov qword [var_40h], rax
mov rdx, qword [var_18h]
mov rsi, r15
call memcpy
mov rax, qword [var_28h]
mov rdx, qword [var_30h]
jmp 0x8000b63
test rdx, rdx
je 0x80008c2
cmp rdx, 1
jne 0x8000f7d
movzx eax, byte [var_40h]
mov byte [rdi], al
mov rdx, qword [var_38h]
mov rdi, qword [rbx]
jmp 0x80008c2
mov rsi, r14
call memcpy
mov rdx, qword [var_38h]
mov rdi, qword [rbx]
jmp 0x80008c2
movzx eax, byte [var_60h]
mov byte [rdi], al
mov rdx, qword [var_58h]
mov rdi, qword [rbx]
jmp 0x8000e96
lea rdi, [0x08000fad]
call _ZSt20__throw_length_errorPKc
lea rdi, [0x08000fb9]
call _ZSt19__throw_logic_errorPKc
mov r14, qword [var_10h]
mov qword [var_18h], r8
mov rdi, r14
call strlen
mov r8, qword [var_18h]
add r14, rax
jmp 0x8000ceb
mov rdi, qword [var_8h]
jmp 0x8000e27
mov rdi, r14
jmp 0x8000f3e
