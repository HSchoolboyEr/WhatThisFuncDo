push rbx
sub rsp, 0x10
fld xword [rsp + 0x20]
fld st(0)
fabs
fld dword [0x080003d3]
fcompi st(1)
fstp st(0)
jbe 0x80003f0
fldpi
fmulp st(1)
fstp xword [rsp + 0x20]
add rsp, 0x10
pop rbx
jmp cosl
nop dword [rax + rax]
fldz
fcompi st(1)
ja 0x8000498
fnstcw word [rsp + 0xe]
fld st(0)
movzx eax, word [var_eh]
and ah, 0xf3
or ah, 4
mov word [var_ch], ax
fldcw word [rsp + 0xc]
frndint
fldcw word [rsp + 0xe]
fld dword [0x08000420]
fld dword [0x08000426]
fmul st(2)
fldcw word [rsp + 0xc]
frndint
fldcw word [rsp + 0xe]
fadd st(0)
fsub st(2)
fabs
fld dword [0x0800043e]
fxch st(1)
fcompi st(1)
fstp st(0)
fxch st(2)
fsubrp st(1)
seta bl
fcomi st(1)
fstp st(1)
jbe 0x8000458
fld1
xor ebx, 1
fsubrp st(1)
fld dword [0x0800045e]
fxch st(1)
fucomi st(1)
fstp st(1)
jnp 0x80004a0
fld dword [0x0800046c]
fxch st(1)
fcomi st(1)
fstp st(1)
ja 0x80004b0
fldpi
sub rsp, 0x10
fmulp st(1)
fstp xword [rsp]
call cosl
pop rax
pop rdx
test bl, bl
je 0x80004a6
fchs
add rsp, 0x10
pop rbx
ret
nop word [rax + rax]
fchs
jmp 0x80003fa
nop
jne 0x8000466
fstp st(0)
fldz
add rsp, 0x10
pop rbx
ret
nop dword [rax]
fsubr dword [0x080004b6]
sub rsp, 0x10
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
pop rcx
pop rsi
jmp 0x8000486
