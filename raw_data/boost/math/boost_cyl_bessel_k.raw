push r12
movapd xmm3, xmm0
movapd xmm2, xmm0
push rbp
push rbx
sub rsp, 0x100
movq xmm5, qword [0x080023eb]
movsd xmm6, qword [0x080023f3]
movsd qword [rsp], xmm1
fld qword [rsp]
andpd xmm3, xmm5
movsd qword [var_10h], xmm0
ucomisd xmm6, xmm3
fstp xword [rsp]
fld qword [rsp + 0x10]
jbe 0x8002449
cvttsd2si rax, xmm0
pxor xmm3, xmm3
movsd xmm2, qword [0x08002423]
movapd xmm4, xmm5
andnpd xmm4, xmm0
cvtsi2sd xmm3, rax
movapd xmm7, xmm3
cmpnlesd xmm7, xmm0
andpd xmm7, xmm2
movapd xmm2, xmm3
subsd xmm2, xmm7
orpd xmm2, xmm4
ucomisd xmm0, xmm2
jp 0x8002528
jne 0x8002528
fld st(0)
fabs
fld xword [0x08002463]
fucompi st(1)
fstp st(0)
jb 0x8002e5d
pxor xmm3, xmm3
comisd xmm0, xmm3
jb 0x80025d8
comisd xmm2, xmmword [0x08002483]
ja 0x8003df1
movsd xmm0, qword [0x08002491]
comisd xmm0, xmm2
ja 0x8003df1
fstp st(0)
fld xword [rsp]
comisd xmm3, xmm1
fstp xword [rsp + 0xf0]
ja 0x80025f8
ucomisd xmm1, xmm3
jp 0x8002678
jne 0x8002678
movsd qword [rsp], xmm3
call __errno_location
fld dword [0x080024d1]
movsd xmm3, qword [rsp]
mov dword [rax], 0x22
movsd xmm0, qword [0x080024e4]
fld st(0)
fld qword [0x080024ec]
fxch st(2)
fcomi st(2)
fstp st(2)
jbe 0x800262f
fstp st(0)
fstp st(0)
jmp 0x8002504
nop
fstp st(0)
fstp st(0)
movsd qword [rsp], xmm0
call __errno_location
movsd xmm0, qword [rsp]
mov dword [rax], 0x22
add rsp, 0x100
pop rbx
pop rbp
pop r12
ret
nop dword [rax]
pxor xmm3, xmm3
comisd xmm3, xmm1
ja 0x8002590
ucomisd xmm1, xmm3
jp 0x8002750
jne 0x8002750
fstp st(0)
movsd qword [var_10h], xmm3
movsd qword [rsp], xmm0
call __errno_location
movsd xmm0, qword [rsp]
movsd xmm3, qword [var_10h]
ucomisd xmm0, xmm3
jp 0x8002ce0
jne 0x8002ce0
mov dword [rax], 0x22
movsd xmm0, qword [0x0800257d]
mov dword [rax], 0x22
add rsp, 0x100
pop rbx
pop rbp
pop r12
ret
nop
fstp st(0)
call __errno_location
mov dword [rax], 0x21
fld dword [0x080025a3]
movsd xmm0, qword [0x080025ab]
fld qword [0x080025b1]
fcompi st(1)
fstp st(0)
jbe 0x8002519
movsd qword [rsp], xmm0
call __errno_location
movsd xmm0, qword [rsp]
mov dword [rax], 0x22
jmp 0x8002519
nop dword [rax]
movapd xmm2, xmm0
andpd xmm2, xmm5
ucomisd xmm6, xmm2
ja 0x8002710
movapd xmm2, xmm0
jmp .LC163
nop dword [rax + rax]
movsd qword [rsp], xmm3
call __errno_location
fld dword [0x08002608]
movsd xmm3, qword [rsp]
mov dword [rax], 0x21
movsd xmm0, qword [0x0800261b]
fld st(0)
fld qword [0x08002623]
fxch st(2)
fcomi st(2)
fstp st(2)
ja 0x8002500
fldz
fucomi st(1)
jp 0x8002c96
fcompi st(1)
fstp st(0)
jne 0x8002ca0
fld qword [0x08002649]
fcompi st(1)
fstp st(0)
jbe 0x8002519
ucomisd xmm0, xmm3
jp 0x80025bb
comisd xmm0, xmm3
jne 0x80025bb
add rsp, 0x100
pop rbx
pop rbp
pop r12
ret
nop dword [rax + rax]
cvttsd2si ebx, xmm2
test ebx, ebx
je 0x8002eb8
mov eax, ebx
movsd qword [var_10h], xmm3
sar eax, 0x1f
xor ebx, eax
sub ebx, eax
cmp ebx, 1
je 0x8002f68
lea rbp, [var_f0h]
mov rdi, rbp
call method long double boost::math::detail::bessel_k0_imp<long double>(long double const&, std::integral_constant<int, 64> const&) [clone .isra.0]
mov rdi, rbp
fstp xword [rsp]
call method long double boost::math::detail::bessel_k1_imp<long double>(long double const&, std::integral_constant<int, 64> const&) [clone .isra.0]
movsd xmm3, qword [var_10h]
mov eax, 1
fld xword [rsp + 0xf0]
fld1
fld xword [0x080026d1]
fld xword [rsp]
nop dword [rax]
lea edx, [rax + rax]
mov dword [rsp], edx
fild dword [rsp]
fdiv st(4)
fld st(1)
fabs
fsubr st(3)
fdiv st(1)
fld st(6)
fabs
fcompi st(1)
fstp st(0)
ja 0x8002c78
fmul st(5)
add eax, 1
faddp st(1)
cmp ebx, eax
jle 0x8002cf0
fxch st(4)
jmp 0x80026d8
nop dword [rax]
cvttsd2si rax, xmm0
pxor xmm2, xmm2
movapd xmm4, xmm0
movsd xmm6, qword [0x08002725]
andnpd xmm5, xmm0
cvtsi2sd xmm2, rax
cmpnlesd xmm4, xmm2
andpd xmm4, xmm6
addsd xmm2, xmm4
orpd xmm2, xmm5
movapd xmm0, xmm2
movapd xmm2, xmm0
jmp .LC163
nop dword [rax]
xor ebx, ebx
comisd xmm3, xmm0
jbe 0x800275f
fchs
mov ebx, 1
fld st(0)
fabs
fld xword [0x08002769]
fucompi st(1)
fstp st(0)
jb 0x8002dd8
fld dword [0x08002779]
fxch st(1)
movss xmm6, dword [0x08002783]
movss dword [var_8ch], xmm6
fcomi st(1)
fstp st(1)
jbe 0x80027a3
fld dword [rsp + 0x8c]
xor ebp, ebp
fcompi st(1)
ja .LC262
fnstcw word [rsp + 0xee]
fldz
fxch st(1)
pxor xmm6, xmm6
movss dword [var_70h], xmm6
movzx eax, word [var_eeh]
and ah, 0xf3
fcomi st(1)
fstp st(1)
jbe 0x8003208
or ah, 8
fld st(0)
mov word [var_e8h], ax
fldcw word [rsp + 0xe8]
frndint
fldcw word [rsp + 0xee]
fld st(0)
fsub st(2)
fld dword [rsp + 0x8c]
fxch st(1)
fcompi st(1)
fstp st(0)
jbe 0x8002801
fld1
fsubp st(1)
fld qword [0x08002807]
fxch st(1)
fcomi st(1)
fstp st(1)
jbe .LC164
fstp st(0)
fstp xword [rsp + 0x10]
mov ebp, 0x7fffffff
movsd qword [var_30h], xmm3
movsd qword [var_20h], xmm1
call __errno_location
fld xword [rsp + 0x10]
movsd xmm1, qword [var_20h]
movsd xmm3, qword [var_30h]
mov dword [rax], 0x22
fld xword [0x0800284b]
fsubp st(1)
nop dword [rax]
movsd xmm0, qword [0x08002858]
comisd xmm0, xmm1
jb 0x8002f80
movsd qword [var_20h], xmm3
sub rsp, 0x10
fld st(0)
fstp xword [rsp]
fstp xword [rsp + 0x20]
call sym._ZN5boost4math6detail14tgammap1m1_impIeNS0_8policies6policyINS3_12domain_errorILNS3_17error_policy_typeE1EEENS3_10pole_errorIL
fld st(0)
fld st(0)
fstp xword [rsp + 0x40]
pop r10
pop r11
movsd xmm3, qword [var_20h]
fabs
fld xword [0x08002894]
fxch st(1)
fcomi st(1)
fstp st(1)
fld xword [rsp + 0x10]
ja 0x8003513
fldz
mov edx, 1
mov ecx, 0
fucompi st(3)
fstp st(2)
setp al
cmovne eax, edx
setnp dl
cmovne edx, ecx
test dl, dl
je .LC160
test al, al
je .LC160
fstp st(0)
fstp xword [rsp + 0x10]
movsd qword [var_20h], xmm3
call __errno_location
movsd xmm3, qword [var_20h]
fldz
mov dword [rax], 0x22
fstp xword [rsp + 0x30]
fld xword [rsp + 0x10]
fld st(0)
sub rsp, 0x10
fstp xword [rsp + 0x20]
movsd qword [var_50h_2], xmm3
fchs
fld st(0)
fstp xword [rsp + 0xa0]
fstp xword [rsp]
call sym._ZN5boost4math6detail14tgammap1m1_impIeNS0_8policies6policyINS3_12domain_errorILNS3_17error_policy_typeE1EEENS3_10pole_errorIL
fld st(0)
fld st(0)
fstp xword [rsp + 0x30]
pop r8
pop r9
movsd xmm3, qword [var_50h_2]
fabs
fld xword [0x08002934]
fxch st(1)
fcomi st(1)
fstp st(1)
fld xword [rsp + 0x10]
ja 0x80034eb
fldz
mov edx, 1
mov ecx, 0
fucompi st(3)
fstp st(2)
setp al
cmovne eax, edx
setnp dl
cmovne edx, ecx
test dl, dl
je .LC160
test al, al
je .LC160
fstp st(0)
fstp xword [rsp + 0x10]
movsd qword [var_50h_2], xmm3
call __errno_location
movsd xmm3, qword [var_50h_2]
fldz
mov dword [rax], 0x22
fstp xword [rsp + 0x20]
fld xword [rsp + 0x10]
sub rsp, 0x10
fstp xword [rsp + 0x20]
fld dword [rsp + 0x9c]
movsd qword [var_50h], xmm3
fld st(0)
fstp xword [rsp + 0xb0]
fld xword [rsp + 0x10]
fmulp st(1)
fstp xword [rsp]
call logl
sub rsp, 0x10
fld st(0)
fstp xword [rsp + 0x60]
fld xword [rsp + 0x30]
fmulp st(1)
fstp xword [rsp]
call expl
movss xmm6, dword [0x080029e3]
fld xword [rsp + 0x60]
fchs
fld st(0)
fstp xword [rsp + 0x80]
fld xword [rsp + 0x30]
fmul st(1), st(0)
fxch st(1)
fstp xword [rsp + 0x60]
add rsp, 0x20
movsd xmm3, qword [var_50h]
fld st(0)
movss dword [var_10h], xmm6
fabs
fld dword [rsp + 0x10]
fcomi st(1)
jbe 0x800353b
fld xword [rsp + 0x40]
fabs
fxch st(1)
fcompi st(1)
fstp st(0)
jbe 0x80036a6
fstp st(0)
fld1
fld st(0)
fstp xword [rsp + 0x50]
fld xword [0x08002a40]
fstp xword [rsp + 0xd0]
fstp xword [rsp + 0xb0]
movsd qword [var_c0h], xmm3
fstp xword [rsp + 0xa0]
fld xword [rsp + 0x30]
fld1
faddp st(1)
fld st(1)
fadd st(2)
fdivp st(1)
fstp xword [rsp + 0x90]
fld xword [rsp + 0x20]
fld1
faddp st(1)
fmulp st(1)
fmul dword [rsp + 0x8c]
fstp xword [rsp + 0x70]
push qword [var_50h_2]
push qword [var_48h]
call coshl
mov eax, 1
fld xword [rsp + 0x40]
fadd dword [0x08002aa4]
fld xword [rsp + 0x30]
faddp st(1)
fld xword [rsp + 0xc0]
fmul st(1), st(0)
fld dword [rsp + 0x9c]
fmulp st(2)
fld xword [rsp + 0x70]
fld xword [rsp + 0x60]
fmulp st(1)
fmulp st(2)
fld xword [rsp + 0xe0]
fmulp st(3)
fxch st(1)
faddp st(2)
fdivp st(1)
fld xword [rsp + 0xb0]
fld st(0)
fmul st(1)
fstp xword [rsp + 0x60]
fld xword [rsp + 0x10]
fld st(0)
fmulp st(1)
fstp xword [rsp + 0x70]
pop r9
pop r10
movsd xmm3, qword [var_c0h]
fld xword [rsp + 0x90]
fld st(0)
fstp xword [rsp + 0x30]
fld st(2)
fld1
fld xword [rsp + 0x70]
fstp xword [rsp + 0x20]
jmp 0x8002b30
nop word [rax + rax]
add rax, 1
cmp rax, 0xf4240
je 0x80033c4
mov qword [var_50h_2], rax
fild qword [rsp + 0x40]
mov rdx, rax
imul rdx, rax
fmul st(5), st(0)
fxch st(5)
mov qword [var_50h_2], rdx
lea rdx, [rax*4]
fadd st(3)
fld xword [rsp + 0x20]
faddp st(1)
fild qword [rsp + 0x40]
mov qword [var_50h_2], rdx
fld xword [rsp + 0x50]
fsubp st(1)
fdivp st(1)
fld st(5)
fsub st(5)
fdivp st(4)
fld st(5)
fadd st(5)
fld xword [rsp + 0x20]
fdivrp st(1)
fstp xword [rsp + 0x20]
fild qword [rsp + 0x40]
fld xword [rsp + 0x60]
fdivrp st(1)
fmulp st(2)
fld st(0)
fmul st(2)
fadd st(3), st(0)
fxch st(6)
fmul st(1)
fsubr st(4)
fmul st(2)
fld xword [rsp + 0x30]
faddp st(1)
fstp xword [rsp + 0x30]
fxch st(5)
fabs
fld st(2)
fabs
fmul dword [rsp + 0x10]
fcompi st(1)
fstp st(0)
jbe 0x8002b20
fstp st(0)
fstp st(3)
fstp st(0)
fxch st(1)
fld xword [rsp + 0x30]
fadd st(0)
fld xword [rsp]
fdivp st(1)
fld1
fld st(0)
fstp xword [rsp + 0x30]
test ebp, ebp
je 0x8002ee4
fld xword [0x08002be1]
mov edx, 1
jmp 0x8002c05
nop dword [rax + rax]
fmul st(3)
add edx, 1
faddp st(4)
cmp edx, ebp
ja 0x8002ef0
fxch st(2)
fxch st(3)
fxch st(2)
mov eax, edx
mov qword [var_20h], rax
fild qword [rsp + 0x20]
fadd st(5)
fadd st(0)
fld xword [rsp]
fdivp st(1)
fld st(4)
fabs
fsubr st(2)
fdiv st(1)
fld st(4)
fabs
fcompi st(1)
fstp st(0)
jbe 0x8002bf0
fxch st(4)
fdiv st(3)
fxch st(2)
fdiv st(3)
fldz
fucomi st(4)
jp 0x8002e7f
fcomi st(4)
jne 0x8002e88
fstp st(4)
fxch st(1)
fxch st(2)
fxch st(3)
fld xword [rsp + 0x30]
fmulp st(1)
fstp xword [rsp + 0x30]
jmp 0x8002c64
nop dword [rax]
fxch st(1)
fxch st(2)
fld1
fxch st(3)
fxch st(4)
fxch st(1)
fxch st(2)
fxch st(1)
jmp 0x8002bf2
nop word [rax + rax]
fxch st(3)
fdiv st(5)
fxch st(5)
add eax, 1
fdivp st(1)
faddp st(2)
cmp ebx, eax
jle 0x8002d00
fld1
fxch st(2)
fxch st(4)
fxch st(2)
jmp 0x80026d8
fstp st(0)
fstp st(0)
nop word [rax + rax]
ucomisd xmm0, xmm3
movsd qword [rsp], xmm3
jp .LC265
jne .LC265
fstp st(0)
call __errno_location
movsd xmm3, qword [rsp]
mov dword [rax], 0x22
add rsp, 0x100
pop rbx
movapd xmm0, xmm3
pop rbp
pop r12
ret
nop word [rax + rax]
mov dword [rax], 0x21
jmp .LC49
nop dword [rax + rax]
fstp st(3)
fstp st(0)
fstp st(2)
jmp 0x8002d04
nop dword [rax + rax]
fstp st(0)
fstp st(1)
fld xword [0x08002d0a]
fmul st(2)
fld st(1)
fabs
fcompi st(1)
fstp st(0)
jbe 0x8002e48
fldz
pxor xmm6, xmm6
fucomi st(2)
movss dword [var_70h], xmm6
jp 0x8002d36
fcompi st(2)
je .LC49
fxch st(1)
jmp 0x8002d40
fstp st(0)
fxch st(1)
nop word [rax + rax]
fxam
fnstsw ax
fstp st(0)
test ah, 2
jne .LC156
fld dword [0x08002d55]
movsd xmm1, qword [0x08002d5d]
movsd xmm0, qword [0x08002d65]
fld st(0)
fld dword [0x08002d6d]
fldz
fucomi st(4)
jp 0x8002d7f
fcompi st(4)
je 0x8003280
fxch st(3)
jmp 0x8002d88
fstp st(0)
fxch st(3)
nop dword [rax + rax]
fxam
fnstsw ax
fstp st(0)
test ah, 2
jne 0x8002d9d
fstp st(2)
fxch st(1)
movapd xmm0, xmm1
jmp 0x8002d9f
fstp st(1)
fstp xword [rsp + 0x10]
movsd qword [var_30h], xmm3
fstp xword [rsp]
movsd qword [var_20h], xmm0
call __errno_location
movsd xmm0, qword [var_20h]
fld xword [rsp + 0x10]
fld xword [rsp]
movsd xmm3, qword [var_30h]
mov dword [rax], 0x22
jmp .LC264
nop dword [rax]
fstp xword [rsp + 0x10]
movsd qword [var_30h], xmm3
movsd qword [var_20h], xmm1
call __errno_location
pxor xmm6, xmm6
movsd xmm1, qword [var_20h]
movsd xmm3, qword [var_30h]
movss dword [var_70h], xmm6
fld xword [rsp + 0x10]
movss xmm6, dword [0x08002e0f]
mov dword [rax], 0x22
movss dword [var_8ch], xmm6
fldz
fxch st(1)
mov dword [rax], 0x22
fcomi st(1)
fstp st(1)
jbe .LC261
fsub qword [0x08002e38]
mov ebp, 0x7fffffff
jmp .LC262
nop word [rax + rax]
fdivrp st(1)
fld st(0)
fabs
fxch st(1)
fst qword [rsp]
movsd xmm0, qword [rsp]
jmp .LC264
lea rdx, [var_f0h]
lea rsi, [0x08002e6c]
fstp xword [rsp + 0xf0]
lea rdi, [0x08002e7a]
call _ZN5boost4math8policies6detail11raise_errorINS0_14rounding_errorEeEEvPKcS6_RKT0_
fstp st(0)
fxch st(3)
jmp 0x8002e8c
nop dword [rax]
fstp st(0)
fxch st(3)
fxam
fnstsw ax
fstp st(0)
test ah, 2
je 0x8002c60
fld xword [rsp + 0x30]
fchs
fstp xword [rsp + 0x30]
fld1
fxch st(3)
fxch st(2)
fxch st(4)
jmp 0x8002bf2
nop word [rax + rax]
lea rdi, [var_f0h]
movsd qword [var_10h], xmm3
call method long double boost::math::detail::bessel_k0_imp<long double>(long double const&, std::integral_constant<int, 64> const&) [clone .isra.0]
fld st(0)
movsd xmm3, qword [var_10h]
fabs
fxch st(1)
fst qword [rsp]
movsd xmm0, qword [rsp]
jmp .LC264
fstp st(1)
jmp 0x8002ef6
nop dword [rax + rax]
fstp st(0)
fstp st(2)
fxch st(1)
test bl, bl
jne 0x80032c0
fstp st(2)
fxch st(1)
jmp 0x8002f10
fxch st(1)
jmp 0x8002f10
fxch st(1)
jmp 0x8002f10
fstp st(2)
fxch st(1)
fld xword [0x08002f16]
fmul st(1)
fxch st(2)
fcomi st(2)
fstp st(2)
jbe 0x80030e0
fstp st(0)
fldz
fucomi st(1)
jp 0x8003712
fcomi st(1)
jne 0x8003720
fstp st(1)
fld xword [rsp + 0x30]
fmulp st(1)
fstp xword [rsp + 0x30]
movsd qword [var_10h], xmm3
call __errno_location
fld xword [rsp + 0x30]
fmul dword [0x08002f59]
mov dword [rax], 0x22
jmp 0x8002ecb
nop dword [rax]
lea rdi, [var_f0h]
call method long double boost::math::detail::bessel_k1_imp<long double>(long double const&, std::integral_constant<int, 64> const&) [clone .isra.0]
jmp 0x8002ecb
nop word [rax + rax]
fld st(0)
pxor xmm6, xmm6
mov edx, 2
mov eax, 2
fmul st(1)
movss xmm5, dword [0x08002f9a]
movss dword [var_70h], xmm6
movss dword [var_10h], xmm5
fsub dword [0x08002fac]
fld st(0)
fstp xword [rsp + 0x90]
fld1
fld xword [rsp]
fadd st(1)
fadd st(0)
fld st(1)
fdiv st(1)
fld st(3)
fchs
fld st(1)
fmul st(1)
fadd st(4)
fstp xword [rsp + 0x20]
fld st(0)
fstp xword [rsp + 0x50]
fxch st(1)
fld st(0)
fstp xword [rsp + 0x40]
fldz
fxch st(4)
fstp xword [rsp + 0x30]
fld st(0)
fxch st(6)
fstp xword [rsp + 0xa0]
jmp 0x8003042
nop dword [rax + rax]
fstp st(2)
fxch st(1)
fld xword [rsp + 0x30]
fdiv st(2)
fxch st(2)
fdiv st(0)
fstp xword [rsp + 0x30]
fld xword [rsp + 0x60]
fxch st(2)
fxch st(1)
fabs
fld xword [rsp + 0x20]
fabs
fmul dword [rsp + 0x10]
fcompi st(1)
fstp st(0)
ja 0x8003158
add rax, 1
add rdx, 2
cmp rax, 0xf4240
je 0x8003903
fxch st(3)
fxch st(5)
fxch st(2)
mov qword [var_60h], rdx
fild qword [rsp + 0x60]
mov qword [var_60h], rax
fsubp st(5)
fxch st(2)
fadd dword [0x0800305a]
fxch st(5)
fmul st(4)
fadd st(5)
fld1
fdivr st(1), st(0)
fld st(6)
fmul st(2)
fsubrp st(1)
fmulp st(3)
fld xword [rsp + 0x40]
fadd st(3)
fstp xword [rsp + 0x40]
fld dword [0x0800307c]
fsubr st(6)
fld xword [rsp + 0x30]
fmulp st(1)
fsubp st(4)
fxch st(3)
fdiv st(4)
fld st(4)
fchs
fild qword [rsp + 0x60]
fdivp st(1)
fmulp st(2)
fld st(0)
fmul st(2)
fld xword [rsp + 0x50]
fxch st(1)
fstp xword [rsp + 0x60]
fld xword [rsp + 0x60]
faddp st(1)
fld st(0)
fstp xword [rsp + 0x50]
fmul st(3)
fld xword [rsp + 0x20]
fadd st(1)
fstp xword [rsp + 0x20]
fld dword [rsp + 0x10]
fcompi st(2)
ja 0x8002ff8
fld xword [rsp + 0x30]
fxch st(2)
fstp xword [rsp + 0x30]
jmp 0x8003012
nop word [rax + rax]
fdivp st(1)
fld st(0)
fld st(1)
fabs
fxch st(2)
fstp qword [rsp]
movsd xmm0, qword [rsp]
jmp .LC264
nop word [rax + rax]
fld dword [0x08003106]
fcompi st(1)
ja 0x8003252
fnstcw word [rsp + 0xee]
movzx eax, word [var_eeh]
or ah, 0xc
mov word [var_eah], ax
fldcw word [rsp + 0xea]
fistp dword [rsp + 0x10]
fldcw word [rsp + 0xee]
mov eax, dword [var_10h]
mov qword [var_10h], rax
fild qword [rsp + 0x10]
mov rbp, rax
fsubp st(1)
jmp .LC262
nop dword [rax]
fstp st(0)
fstp st(0)
fstp st(0)
fstp st(0)
fstp st(0)
fstp st(0)
fld xword [rsp + 0xa0]
fldpi
fld xword [rsp]
comisd xmm1, xmmword [0x08003178]
fld st(0)
faddp st(1)
fdivp st(1)
jb 0x8003378
fxch st(1)
fstp xword [rsp + 0x50]
sub rsp, 0x10
movsd qword [var_60h], xmm3
fstp xword [rsp]
call logl
fstp xword [rsp + 0x40]
push qword [var_20h]
push qword [var_38h]
call logl
pop rcx
pop rsi
fld xword [rsp + 0x40]
fmul dword [rsp + 0x9c]
fld xword [rsp + 0x10]
fsubp st(1)
fsubrp st(1)
fstp xword [rsp]
call expl
pop rdi
pop r8
movsd xmm3, qword [var_60h]
fld xword [rsp + 0x50]
fld st(0)
fadd dword [var_8ch]
fld xword [rsp]
fadd st(1), st(0)
fld xword [rsp + 0x90]
fld xword [rsp + 0x40]
fmulp st(1)
faddp st(2)
fxch st(1)
fmul st(3)
fdivrp st(1)
fxch st(1)
fxch st(2)
fxch st(1)
jmp 0x8002bcb
nop dword [rax]
or ah, 4
fld st(0)
mov word [var_ech], ax
fldcw word [rsp + 0xec]
frndint
fldcw word [rsp + 0xee]
fld st(1)
fsub st(1)
fld dword [rsp + 0x8c]
fxch st(1)
fcompi st(1)
fstp st(0)
jbe 0x800323c
fld1
faddp st(1)
fld qword [0x08003242]
fxch st(1)
fcomi st(1)
fstp st(1)
jbe .LC164
fstp st(0)
jmp 0x8003254
fstp st(0)
fstp xword [rsp + 0x10]
movsd qword [var_30h], xmm3
movsd qword [var_20h], xmm1
call __errno_location
movsd xmm1, qword [var_20h]
fld xword [rsp + 0x10]
movsd xmm3, qword [var_30h]
jmp 0x8002e1e
nop
fstp st(0)
fstp st(0)
fstp st(0)
fstp st(0)
fld dword [0x0800328e]
movsd xmm0, qword [0x08003296]
fld st(0)
jmp 0x8002d9f
nop dword [rax]
fstp st(1)
fld dword [0x080032a8]
movsd xmm1, qword [0x080032b0]
movapd xmm0, xmm1
fld st(0)
fld st(1)
jmp 0x8002d6d
nop dword [rax]
and ebp, 1
pxor xmm6, xmm6
mov dword [rsp], ebp
fild dword [rsp]
movss dword [var_70h], xmm6
faddp st(3)
fldz
fcomi st(3)
ja 0x80038a5
fstp st(0)
fld dword [rsp + 0x8c]
fcompi st(3)
jbe 0x8003740
fstp xword [rsp + 0x10]
sub rsp, 0x10
movsd qword [var_20h], xmm3
fstp xword [rsp + 0x10]
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
pop rcx
pop rsi
fld xword [rsp]
movsd xmm3, qword [var_20h]
fld xword [rsp + 0x10]
fldz
mov edx, 1
mov ecx, 0
fucompi st(3)
setp al
cmovne eax, edx
setnp dl
cmovne edx, ecx
test dl, dl
je 0x800347c
test al, al
je 0x8003480
fstp st(2)
fxch st(1)
fstp xword [rsp + 0x10]
movsd qword [var_20h], xmm3
fstp xword [rsp]
call __errno_location
movsd xmm3, qword [var_20h]
fld xword [rsp]
fld xword [rsp + 0x10]
mov dword [rax], 0x22
jmp .LC158
nop dword [rax]
fldz
fucompi st(1)
ja 0x8003e31
fsqrt
fxch st(1)
fstp xword [rsp + 0x50]
sub rsp, 0x10
movsd qword [var_60h], xmm3
fstp xword [rsp + 0x40]
fld xword [rsp + 0x10]
fchs
fstp xword [rsp]
call expl
fld xword [rsp + 0x40]
fmulp st(1)
fld xword [rsp + 0x30]
pop r12
pop rax
movsd xmm3, qword [var_60h]
fdivp st(1)
fld xword [rsp + 0x50]
jmp 0x80031d7
fstp st(0)
fstp st(3)
fstp st(0)
fstp xword [rsp + 0x40]
movsd qword [var_50h], xmm3
fstp xword [rsp + 0x20]
call __errno_location
movsd xmm3, qword [var_50h]
fld xword [rsp + 0x40]
fld xword [rsp + 0x20]
mov dword [rax], 0x21
jmp 0x8002bc0
nop word cs:[rax + rax]
fld xword [0x08003406]
fcompi st(1)
fstp st(0)
jbe 0x8002997
test al, al
je 0x8002997
fstp xword [rsp + 0x10]
movsd qword [var_50h_2], xmm3
call __errno_location
movsd xmm3, qword [var_50h_2]
fld xword [rsp + 0x10]
mov dword [rax], 0x22
jmp 0x8002997
nop dword [rax]
fld xword [0x08003446]
fcompi st(1)
fstp st(0)
jbe 0x80028f7
test al, al
je 0x80028f7
fstp xword [rsp + 0x10]
movsd qword [var_20h], xmm3
call __errno_location
movsd xmm3, qword [var_20h]
fld xword [rsp + 0x10]
mov dword [rax], 0x22
jmp 0x80028f7
fxch st(2)
jmp 0x8003482
fxch st(2)
fabs
fld xword [0x0800348a]
fcompi st(1)
fstp st(0)
jbe 0x8002f04
test al, al
je 0x8002f08
fxch st(1)
fstp xword [rsp + 0x10]
movsd qword [var_20h], xmm3
fstp xword [rsp]
call __errno_location
movsd xmm3, qword [var_20h]
fld xword [rsp]
mov dword [rax], 0x22
fld xword [rsp + 0x10]
jmp .LC158
fld dword [0x080034ce]
fld dword [0x080034d4]
movsd xmm1, qword [0x080034dc]
movsd xmm0, qword [0x080034e4]
fld st(0)
jmp 0x8002d6d
fstp st(1)
fstp st(1)
fstp xword [rsp + 0x10]
movsd qword [var_50h_2], xmm3
call __errno_location
movsd xmm3, qword [var_50h_2]
fld xword [rsp + 0x10]
mov dword [rax], 0x22
jmp 0x8002997
fstp st(1)
fstp st(1)
fstp xword [rsp + 0x10]
movsd qword [var_20h], xmm3
call __errno_location
movsd xmm3, qword [var_20h]
fld xword [rsp + 0x10]
mov dword [rax], 0x22
jmp 0x80028f7
fldz
pxor xmm6, xmm6
fcomi st(3)
movss dword [var_70h], xmm6
ja 0x8003a5c
fstp st(0)
fldpi
fmul st(3)
fld xword [rsp + 0xa0]
fcompi st(4)
jbe 0x8003946
fstp st(1)
fxch st(2)
fstp xword [rsp + 0xb0]
sub rsp, 0x10
movsd qword [var_c0h], xmm3
fstp xword [rsp + 0xb0]
fxch st(1)
fstp xword [rsp + 0xa0]
fld st(0)
fstp xword [rsp]
fstp xword [rsp + 0x60]
call sinl
pop rcx
pop rsi
movsd xmm3, qword [var_c0h]
fld xword [rsp + 0x50]
fld xword [rsp + 0x90]
fld xword [rsp + 0xa0]
fld xword [rsp + 0xb0]
fldz
mov edx, 1
mov ecx, 0
fucompi st(5)
setp al
cmovne eax, edx
setnp dl
cmovne edx, ecx
test dl, dl
je 0x8003821
test al, al
je 0x8003821
fstp st(4)
fxch st(1)
fxch st(2)
fxch st(3)
fstp xword [rsp + 0xb0]
movsd qword [var_c0h], xmm3
fstp xword [rsp + 0xa0]
fstp xword [rsp + 0x90]
fstp xword [rsp + 0x50]
call __errno_location
movsd xmm3, qword [var_c0h]
mov dword [rax], 0x22
fldz
fld xword [rsp + 0xb0]
fld xword [rsp + 0xa0]
fld xword [rsp + 0x90]
fld xword [rsp + 0x50]
jmp 0x800365b
fxch st(3)
fxch st(1)
fxch st(2)
fxch st(1)
jmp 0x800365b
fxch st(3)
fxch st(1)
fxch st(2)
fxch st(1)
jmp 0x800365b
fxch st(4)
fxch st(1)
fdivp st(4)
fld xword [rsp + 0x40]
fabs
fld dword [rsp + 0x10]
fld1
fstp xword [rsp + 0x50]
fcompi st(1)
fstp st(0)
jbe 0x80036aa
fld dword [rsp + 0x10]
fcompi st(2)
fstp st(1)
ja .LC252
fld xword [rsp + 0x30]
fld xword [rsp + 0x20]
fsubp st(1)
fld st(2)
fdivr dword [rsp + 0x8c]
fmulp st(1)
fmul st(3)
fstp xword [rsp + 0xd0]
fxch st(2)
jmp 0x8002a47
fld1
jmp 0x80036ac
fxch st(3)
fstp xword [rsp + 0xb0]
fxch st(1)
movsd qword [var_c0h], xmm3
fstp xword [rsp + 0xa0]
fstp xword [rsp + 0x90]
fstp xword [rsp + 0x70]
push qword [var_50h_2]
push qword [var_48h]
call sinhl
fld xword [rsp + 0x50]
fdivp st(1)
fstp xword [rsp + 0x60]
pop r11
pop r12
movsd xmm3, qword [var_c0h]
fld xword [rsp + 0xb0]
fld xword [rsp + 0xa0]
fld xword [rsp + 0x90]
fld xword [rsp + 0x70]
jmp 0x8003673
fstp st(0)
jmp 0x8003722
nop word cs:[rax + rax]
fstp st(0)
fxam
fnstsw ax
fstp st(0)
test ah, 2
je 0x8002f44
fld xword [rsp + 0x30]
fchs
fstp xword [rsp + 0x30]
jmp 0x8002f44
fld1
xor ebp, ebp
fcompi st(3)
jbe 0x8003752
fxch st(2)
fchs
fxch st(2)
mov ebp, ebx
xor ebx, ebx
fnstcw word [rsp + 0xee]
fld st(2)
movzx eax, word [var_eeh]
and ah, 0xf3
or ah, 4
mov word [var_ech], ax
fldcw word [rsp + 0xec]
frndint
fldcw word [rsp + 0xee]
fld dword [rsp + 0x8c]
fld st(0)
fld st(2)
fmulp st(2)
fxch st(1)
fldcw word [rsp + 0xec]
frndint
fldcw word [rsp + 0xee]
fadd st(0)
fsub st(2)
fabs
fld dword [rsp + 0x10]
fxch st(1)
fucompi st(1)
fstp st(0)
fxch st(4)
fsubrp st(1)
cmova ebp, ebx
fcomi st(3)
fstp st(3)
jbe 0x80037c1
fld1
fsubrp st(3)
fld dword [rsp + 0x8c]
fxch st(3)
fucomi st(3)
fstp st(3)
jnp 0x8003ae4
fstp xword [rsp + 0x10]
sub rsp, 0x10
movsd qword [var_20h], xmm3
fstp xword [rsp + 0x10]
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
test bpl, bpl
pop rax
pop rdx
fld xword [rsp]
movsd xmm3, qword [var_20h]
fld xword [rsp + 0x10]
je 0x800331d
fxch st(2)
jmp 0x8003818
fxch st(2)
jmp 0x8003818
fxch st(1)
fxch st(2)
fxch st(1)
fchs
fxch st(2)
jmp 0x800331d
fld st(4)
fabs
fld xword [0x0800382b]
fcompi st(1)
fstp st(0)
jbe 0x8003643
test al, al
je 0x800364d
fstp xword [rsp + 0xb0]
fxch st(3)
movsd qword [var_c0h], xmm3
fstp xword [rsp + 0xa0]
fxch st(2)
fstp xword [rsp + 0x90]
fxch st(1)
fstp xword [rsp + 0x70]
fstp xword [rsp + 0x50]
call __errno_location
fld xword [rsp + 0x50]
movsd xmm3, qword [var_c0h]
mov dword [rax], 0x22
fld xword [rsp + 0x70]
fld xword [rsp + 0x90]
fld xword [rsp + 0xa0]
fld xword [rsp + 0xb0]
fxch st(3)
fxch st(1)
fxch st(4)
jmp 0x800365b
fld st(3)
fchs
fxch st(4)
fcomi st(1)
fstp st(1)
ja 0x8003bf4
fld dword [0x080038bb]
fxch st(1)
fcomi st(1)
fstp st(1)
jbe 0x8003b00
fstp st(0)
fstp xword [rsp + 0x10]
sub rsp, 0x10
movsd qword [var_20h], xmm3
fstp xword [rsp + 0x10]
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
pop r10
pop r11
fld xword [rsp]
movsd xmm3, qword [var_20h]
fld xword [rsp + 0x10]
fxch st(2)
fchs
fxch st(2)
jmp 0x800331d
fstp st(0)
fstp st(0)
fstp st(0)
fstp st(0)
fstp st(0)
fstp st(0)
fld xword [rsp + 0xa0]
movsd qword [var_60h], xmm3
movsd qword [var_50h], xmm1
fstp xword [rsp + 0x30]
call __errno_location
movsd xmm1, qword [var_50h]
fld xword [rsp + 0x30]
movsd xmm3, qword [var_60h]
mov dword [rax], 0x21
jmp 0x800316b
fnstcw word [rsp + 0xee]
fld1
fcomi st(4)
fld xword [rsp + 0x90]
movzx eax, word [var_eeh]
setbe dl
seta r12b
fcmovbe st(0), st(5)
and ah, 0xf3
or ah, 4
mov word [var_ech], ax
fld st(0)
fstp xword [rsp + 0x90]
fldcw word [rsp + 0xec]
frndint
fldcw word [rsp + 0xee]
fld xword [rsp + 0xa0]
fmul st(1)
fldcw word [rsp + 0xec]
frndint
fldcw word [rsp + 0xee]
fadd st(0)
fsub st(1)
fabs
fucompi st(4)
fstp st(3)
fld xword [rsp + 0x90]
cmova r12d, edx
fsubrp st(3)
fld xword [rsp + 0xa0]
fxch st(3)
fcomi st(3)
fstp st(3)
jbe 0x80039d3
fsubrp st(2)
jmp 0x80039d5
fstp st(0)
fld dword [rsp + 0x8c]
fxch st(2)
fucomi st(2)
fstp st(2)
jnp 0x8003c2a
fxch st(3)
jmp 0x80039ee
fxch st(3)
fstp xword [rsp + 0xb0]
fxch st(1)
sub rsp, 0x10
movsd qword [var_c0h], xmm3
fstp xword [rsp + 0xb0]
fxch st(2)
fstp xword [rsp + 0xa0]
fstp xword [rsp + 0x60]
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
test r12b, r12b
pop rax
pop rdx
movsd xmm3, qword [var_c0h]
fld xword [rsp + 0x50]
fld xword [rsp + 0x90]
fld xword [rsp + 0xa0]
fld xword [rsp + 0xb0]
je 0x80035be
fxch st(4)
fchs
fxch st(4)
jmp 0x80035be
fstp st(1)
fxch st(2)
fcomi st(2)
fstp st(2)
ja 0x8003d7f
fld dword [0x08003a70]
fxch st(2)
fcomi st(2)
fstp st(2)
jbe 0x8003c48
fxch st(1)
fstp xword [rsp + 0xb0]
movsd qword [var_c0h], xmm3
fstp xword [rsp + 0xa0]
fstp xword [rsp + 0x50]
fldpi
fld xword [rsp + 0x90]
push rax
push rax
fmulp st(1)
fstp xword [rsp]
call sinl
pop rax
pop rdx
movsd xmm3, qword [var_c0h]
fld xword [rsp + 0x50]
fld xword [rsp + 0xa0]
fld xword [rsp + 0xb0]
fxch st(3)
jmp 0x8003ad1
fxch st(3)
fchs
fldpi
fmul st(4)
fxch st(3)
fxch st(2)
fxch st(1)
fxch st(4)
jmp 0x80035be
je 0x8002f0c
jmp 0x80037d4
nop
fsub dword [0x08003af6]
mov ebp, 0x80000000
jmp .LC262
fnstcw word [rsp + 0xee]
fld1
mov eax, 0
fchs
fxch st(1)
fcomi st(1)
fstp st(1)
fcmovbe st(0), st(3)
fstp st(3)
cmovbe ebx, eax
movzx eax, word [var_eeh]
and ah, 0xf3
fld st(2)
or ah, 4
mov word [var_ech], ax
mov eax, ebx
fldcw word [rsp + 0xec]
frndint
fldcw word [rsp + 0xee]
fld dword [rsp + 0x8c]
xor eax, 1
fld st(0)
fld st(2)
fmulp st(2)
fxch st(1)
fldcw word [rsp + 0xec]
frndint
fldcw word [rsp + 0xee]
fadd st(0)
fsub st(2)
fabs
fld dword [rsp + 0x10]
fxch st(1)
fcompi st(1)
fstp st(0)
fxch st(1)
fsubp st(4)
fxch st(3)
cmova ebx, eax
fcomi st(3)
fstp st(3)
jbe 0x8003b8c
fld1
fsubrp st(3)
fld dword [rsp + 0x8c]
fxch st(3)
fucomi st(3)
fstp st(3)
jnp 0x8003dd0
fstp xword [rsp + 0x10]
movsd qword [var_20h], xmm3
fstp xword [rsp]
push rdi
fldpi
push rdi
fmulp st(1)
fstp xword [rsp]
call sinl
test bl, bl
pop r8
pop r9
fld xword [rsp]
movsd xmm3, qword [var_20h]
fld xword [rsp + 0x10]
je 0x800380e
fxch st(2)
fchs
fchs
fxch st(2)
jmp 0x800331d
fld xword [0x08003be6]
fstp xword [rsp + 0xd0]
fxch st(2)
jmp 0x8002a47
fstp st(0)
fstp xword [rsp + 0x10]
sub rsp, 0x10
movsd qword [var_20h], xmm3
fstp xword [rsp + 0x10]
fstp xword [rsp]
call sym._ZN5boost4math6detail10sin_pi_impIeNS0_8policies6policyINS3_12domain_errorILNS3_17error_policy_typeE1EEENS3_10pole_errorILS6_1
pop rbx
pop rbp
fld xword [rsp]
movsd xmm3, qword [var_20h]
fld xword [rsp + 0x10]
fxch st(2)
fchs
fxch st(2)
jmp 0x800331d
jne 0x80039ec
fstp st(1)
fld1
test r12b, r12b
je 0x8003657
fchs
fxch st(4)
fxch st(1)
jmp 0x800365b
fstp xword [rsp + 0xd0]
fxch st(1)
movsd qword [var_e0h], xmm3
fstp xword [rsp + 0xc0]
fld1
fchs
fxch st(1)
fcomi st(1)
fstp st(1)
fld xword [rsp + 0x90]
seta r12b
fcmovnbe st(0), st(1)
fxch st(1)
fstp xword [rsp + 0xb0]
fld st(0)
fstp xword [rsp + 0x90]
push r10
push r10
fstp xword [rsp]
call floorl
fld xword [rsp + 0xb0]
fmul st(1)
fxch st(1)
fstp xword [rsp + 0x60]
fstp xword [rsp]
call floorl
pop r11
pop rax
movsd xmm3, qword [var_e0h]
fadd st(0)
fld xword [rsp + 0x50]
fsub st(1), st(0)
fxch st(1)
fabs
fld xword [0x08003ccb]
fxch st(1)
fcompi st(1)
fstp st(0)
fld xword [rsp + 0xb0]
fld xword [rsp + 0xc0]
fld xword [rsp + 0xd0]
jbe 0x8003cec
xor r12d, 1
fld xword [rsp + 0x90]
fsubrp st(4)
fld st(3)
fld dword [rsp + 0x8c]
fxch st(5)
fcompi st(5)
fstp st(4)
jbe 0x8003d0a
fld1
fsubrp st(4)
fld dword [rsp + 0x8c]
fxch st(4)
fucomi st(4)
fstp st(4)
jnp 0x8003e13
fxch st(2)
jmp 0x8003d23
fxch st(2)
fstp xword [rsp + 0xa0]
fxch st(1)
movsd qword [var_b0h], xmm3
fstp xword [rsp + 0x90]
fstp xword [rsp + 0x50]
push rdi
fldpi
push rdi
fmulp st(1)
fstp xword [rsp]
call sinl
test r12b, r12b
pop r8
pop r9
movsd xmm3, qword [var_b0h]
fld xword [rsp + 0x50]
fld xword [rsp + 0x90]
fld xword [rsp + 0xa0]
je 0x8003acf
fxch st(3)
fchs
jmp 0x8003ad1
fstp xword [rsp + 0xa0]
fxch st(1)
movsd qword [var_b0h], xmm3
fstp xword [rsp + 0x90]
push rcx
push rcx
fld st(0)
fstp xword [rsp]
fstp xword [rsp + 0x60]
call sym._ZN5boost4math6detail10sin_pi_impIeNS0_8policies6policyINS3_12domain_errorILNS3_17error_policy_typeE1EEENS3_10pole_errorILS6_1
pop rsi
pop rdi
movsd xmm3, qword [var_b0h]
fchs
fld xword [rsp + 0x50]
fld xword [rsp + 0xa0]
fld xword [rsp + 0x90]
fxch st(2)
fxch st(3)
jmp 0x8003ad1
jne 0x8003b9f
fstp st(2)
fxch st(1)
fld1
test bl, bl
je 0x8003812
fchs
fxch st(1)
fxch st(2)
fxch st(1)
jmp 0x8003bd7
lea rdx, [var_f0h]
lea rsi, [0x08003e00]
fstp xword [rsp + 0xf0]
lea rdi, [0x08003e0e]
call _ZN5boost4math8policies6detail11raise_errorINS0_14rounding_errorEeEEvPKcS6_RKT0_
jne 0x8003d21
fstp st(3)
fxch st(1)
fxch st(2)
fld1
test r12b, r12b
je 0x8003ad1
fchs
jmp 0x8003ad1
fxch st(1)
fstp xword [rsp + 0x30]
movsd qword [var_50h], xmm3
push rax
push rax
fstp xword [rsp]
call sqrtl
pop rax
pop rdx
movsd xmm3, qword [var_50h]
fld xword [rsp + 0x30]
jmp 0x8003386
