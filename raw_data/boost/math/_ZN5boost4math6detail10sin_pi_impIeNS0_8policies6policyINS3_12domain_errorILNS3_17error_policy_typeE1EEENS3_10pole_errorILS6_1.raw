push rbx
sub rsp, 0x10
fld xword [rsp + 0x20]
fldz
fcomi st(1)
ja 0x80005a8
fstp st(0)
fld dword [0x080004eb]
fld st(0)
fcompi st(2)
ja 0x8000590
fld1
xor ebx, ebx
mov edx, 1
fcompi st(2)
jbe 0x800050f
fxch st(1)
fchs
fxch st(1)
xor edx, edx
mov ebx, 1
fnstcw word [rsp + 0xe]
fld st(1)
movzx eax, word [var_eh]
and ah, 0xf3
or ah, 4
mov word [var_ch], ax
fldcw word [rsp + 0xc]
frndint
fldcw word [rsp + 0xe]
fld st(1)
fld st(1)
fmul st(3)
fldcw word [rsp + 0xc]
frndint
fldcw word [rsp + 0xe]
fadd st(0)
fsub st(2)
fabs
fld dword [0x0800054b]
fxch st(1)
fucompi st(1)
fstp st(0)
fxch st(3)
fsubrp st(1)
cmova ebx, edx
fcomi st(2)
fstp st(2)
ja 0x8000668
fxch st(1)
fucomi st(1)
fstp st(1)
jnp 0x8000678
fldpi
sub rsp, 0x10
fmulp st(1)
fstp xword [rsp]
call sinl
pop rax
pop rdx
test bl, bl
je 0x8000586
fchs
add rsp, 0x10
pop rbx
ret
nop dword [rax]
fstp st(0)
fldpi
fmulp st(1)
fstp xword [rsp + 0x20]
add rsp, 0x10
pop rbx
jmp sinl
nop dword [rax]
fxch st(1)
fcomi st(1)
fstp st(1)
ja 0x80004d9
fld st(0)
fchs
fld dword [0x080005be]
fxch st(2)
fcomi st(2)
fstp st(2)
ja 0x8000698
fnstcw word [rsp + 0xe]
fld1
fchs
fxch st(2)
movzx eax, word [var_eh]
fcomi st(2)
fstp st(2)
fcmovnbe st(0), st(1)
fstp st(1)
setbe bl
seta dl
and ah, 0xf3
or ah, 4
fld st(0)
mov word [var_ch], ax
fldcw word [rsp + 0xc]
frndint
fldcw word [rsp + 0xe]
fld dword [0x08000604]
fld st(0)
fld st(2)
fmul st(2)
fldcw word [rsp + 0xc]
frndint
fldcw word [rsp + 0xe]
fadd st(0)
fsub st(3)
fabs
fld dword [0x08000620]
fxch st(1)
fucompi st(1)
fstp st(0)
fxch st(3)
fsubrp st(2)
fxch st(1)
cmovbe ebx, edx
fcomi st(2)
fstp st(2)
jbe 0x8000639
fld1
fsubrp st(2)
fxch st(1)
fucomi st(1)
fstp st(1)
jnp 0x80006b8
fldpi
sub rsp, 0x10
fmulp st(1)
fstp xword [rsp]
call sinl
test bl, bl
pop rcx
pop rsi
fld st(0)
fchs
fcmovne st(0), st(1)
fstp st(1)
jmp 0x8000586
nop word [rax + rax]
fld1
fsubrp st(2)
fxch st(1)
fucomi st(1)
fstp st(1)
jp 0x800056e
jne 0x800056e
fstp st(0)
fld1
test bl, bl
je 0x8000586
fchs
jmp 0x8000586
nop dword [rax]
fstp st(1)
fldpi
sub rsp, 0x10
fmulp st(1)
fstp xword [rsp]
call sinl
pop rdi
pop r8
fchs
add rsp, 0x10
pop rbx
ret
nop dword [rax]
jne 0x8000641
fstp st(0)
fld1
test bl, bl
jne 0x8000586
jmp 0x8000584
