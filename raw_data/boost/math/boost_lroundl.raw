sub rsp, 0x18
fld xword [rsp + 0x20]
fld st(0)
fabs
fld xword [0x08000052]
fucompi st(1)
fstp st(0)
jae 0x80000a0
fstp st(0)
call __errno_location
fld xword [rsp + 0x20]
pxor xmm0, xmm0
mov dword [rax], 0x22
movss dword [rsp], xmm0
fldz
fxch st(1)
mov dword [rax], 0x22
movabs rdx, 0x8000000000000000
movabs rax, 0x7fffffffffffffff
fcompi st(1)
fstp st(0)
cmovbe rax, rdx
add rsp, 0x18
ret
nop dword [rax]
fld dword [0x080000a6]
fld dword [0x080000ac]
fxch st(2)
fcomi st(1)
fstp st(1)
ja 0x8000140
fnstcw word [rsp + 0xe]
fldz
fxch st(1)
pxor xmm1, xmm1
movss dword [rsp], xmm1
movzx eax, word [var_eh]
and ah, 0xf3
fcomi st(1)
fstp st(1)
jbe 0x8000180
or ah, 8
fld st(0)
mov word [var_8h], ax
fldcw word [rsp + 8]
frndint
fldcw word [rsp + 0xe]
fld st(0)
fsub st(2)
fcompi st(3)
fstp st(2)
jbe 0x80000fd
fld1
fsubp st(2)
fld xword [0x08000103]
fxch st(2)
fcomi st(2)
fstp st(2)
ja 0x8000158
fld dword [0x08000111]
fcompi st(2)
ja 0x80001c0
fstp st(0)
fnstcw word [rsp + 0xe]
movzx eax, word [var_eh]
or ah, 0xc
mov word [var_ch], ax
fldcw word [rsp + 0xc]
fistp qword [rsp]
fldcw word [rsp + 0xe]
mov rax, qword [rsp]
add rsp, 0x18
ret
fld st(1)
xor eax, eax
fcompi st(1)
jbe 0x80000b8
fstp st(0)
fstp st(0)
jmp 0x8000098
nop dword [rax]
fstp st(0)
fstp st(0)
call __errno_location
mov dword [rax], 0x22
add rsp, 0x18
movabs rax, 0x7fffffffffffffff
ret
nop word cs:[rax + rax]
or ah, 4
fld st(0)
mov word [var_ah], ax
fldcw word [rsp + 0xa]
frndint
fldcw word [rsp + 0xe]
fld st(1)
fsub st(1)
fcompi st(3)
fstp st(2)
jbe 0x80001a2
fld1
faddp st(2)
fld xword [0x080001a8]
fxch st(2)
fcomi st(2)
fstp st(2)
jbe .LC6
fstp st(1)
jmp 0x80001c2
nop dword [rax + rax]
fstp st(1)
fstp xword [rsp + 0x20]
call __errno_location
fld xword [rsp + 0x20]
jmp 0x8000072
