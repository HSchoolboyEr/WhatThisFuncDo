push r12
push rbp
push rbx
sub rsp, 0xa0
fld xword [rsp + 0xc0]
fmul dword [0x08002228]
fld xword [rsp + 0xc0]
fmulp st(1)
fld xword [rsp + 0xd0]
fadd st(0)
fmul st(0)
fld1
fld st(2)
fsub st(1)
fld st(2)
fadd st(3)
fdivr st(1)
faddp st(2)
fxch st(1)
fstp xword [rsp]
fld st(2)
fsub dword [0x08002257]
fld st(2)
fmul st(3)
fld st(2)
fmul dword [0x08002263]
fmul st(2)
fld dword [0x0800226b]
fld st(2)
fmul st(1)
fdivp st(2)
fld xword [rsp]
faddp st(2)
fxch st(4)
fmul dword [0x0800227e]
fmulp st(3)
fxch st(5)
fsub dword [0x08002288]
fmulp st(2)
fmulp st(3)
fxch st(1)
fmulp st(2)
fxch st(1)
fmul dword [0x08002298]
fdivp st(1)
faddp st(1)
fadd st(0)
fldpi
fld xword [rsp + 0xd0]
fmulp st(1)
fdivp st(1)
fldz
fucompi st(1)
ja 0x800294e
fsqrt
fstp xword [rsp + 0x30]
lea r12, [var_90h]
lea rbp, [var_80h]
push qword [arg_d8h]
mov rsi, rbp
mov rdi, r12
push qword [arg_d8h_2]
call sincosl
fld xword [rsp + 0x90]
fstp xword [rsp + 0x10]
fld xword [rsp + 0xa0]
fstp xword [rsp + 0x20]
push qword [arg_d8h]
push qword [arg_d8h_2]
push qword [arg_e8h]
push qword [arg_e8h_2]
call _ZN5boost4math6detail26asymptotic_bessel_phase_mxIeEET_S3_S3_
add byte [rax], al
add byte [rax], al
fstp xword [rsp + 0x50]
fld dword [0x08002325]
fld xword [rsp + 0xf0]
add rsp, 0x30
fmul dword [0x08002336]
fld dword [0x0800233c]
fxch st(1)
fadd dword [0x08002344]
fld st(0)
fabs
fxch st(2)
fcompi st(2)
fstp st(1)
jbe 0x8002560
fstp st(1)
fldpi
sub rsp, 0x10
fmul st(1)
fxch st(1)
fstp xword [rsp + 0x50]
fstp xword [rsp]
call cosl
pop rcx
pop rsi
fld xword [rsp + 0x40]
fldz
mov edx, 1
mov ecx, 0
fucompi st(2)
setp al
cmovne eax, edx
setnp dl
cmovne edx, ecx
test dl, dl
je 0x80024b8
test al, al
je 0x80024b8
fstp st(1)
fstp xword [rsp + 0x40]
call __errno_location
mov dword [rax], 0x22
fldz
fld xword [rsp + 0x40]
fldz
fcomi st(1)
ja 0x8002508
fstp st(0)
jmp 0x80023d0
nop dword [rax]
fstp st(0)
fxch st(1)
nop dword [rax]
fld dword [0x080023d6]
fcompi st(1)
jbe 0x8002620
fxch st(1)
fstp xword [rsp + 0x40]
sub rsp, 0x10
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
pop rcx
pop rsi
fldz
fxch st(1)
fucomi st(1)
fstp st(1)
setp dl
mov eax, 1
mov ecx, 0
fld xword [rsp + 0x40]
cmovne edx, eax
setnp al
cmovne eax, ecx
and eax, edx
test al, al
jne 0x8002718
jmp 0x8002430
nop dword [rax]
fxch st(1)
nop word [rax + rax]
fld xword [rsp + 0x10]
fmul st(2)
fstp xword [rsp + 0x50]
fld xword [rsp]
fmul st(2)
fstp xword [rsp + 0x60]
fxch st(1)
fabs
fld xword [0x0800244d]
fcompi st(1)
fstp st(0)
jbe 0x800245b
test dl, dl
jne __errno_location
fstp xword [rsp + 0x40]
mov rsi, rbp
mov rdi, r12
push qword [var_28h]
push qword [var_28h_2]
call sincosl
fld xword [rsp + 0x10]
fld xword [rsp + 0x50]
fmul st(1), st(0)
fld xword [rsp + 0x60]
faddp st(2)
fld xword [rsp + 0xa0]
fmulp st(2)
fld xword [rsp + 0x20]
fmulp st(1)
fld xword [rsp + 0x70]
fsubp st(1)
fld xword [rsp + 0x90]
fmulp st(1)
faddp st(1)
fld xword [rsp + 0x40]
add rsp, 0xb0
pop rbx
pop rbp
pop r12
fmulp st(1)
ret
nop dword [rax]
fld st(1)
fabs
fld xword [0x080024c2]
fcompi st(1)
fstp st(0)
jbe 0x80023b3
test al, al
je 0x80023b3
fxch st(1)
fstp xword [rsp + 0x50]
fstp xword [rsp + 0x40]
call __errno_location
fld xword [rsp + 0x40]
mov dword [rax], 0x22
fld xword [rsp + 0x50]
fldz
fcomi st(2)
jbe 0x80023c8
fxch st(1)
fxch st(2)
fxch st(1)
nop dword [rax]
fld st(1)
fchs
fxch st(2)
fcomi st(1)
fstp st(1)
ja 0x80027f0
fld dword [0x0800251e]
fxch st(1)
fcomi st(1)
fstp st(1)
jbe 0x8002828
fstp st(0)
fxch st(1)
fstp xword [rsp + 0x40]
sub rsp, 0x10
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
fld st(0)
pop r9
pop r10
fchs
fldz
fxch st(2)
fucompi st(2)
fstp st(1)
jmp 0x80023fe
nop word [rax + rax]
fnstcw word [rsp + 0x7e]
fldz
fld st(1)
movzx eax, word [var_7eh]
fchs
fxch st(1)
fcompi st(2)
fcmovbe st(0), st(1)
and ah, 0xf3
or ah, 4
mov word [var_7ch], ax
fld st(0)
fldcw word [rsp + 0x7c]
frndint
fldcw word [rsp + 0x7e]
fld st(0)
fmul st(4)
fldcw word [rsp + 0x7c]
frndint
fldcw word [rsp + 0x7e]
fadd st(0)
fsub st(1)
fabs
fld dword [0x080025a6]
fxch st(1)
fcompi st(1)
fstp st(0)
fsubp st(1)
seta bl
fcomi st(2)
fstp st(2)
jbe 0x80025be
fld1
xor ebx, 1
fsubrp st(2)
fld dword [0x080025c4]
fxch st(2)
fucomi st(2)
fstp st(2)
jnp 0x8002810
fld dword [0x080025d6]
fxch st(1)
fstp xword [rsp + 0x40]
fxch st(1)
fcomi st(1)
fstp st(1)
jbe 0x8002790
fsubr dword [0x080025ee]
sub rsp, 0x10
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
pop rax
pop rdx
fld xword [rsp + 0x40]
test bl, bl
je 0x8002372
fxch st(1)
fchs
fxch st(1)
jmp 0x8002372
nop word [rax + rax]
fld1
xor ebx, ebx
mov eax, 1
fcompi st(1)
jbe 0x8002636
fchs
xor eax, eax
mov ebx, 1
fnstcw word [rsp + 0x7e]
fld st(0)
movzx edx, word [var_7eh]
and dh, 0xf3
or dh, 4
mov word [var_7ch], dx
fldcw word [rsp + 0x7c]
frndint
fldcw word [rsp + 0x7e]
fld dword [0x0800265c]
fld dword [0x08002662]
fmul st(2)
fldcw word [rsp + 0x7c]
frndint
fldcw word [rsp + 0x7e]
fadd st(0)
fsub st(2)
fabs
fld dword [0x0800267a]
fxch st(1)
fucompi st(1)
fstp st(0)
fxch st(2)
fsubrp st(1)
cmova ebx, eax
fcomi st(1)
fstp st(1)
ja 0x8002750
fld dword [0x08002697]
fxch st(1)
fucomi st(1)
fstp st(1)
jnp 0x8002766
fxch st(1)
jmp 0x80026c0
nop word [rax + rax]
fxch st(1)
jmp 0x80026c0
fxch st(1)
nop word cs:[rax + rax]
fstp xword [rsp + 0x40]
sub rsp, 0x10
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
test bl, bl
pop rax
pop rdx
fld st(0)
fld xword [rsp + 0x40]
je 0x80027b0
fxch st(2)
fchs
fldz
fxch st(2)
fucompi st(2)
fstp st(1)
setp dl
mov eax, 1
mov ecx, 0
cmovne edx, eax
setnp al
cmovne eax, ecx
and eax, edx
test al, al
je 0x8002428
fstp st(0)
jmp 0x800271a
nop dword [rax]
fstp st(1)
fstp xword [rsp + 0x40]
call __errno_location
fld xword [rsp + 0x10]
mov dword [rax], 0x22
fldz
fmul st(1), st(0)
fxch st(1)
fstp xword [rsp + 0x50]
fld xword [rsp]
fmulp st(1)
fstp xword [rsp + 0x60]
fld xword [rsp + 0x40]
jmp 0x800245b
nop dword [rax]
fld1
fsubrp st(1)
fld dword [0x0800275a]
fxch st(1)
fucomi st(1)
fstp st(1)
jp 0x80026b0
jne 0x80026b4
fstp st(0)
test bl, bl
jne 0x80028e8
fld xword [rsp]
fstp xword [rsp + 0x60]
fld xword [rsp + 0x10]
fstp xword [rsp + 0x50]
jmp 0x800245b
nop word [rax + rax]
fldpi
sub rsp, 0x10
fmulp st(1)
fstp xword [rsp]
call cosl
pop r11
pop rax
fld xword [rsp + 0x40]
jmp 0x8002604
nop dword [rax]
fstp st(2)
fxch st(1)
fldz
fxch st(2)
fucomi st(2)
fstp st(2)
setp dl
mov eax, 1
cmovne edx, eax
setnp al
cmovne eax, ebx
and eax, edx
jmp 0x800241a
nop dword [rax]
fstp xword [rsp + 0x40]
call __errno_location
fld xword [rsp + 0x40]
mov dword [rax], 0x22
jmp 0x800245b
fstp st(0)
fxch st(1)
fstp xword [rsp + 0x40]
sub rsp, 0x10
fstp xword [rsp]
call sym._ZN5boost4math6detail10sin_pi_impIeNS0_8policies6policyINS3_12domain_errorILNS3_17error_policy_typeE1EEENS3_10pole_errorILS6_1
jmp 0x8002542
nop dword [rax]
jne .LC50
fstp st(1)
fldz
fxch st(1)
jmp 0x80023b3
nop dword [rax]
fnstcw word [rsp + 0x7e]
fld1
fchs
fxch st(1)
movzx edx, word [var_7eh]
fcomi st(1)
fstp st(1)
fcmovbe st(0), st(1)
fstp st(1)
setbe bl
seta al
and dh, 0xf3
or dh, 4
fld st(0)
mov word [var_7ch], dx
fldcw word [rsp + 0x7c]
frndint
fldcw word [rsp + 0x7e]
fld dword [0x08002862]
fld dword [0x08002868]
fmul st(2)
fldcw word [rsp + 0x7c]
frndint
fldcw word [rsp + 0x7e]
fadd st(0)
fsub st(2)
fabs
fld dword [0x08002880]
fxch st(1)
fucompi st(1)
fstp st(0)
fxch st(2)
fsubrp st(1)
cmovbe ebx, eax
fcomi st(1)
fstp st(1)
ja 0x8002900
fld dword [0x08002899]
fxch st(1)
fucomi st(1)
fstp st(1)
jnp 0x8002920
fxch st(1)
jmp 0x80028b0
fxch st(1)
nop word [rax + rax]
fstp xword [rsp + 0x40]
sub rsp, 0x10
fldpi
fmulp st(1)
fstp xword [rsp]
call sinl
test bl, bl
pop rdi
pop r8
fld st(0)
fchs
fld xword [rsp + 0x40]
je 0x8002910
fstp st(1)
fldz
fxch st(2)
fucomi st(2)
fstp st(2)
fxch st(1)
jmp 0x80026f0
nop dword [rax]
fld xword [rsp + 0x10]
fchs
fstp xword [rsp + 0x50]
fld xword [rsp]
fchs
fstp xword [rsp + 0x60]
jmp 0x800245b
fld1
fsubrp st(1)
jmp 0x8002893
nop word cs:[rax + rax]
fldz
fxch st(3)
fucompi st(3)
fstp st(2)
fxch st(1)
jmp 0x80027bc
nop
jne 0x80028a5
fstp st(0)
test bl, bl
je 0x8002948
fld1
fld xword [rsp + 0x10]
fmul st(1)
fstp xword [rsp + 0x50]
fld xword [rsp]
fmulp st(1)
fstp xword [rsp + 0x60]
jmp 0x800245b
nop word [rax + rax]
fld1
fchs
jmp 0x800292a
push rdi
push rdi
fstp xword [rsp]
call sqrtl
fstp xword [rsp + 0x40]
pop r8
pop r9
jmp 0x80022bb
