push r12
push rbp
mov rbp, rdi
push rbx
test byte [0x0800966e], 2
jne 0x80096c0
mov rbx, qword [rdi + 8]
test rbx, rbx
je 0x80096b5
mov rbp, qword [0x08009680]
mov rdi, rbx
mov rbx, qword [rbx]
mov rax, qword [rdi - 8]
and rax, 0xfffffffffffffff8
sub rbp, rax
mov qword [0x08009698], rbp
call sym.mspace_free_lockless.constprop.0
test rbx, rbx
jne 0x8009680
test byte [0x080096a9], 2
je 0x80096b5
mov dword [0x080096b5], 0
pop rbx
pop rbp
pop r12
ret
nop word [rax + rax]
mov eax, 1
xchg dword [0x080096cb], eax
test eax, eax
jne 0x80096e0
mov rbx, qword [arg_8h]
test rbx, rbx
jne 0x8009679
jmp 0x80096a2
nop word [rax + rax]
xor ebx, ebx
mov r12d, 1
nop dword [rax + rax]
mov eax, dword [0x080096f6]
test eax, eax
jne 0x8009707
mov eax, r12d
xchg dword [0x08009703], eax
test eax, eax
je 0x80096cf
add ebx, 1
test bl, 0x3f
jne 0x80096f0
call sched_yield
jmp 0x80096f0
