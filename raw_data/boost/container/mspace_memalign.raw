push r15
mov r8, rdx
push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x18
cmp rsi, 0x10
jbe 0x8007aa8
cmp rsi, 0x20
mov ebx, 0x20
cmovae rbx, rsi
lea rax, [rbx - 1]
test rax, rbx
jne 0x80079d8
mov rdx, 0xffffffffffffff80
sub rdx, rbx
cmp r8, rdx
jb 0x8007a0a
test rbp, rbp
je 0x80079c3
call __errno_location
mov dword [rax], 0xc
xor eax, eax
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
cmp rsi, 0x20
jbe 0x8007c20
mov eax, 0x20
nop word [rax + rax]
add rax, rax
cmp rbx, rax
ja 0x80079f0
mov rdx, 0xffffffffffffff80
mov rbx, rax
sub rdx, rax
cmp r8, rdx
jae 0x80079b3
lea r13, [r8 + 0x17]
mov eax, 0x20
and r13, 0xfffffffffffffff0
cmp r8, 0x16
cmovbe r13, rax
lea rax, [0x08007a26]
lea rsi, [rbx + r13 + 0x18]
cmp rbp, rax
je dlmalloc
mov rdi, rbp
call mspace_malloc
mov r12, rax
test r12, r12
je 0x80079c3
lea r15, [r12 - 0x10]
test byte [arg_370h], 2
jne 0x8007b18
lea rax, [rbx - 1]
test r12, rax
jne 0x8007ac0
mov rdx, qword [r12 - 8]
mov rax, r12
mov r14, r15
test dl, 3
je 0x8007a87
mov rcx, rdx
lea rsi, [r13 + 0x20]
and rcx, 0xfffffffffffffff8
cmp rcx, rsi
ja 0x8007bd8
test byte [arg_370h], 2
je 0x80079c5
mov dword [arg_374h], 0
jmp 0x80079c5
nop dword [rax + rax]
add rsp, 0x18
mov rsi, rdx
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp sym.mspace_malloc
nop
mov r14, rbx
add rax, r12
neg r14
and rax, r14
lea r14, [rax - 0x10]
mov r8, r14
sub r8, r15
cmp r8, 0x1f
ja 0x8007ae5
add r14, rbx
mov r8, r14
sub r8, r15
mov rcx, qword [r12 - 8]
lea rax, [r14 + 0x10]
mov rdx, rcx
and rdx, 0xfffffffffffffff8
sub rdx, r8
and ecx, 3
jne 0x8007b80
add r8, qword [r12 - 0x10]
mov qword [r14 + 8], rdx
mov qword [r14], r8
jmp 0x8007a6e
nop word [rax + rax]
lea rdx, [arg_374h]
mov eax, 1
xchg dword [rdx], eax
test eax, eax
je 0x8007a5a
xor r14d, r14d
nop dword [rax]
mov eax, dword [arg_374h]
test eax, eax
jne 0x8007b51
mov eax, 1
xchg dword [rdx], eax
test eax, eax
je 0x8007a5a
add r14d, 1
test r14b, 0x3f
jne 0x8007b38
mov qword [var_8h], rdx
call sched_yield
mov rdx, qword [var_8h]
jmp 0x8007b38
nop dword [rax]
mov rdi, rsi
call dlmalloc
mov r12, rax
jmp 0x8007a3f
mov rcx, qword [r14 + 8]
mov rsi, r15
mov rdi, rbp
mov qword [var_8h], rax
and ecx, 1
or rcx, rdx
or rcx, 2
mov qword [r14 + 8], rcx
or qword [r14 + rdx + 8], 1
mov rdx, qword [r12 - 8]
and edx, 1
or rdx, r8
or rdx, 2
mov qword [r12 - 8], rdx
mov rdx, r8
or qword [r15 + r8 + 8], 1
call sym.dispose_chunk
mov rdx, qword [r14 + 8]
mov rax, qword [var_8h]
jmp 0x8007a6e
nop dword [rax + rax]
mov r8, rcx
and edx, 1
lea rsi, [r14 + r13]
mov rdi, rbp
sub r8, r13
or r13, rdx
mov qword [var_8h], rax
mov rdx, r8
or r13, 2
or rdx, 3
mov qword [r14 + 8], r13
mov qword [rsi + 8], rdx
mov rdx, r8
or qword [r14 + rcx + 8], 1
call sym.dispose_chunk
mov rax, qword [var_8h]
jmp 0x8007a87
nop dword [rax + rax]
mov rdx, 0xffffffffffffff60
mov ebx, 0x20
jmp 0x80079ae
