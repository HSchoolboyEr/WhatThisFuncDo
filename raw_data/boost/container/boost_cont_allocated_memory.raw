push rbp
push rbx
sub rsp, 8
cmp qword [0x08008d3e], 0
je 0x8008e2f
mov ebx, dword [0x08008d4a]
and ebx, 2
jne 0x8008e43
mov r8, qword [0x08008d5a]
test r8, r8
je 0x8008e26
mov rax, qword [0x08008d6a]
lea r11, [0x08008d71]
mov r10d, 1
lea r9, [rax + 0x50]
nop dword [rax + rax]
mov rsi, qword [r11]
lea rax, [rsi + 0x10]
test sil, 0xf
je 0x8008e10
neg rax
and eax, 0xf
add rax, rsi
jb 0x8008de3
mov rdi, qword [r11 + 8]
add rdi, rsi
cmp rax, rdi
jb 0x8008dde
jmp 0x8008de3
nop word [rax + rax]
mov rdx, qword [rax + 8]
cmp rdx, 0xb
je 0x8008de3
mov rcx, rdx
and edx, 3
and rcx, 0xfffffffffffffff8
cmp rdx, 1
jne 0x8008dd1
add r9, rcx
add r10, 1
add rax, rcx
cmp rsi, rax
ja 0x8008de3
cmp rax, rdi
jae 0x8008de3
cmp r8, rax
jne 0x8008db0
mov r11, qword [r11 + 0x10]
test r11, r11
jne 0x8008d80
mov rax, qword [0x08008df3]
sub rax, r9
test r10, r10
je 0x8008e04
imul r10, r10, 0xffffffffffffffb0
lea rax, [rax + r10 + 0x50]
test ebx, ebx
jne 0x8008e15
add rsp, 8
pop rbx
pop rbp
ret
nop
mov rax, rsi
jmp 0x8008d9c
mov dword [0x08008e1f], 0
add rsp, 8
pop rbx
pop rbp
ret
add rsp, 8
xor eax, eax
pop rbx
pop rbp
ret
call sym.init_mparams.isra.0
mov ebx, dword [0x08008e3a]
and ebx, 2
je .bss
mov eax, 1
xchg dword [0x08008e4e], eax
test eax, eax
jne 0x8008e6f
mov ebx, dword [0x08008e58]
mov r8, qword [0x08008e5f]
xor eax, eax
and ebx, 2
test r8, r8
jne .bss
jmp 0x8008e04
xor ebx, ebx
mov ebp, 1
nop word cs:[rax + rax]
mov eax, dword [0x08008e86]
test eax, eax
jne 0x8008e96
mov eax, ebp
xchg dword [0x08008e92], eax
test eax, eax
je 0x8008e52
add ebx, 1
test bl, 0x3f
jne 0x8008e80
call sched_yield
jmp 0x8008e80
