cmp qword [0x08009538], 0
push r14
push r13
push r12
mov r12, rdi
push rbp
mov rbp, rsi
push rbx
mov rbx, rdx
je 0x8009628
mov qword [rbx], 0
xor eax, eax
cmp r12, rbp
ja 0x80095b0
test byte [0x08009564], 2
jne 0x80095c0
mov rsi, rbp
lea rdi, [0x08009570]
call mspace_malloc_lockless
test rax, rax
je 0x8009638
mov rdx, qword [rax - 8]
mov rcx, rdx
and edx, 3
and rcx, 0xfffffffffffffff8
add qword [0x08009593], rcx
cmp rdx, 1
sbb rdx, rdx
and edx, 8
add rdx, 8
sub rcx, rdx
mov qword [rbx], rcx
test byte [0x080095ae], 2
jne 0x8009610
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
mov eax, 1
xchg dword [0x080095cb], eax
xor r13d, r13d
mov r14d, 1
test eax, eax
je 0x8009566
nop dword [rax + rax]
mov eax, dword [0x080095e6]
test eax, eax
jne 0x80095fb
mov eax, r14d
xchg dword [0x080095f3], eax
test eax, eax
je 0x8009566
add r13d, 1
test r13b, 0x3f
jne 0x80095e0
call sched_yield
jmp 0x80095e0
nop dword [rax]
mov dword [0x0800961a], 0
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
call sym.init_mparams.isra.0
jmp 0x800954f
nop word [rax + rax]
mov rsi, r12
lea rdi, [0x08009642]
call mspace_malloc_lockless
test rax, rax
je .bss
jmp 0x800957e
