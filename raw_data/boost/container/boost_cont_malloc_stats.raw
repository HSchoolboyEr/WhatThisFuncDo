cmp qword [0x08008ed8], 0
push r12
mov r12, rdi
push rbp
push rbx
je 0x8008ffd
mov ebx, dword [0x08008eeb]
and ebx, 2
jne 0x8008fcb
mov r10, qword [0x08008efb]
test r10, r10
je 0x8008fc1
mov rbp, qword [0x08008f0b]
lea r11, [0x08008f12]
movq xmm0, qword [0x08008f1a]
lea rcx, [var_50h]
sub rcx, qword [0x08008f25]
nop dword [rax]
mov r8, qword [r11]
lea rax, [r8 + 0x10]
test r8b, 0xf
je 0x8008fb0
neg rax
and eax, 0xf
add rax, r8
jb 0x8008f88
mov r9, qword [r11 + 8]
add r9, r8
cmp r9, rax
jbe 0x8008f88
cmp r10, rax
jne 0x8008f7e
jmp 0x8008f88
nop dword [rax + rax]
mov rsi, rdx
mov rdi, rcx
and rsi, 0xfffffffffffffff8
sub rdi, rsi
and edx, 2
cmove rcx, rdi
add rax, rsi
cmp r8, rax
ja 0x8008f88
cmp rax, r9
jae 0x8008f88
cmp rax, r10
je 0x8008f88
mov rdx, qword [rax + 8]
cmp rdx, 0xb
jne 0x8008f58
mov r11, qword [r11 + 0x10]
test r11, r11
jne 0x8008f28
test ebx, ebx
jne 0x8008fb5
movq xmm1, rbp
mov rax, r12
pop rbx
mov qword [r12 + 0x10], rcx
punpcklqdq xmm0, xmm1
pop rbp
movups xmmword [r12], xmm0
pop r12
ret
mov rax, r8
jmp 0x8008f40
mov dword [0x08008fbf], 0
jmp 0x8008f95
xor ecx, ecx
xor ebp, ebp
pxor xmm0, xmm0
jmp 0x8008f95
mov eax, 1
xchg dword [0x08008fd6], eax
test eax, eax
jne 0x8009007
mov ebx, dword [0x08008fe0]
mov r10, qword [0x08008fe7]
and ebx, 2
test r10, r10
jne .bss
xor ecx, ecx
xor ebp, ebp
pxor xmm0, xmm0
jmp 0x8008f91
call sym.init_mparams.isra.0
jmp .bss
xor ebx, ebx
mov ebp, 1
nop
mov eax, dword [0x08009016]
test eax, eax
jne 0x8009026
mov eax, ebp
xchg dword [0x08009022], eax
test eax, eax
je 0x8008fda
add ebx, 1
test bl, 0x3f
jne 0x8009010
call sched_yield
jmp 0x8009010
