cmp rdi, 0x10
jbe 0x8005410
push r15
push r14
push r13
push r12
push rbp
push rbx
mov ebx, 0x20
sub rsp, 8
cmp rdi, 0x20
cmovae rbx, rdi
lea rax, [rbx - 1]
test rax, rbx
jne 0x8005360
mov rdx, 0xffffffffffffff80
sub rdx, rbx
cmp rsi, rdx
jb 0x800538a
call __errno_location
xor r12d, r12d
mov dword [rax], 0xc
add rsp, 8
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
cmp rdi, 0x20
jbe 0x8005560
mov eax, 0x20
nop
add rax, rax
cmp rbx, rax
ja 0x8005370
mov rdx, 0xffffffffffffff80
mov rbx, rax
sub rdx, rax
cmp rsi, rdx
jae __errno_location
lea rax, [rsi + 0x17]
mov r13d, 0x20
and rax, 0xfffffffffffffff0
cmp rsi, 0x16
cmova r13, rax
lea rdi, [rbx + r13 + 0x18]
call dlmalloc
mov r12, rax
test rax, rax
je 0x800534b
lea r15, [rax - 0x10]
test byte [0x080053bd], 2
jne 0x8005478
lea rax, [rbx - 1]
test r12, rax
jne 0x8005420
mov rax, qword [r12 - 8]
mov rbp, r15
test al, 3
je 0x80053ec
mov rdx, rax
lea rcx, [r13 + 0x20]
and rdx, 0xfffffffffffffff8
cmp rdx, rcx
ja 0x8005518
test byte [0x080053f3], 2
je 0x800534b
mov dword [0x08005403], 0
jmp 0x800534b
nop dword [rax + rax]
mov rdi, rsi
jmp sym.dlmalloc
nop dword [rax + rax]
mov rbp, rbx
add rax, r12
neg rbp
and rax, rbp
lea rbp, [rax - 0x10]
mov rdx, rbp
sub rdx, r15
cmp rdx, 0x1f
ja 0x8005445
add rbp, rbx
mov rdx, rbp
sub rdx, r15
mov rcx, qword [r12 - 8]
lea rbx, [arg_10h]
mov rax, rcx
and rax, 0xfffffffffffffff8
sub rax, rdx
and ecx, 3
jne 0x80054c8
add rdx, qword [r12 - 0x10]
mov qword [arg_8h], rax
mov r12, rbx
mov qword [rbp], rdx
jmp 0x80053d4
nop word [rax + rax]
mov eax, 1
xchg dword [0x08005483], eax
test eax, eax
je 0x80053c3
xor ebp, ebp
mov r14d, 1
nop dword [rax + rax]
mov eax, dword [0x0800549e]
test eax, eax
jne 0x80054b3
mov eax, r14d
xchg dword [0x080054ab], eax
test eax, eax
je 0x80053c3
add ebp, 1
test bpl, 0x3f
jne 0x8005498
call sched_yield
jmp 0x8005498
nop dword [rax + rax]
mov rcx, qword [arg_8h]
mov rsi, r15
lea rdi, [0x080054d6]
and ecx, 1
or rcx, rax
or rcx, 2
mov qword [arg_8h], rcx
or qword [rbp + rax + 8], 1
mov rax, qword [r12 - 8]
and eax, 1
or rax, rdx
or rax, 2
mov qword [r12 - 8], rax
mov r12, rbx
or qword [r15 + rdx + 8], 1
call sym.dispose_chunk
mov rax, qword [arg_8h]
jmp 0x80053d4
nop dword [rax]
and eax, 1
mov r8, rdx
lea rsi, [rbp + r13]
or rax, r13
sub r8, r13
lea rdi, [0x08005530]
or rax, 2
mov qword [arg_8h], rax
mov rax, r8
or rax, 3
mov qword [rsi + 8], rax
or qword [rbp + rdx + 8], 1
mov rdx, r8
call sym.dispose_chunk
jmp .bss
nop word cs:[rax + rax]
mov rdx, 0xffffffffffffff60
mov ebx, 0x20
jmp 0x8005338
