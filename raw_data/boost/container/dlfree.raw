test rdi, rdi
je 0x8004998
push r13
push r12
push rbp
lea rbp, [rdi - 0x10]
push rbx
mov rbx, rdi
sub rsp, 8
test byte [0x08004761], 2
jne 0x8004948
mov r8, qword [0x0800476e]
lea r9, [0x08004775]
cmp r8, rbp
ja .text.unlikely
mov rdx, qword [rbx - 8]
mov rcx, rdx
and ecx, 3
cmp rcx, 1
je .text.unlikely
mov rax, rdx
and rax, 0xfffffffffffffff8
and edx, 1
lea rsi, [rbp + rax]
jne 0x8004810
mov rdx, qword [rbx - 0x10]
sub rbp, rdx
test rcx, rcx
je 0x8004d20
add rax, rdx
cmp r8, rbp
ja .text.unlikely
cmp qword [0x080047c6], rbp
je 0x8004ae0
mov rcx, rdx
mov rdi, qword [arg_18h]
shr rcx, 3
cmp rdx, 0xff
ja 0x8004c00
lea r10d, [rcx + rcx + 9]
mov rdx, qword [arg_10h]
lea r10, [r9 + r10*8]
cmp r10, rdx
jne .text.unlikely
cmp rdx, rdi
jne .text.unlikely
mov edx, 0xfffffffe
rol edx, cl
and dword [0x08004810], edx
cmp rbp, rsi
jae .text.unlikely
mov rdx, qword [rsi + 8]
test dl, 1
je .text.unlikely
test dl, 2
je .bss
and rdx, 0xfffffffffffffffe
mov qword [rsi + 8], rdx
mov rdx, rax
or rdx, 1
mov qword [arg_8h], rdx
mov qword [rsi], rax
mov rcx, rax
shr rcx, 3
cmp rax, 0xff
ja 0x80049a0
lea eax, [rcx + rcx + 9]
mov esi, dword [0x08004862]
lea rdx, [r9 + rax*8]
mov eax, 1
shl eax, cl
test esi, eax
je .bss
mov rax, qword [rdx + 0x10]
cmp r8, rax
ja .text.unlikely
movq xmm0, rax
movq xmm1, rdx
mov qword [rdx + 0x10], rbp
punpcklqdq xmm0, xmm1
mov qword [rax + 0x18], rbp
movups xmmword [arg_10h], xmm0
test byte [0x080048a3], 2
jne .bss
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
cmp qword [0x080048bf], rsi
mov r11, qword [0x080048c6]
je .bss
cmp rsi, r11
je .bss
and rdx, 0xfffffffffffffff8
mov rdi, qword [rsi + 0x18]
mov rcx, rdx
add rax, rdx
shr rcx, 3
cmp rdx, 0xf8
ja 0x8004b38
lea r10d, [rcx + rcx + 9]
mov rdx, qword [rsi + 0x10]
lea r10, [r9 + r10*8]
cmp r10, rdx
jne .text.unlikely
cmp rdx, rdi
jne .text.unlikely
mov edx, 0xfffffffe
rol edx, cl
and dword [0x08004920], edx
mov rdx, rax
or rdx, 1
mov qword [arg_8h], rdx
mov qword [rbp + rax], rax
cmp rbp, r11
jne 0x8004845
mov qword [0x08004940], rax
jmp .bss
nop dword [rax]
mov eax, 1
xchg dword [0x08004953], eax
xor r12d, r12d
mov r13d, 1
test eax, eax
je .bss
nop dword [rax]
mov eax, dword [0x0800496e]
test eax, eax
jne 0x8004983
mov eax, r13d
xchg dword [0x0800497b], eax
test eax, eax
je .bss
add r12d, 1
test r12b, 0x3f
jne 0x8004968
call sched_yield
jmp 0x8004968
nop dword [rax]
ret
nop dword [rax]
mov rdx, rax
shr rdx, 8
mov ecx, edx
test edx, edx
je 0x8004ad0
cmp edx, 0xffff
ja 0x8004d48
bsr edx, edx
mov ecx, 0x26
mov rbx, rax
mov esi, 0x1f
xor edx, 0x1f
sub ecx, edx
sub esi, edx
mov edx, 1
shr rbx, cl
mov rcx, rbx
and ecx, 1
lea ecx, [rcx + rsi*2]
mov esi, edx
lea edi, [rcx + 0x4b]
shl esi, cl
shl rdi, 3
mov edx, dword [0x080049f6]
pxor xmm0, xmm0
mov dword [arg_38h], ecx
movups xmmword [arg_20h], xmm0
test edx, esi
je 0x8004cc0
mov edx, ecx
mov rdi, rax
mov rsi, qword [r9 + rdx*8 + 0x258]
cmp ecx, 0x1f
je 0x8004a4e
shr ecx, 1
mov edx, ecx
mov ecx, 0x39
sub ecx, edx
shl rdi, cl
jmp 0x8004a4e
nop dword [rax + rax]
mov rdx, rdi
add rdi, rdi
shr rdx, 0x3f
add rdx, 4
mov rcx, qword [rsi + rdx*8]
test rcx, rcx
je 0x8004cf0
mov rsi, rcx
mov rdx, qword [rsi + 8]
and rdx, 0xfffffffffffffff8
cmp rdx, rax
jne 0x8004a30
mov rax, qword [rsi + 0x10]
cmp r8, rsi
ja .text.unlikely
cmp r8, rax
ja .text.unlikely
mov qword [rax + 0x18], rbp
movq xmm0, rax
movq xmm2, rsi
mov qword [rsi + 0x10], rbp
punpcklqdq xmm0, xmm2
mov qword [arg_30h], 0
movups xmmword [arg_10h], xmm0
sub qword [0x08004a9b], 1
jne .bss
lea rdi, [0x08004aa8]
call sym.release_unused_segments
jmp .bss
nop word [rax + rax]
or eax, esi
mov dword [0x08004ac0], eax
mov rax, rdx
jmp 0x8004882
nop dword [rax + rax]
mov esi, 1
mov edi, 0x258
jmp .bss
nop
mov rdx, qword [rsi + 8]
mov rcx, rdx
and ecx, 3
cmp rcx, 3
jne .text.unlikely
and rdx, 0xfffffffffffffffe
mov qword [0x08004aff], rax
mov qword [rsi + 8], rdx
mov rdx, rax
or rdx, 1
mov qword [arg_8h], rdx
mov qword [rsi], rax
jmp .bss
nop word cs:[rax + rax]
mov dword [0x08004b2a], 0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rbx, qword [rsi + 0x30]
cmp rsi, rdi
je 0x8004e18
mov rdx, qword [rsi + 0x10]
cmp r8, rdx
ja .text.unlikely
cmp qword [rdx + 0x18], rsi
jne .text.unlikely
cmp qword [rdi + 0x10], rsi
jne .text.unlikely
mov qword [rdx + 0x18], rdi
mov qword [rdi + 0x10], rdx
test rbx, rbx
je 0x8004920
mov edx, dword [rsi + 0x38]
lea rcx, [rdx + 0x4a]
cmp qword [r9 + rdx*8 + 0x258], rsi
je 0x8004dd8
cmp r8, rbx
ja .text.unlikely
cmp qword [rbx + 0x20], rsi
je 0x8004eb8
mov qword [rbx + 0x28], rdi
test rdi, rdi
je 0x8004920
cmp r8, rdi
ja .text.unlikely
mov rdx, qword [rsi + 0x20]
mov qword [rdi + 0x30], rbx
test rdx, rdx
je 0x8004bd3
cmp r8, rdx
ja .text.unlikely
mov qword [rdi + 0x20], rdx
mov qword [rdx + 0x30], rdi
mov rdx, qword [rsi + 0x28]
test rdx, rdx
je 0x8004920
cmp r8, rdx
ja .text.unlikely
mov qword [rdi + 0x28], rdx
mov qword [rdx + 0x30], rdi
jmp 0x8004920
nop word cs:[rax + rax]
mov r11, qword [arg_30h]
cmp rdi, rbp
je 0x8004e68
mov rdx, qword [arg_10h]
cmp r8, rdx
ja .text.unlikely
cmp qword [rdx + 0x18], rbp
jne .text.unlikely
cmp qword [rdi + 0x10], rbp
jne .text.unlikely
mov qword [rdx + 0x18], rdi
mov qword [rdi + 0x10], rdx
test r11, r11
je .text.unlikely
mov edx, dword [arg_38h]
lea rcx, [rdx + 0x4a]
cmp qword [r9 + rdx*8 + 0x258], rbp
je 0x8004de8
cmp r8, r11
ja .text.unlikely
cmp qword [r11 + 0x20], rbp
je 0x8004ec1
mov qword [r11 + 0x28], rdi
test rdi, rdi
je .text.unlikely
cmp r8, rdi
ja .text.unlikely
mov rdx, qword [arg_20h]
mov qword [rdi + 0x30], r11
test rdx, rdx
je 0x8004c9b
cmp r8, rdx
ja .text.unlikely
mov qword [rdi + 0x20], rdx
mov qword [rdx + 0x30], rdi
mov rdx, qword [arg_28h]
test rdx, rdx
je .text.unlikely
cmp r8, rdx
ja .text.unlikely
mov qword [rdi + 0x28], rdx
mov qword [rdx + 0x30], rdi
jmp 0x8004810
nop
movq xmm0, rbp
or edx, esi
add rdi, r9
mov qword [r9 + rcx*8 + 0x258], rbp
punpcklqdq xmm0, xmm0
mov dword [0x08004cdc], edx
mov qword [arg_30h], rdi
movups xmmword [arg_10h], xmm0
jmp .bss
nop dword [rax]
lea rax, [rsi + rdx*8]
cmp r8, rax
ja .text.unlikely
movq xmm0, rbp
mov qword [rsi + rdx*8], rbp
punpcklqdq xmm0, xmm0
mov qword [arg_30h], rsi
movups xmmword [arg_10h], xmm0
jmp .bss
nop word [rax + rax]
lea rbx, [rax + rdx + 0x20]
mov rdi, rbp
mov rsi, rbx
call munmap
test eax, eax
jne .bss
sub qword [0x08004d3f], rbx
jmp .bss
nop dword [rax]
mov esi, 0x80000000
mov edi, 0x350
mov ecx, 0x1f
jmp .bss
nop dword [rax]
add rax, qword [0x08004d67]
mov qword [0x08004d6e], rbp
mov rdx, rax
mov qword [0x08004d78], rax
or rdx, 1
mov qword [arg_8h], rdx
cmp rbp, r11
je 0x8004df8
cmp rax, qword [0x08004d8c]
jbe .bss
xor esi, esi
lea rdi, [0x08004d9b]
call sym.sys_trim
jmp .bss
nop dword [rax]
add rax, qword [0x08004daf]
mov qword [0x08004db6], rbp
mov rdx, rax
mov qword [0x08004dc0], rax
or rdx, 1
mov qword [arg_8h], rdx
mov qword [rbp + rax], rax
jmp .bss
nop word [rax + rax]
mov qword [r9 + rcx*8 + 8], rdi
jmp 0x8004bac
nop word [rax + rax]
mov qword [r9 + rcx*8 + 8], rdi
jmp 0x8004c74
nop word [rax + rax]
mov qword [0x08004e03], 0
mov qword [0x08004e0e], 0
jmp .bss
nop dword [rax + rax]
mov rdx, qword [rsi + 0x28]
lea rcx, [rsi + 0x28]
test rdx, rdx
je 0x8004f26
nop dword [rax]
mov r10, rcx
mov rdi, rdx
lea rcx, [rdx + 0x28]
mov rdx, qword [rdx + 0x28]
test rdx, rdx
jne 0x8004e30
mov rdx, qword [rdi + 0x20]
lea rcx, [rdi + 0x20]
test rdx, rdx
jne 0x8004e30
cmp r8, r10
ja .text.unlikely
mov qword [r10], 0
jmp 0x8004b6e
nop dword [rax]
mov rdx, qword [arg_28h]
lea rcx, [arg_28h]
test rdx, rdx
je 0x8004f38
nop dword [rax]
mov r10, rcx
mov rdi, rdx
lea rcx, [rdx + 0x28]
mov rdx, qword [rdx + 0x28]
test rdx, rdx
jne 0x8004e80
mov rdx, qword [rdi + 0x20]
lea rcx, [rdi + 0x20]
test rdx, rdx
jne 0x8004e80
cmp r8, r10
ja .text.unlikely
mov qword [r10], 0
jmp 0x8004c36
nop dword [rax]
mov qword [rbx + 0x20], rdi
jmp 0x8004ba3
mov qword [r11 + 0x20], rdi
jmp 0x8004c6b
cmp r8, rdx
ja .text.unlikely
cmp qword [rdx + 0x18], rsi
jne .text.unlikely
cmp rdx, rdi
je 0x8004913
cmp r10, rdi
jne 0x8004f4a
mov qword [rdx + 0x18], rdi
mov qword [rdi + 0x10], rdx
jmp 0x8004920
cmp r8, rdx
ja .text.unlikely
cmp qword [rdx + 0x18], rbp
jne .text.unlikely
cmp rdx, rdi
je 0x8004803
cmp r10, rdi
jne 0x8004f60
mov qword [rdx + 0x18], rdi
mov qword [rdi + 0x10], rdx
jmp 0x8004810
mov rdx, qword [rsi + 0x20]
test rdx, rdx
je 0x8004f78
lea rcx, [rsi + 0x20]
jmp 0x8004e30
mov rdx, qword [arg_20h]
test rdx, rdx
je 0x8004fb7
lea rcx, [arg_20h]
jmp 0x8004e80
cmp r8, rdi
ja .text.unlikely
cmp qword [rdi + 0x10], rsi
je 0x8004eeb
jmp .text.unlikely
nop
cmp r8, rdi
ja .text.unlikely
cmp qword [rdi + 0x10], rbp
je 0x8004f19
jmp .text.unlikely
nop dword [rax]
test rbx, rbx
je 0x8004920
mov r10d, dword [rsi + 0x38]
xor edi, edi
mov rcx, r10
lea rdx, [r10 + 0x4a]
cmp qword [r9 + r10*8 + 0x258], rsi
jne .text.unlikely
mov qword [r9 + rdx*8 + 8], 0
mov edx, 0xfffffffe
rol edx, cl
and dword [0x08004fb2], edx
jmp 0x8004920
test r11, r11
je .text.unlikely
mov r10d, dword [arg_38h]
xor edi, edi
mov rcx, r10
lea rdx, [r10 + 0x4a]
cmp qword [r9 + r10*8 + 0x258], rbp
jne .text.unlikely
mov qword [r9 + rdx*8 + 8], 0
mov edx, 0xfffffffe
rol edx, cl
and dword [0x08004ff1], edx
jmp 0x8004810
jmp .text.unlikely
nop dword [rax + rax]
