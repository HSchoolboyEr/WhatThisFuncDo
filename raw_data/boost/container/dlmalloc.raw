cmp qword [0x08004308], 0
push r12
push rbp
push rbx
mov rbx, rdi
je 0x8004430
test byte [0x0800431c], 2
jne 0x80043e0
cmp rbx, 0xe8
ja 0x8004440
cmp rbx, 0x16
ja 0x80043c8
mov ecx, 4
mov ebp, 0x20
mov esi, dword [0x08004349]
lea rdi, [0x08004350]
mov eax, esi
shr eax, cl
test al, 3
je .bss
not eax
and eax, 1
add ecx, eax
lea eax, [rcx + rcx + 9]
lea rdi, [rdi + rax*8]
mov rax, qword [rdi + 0x10]
mov rdx, qword [rax + 0x10]
cmp rdi, rdx
je .bss
cmp qword [0x08004383], rdx
ja .text.unlikely
cmp qword [rdx + 0x18], rax
jne .text.unlikely
mov qword [rdx + 0x18], rdi
mov qword [rdi + 0x10], rdx
shl ecx, 3
mov edx, ecx
or edx, 3
mov esi, edx
mov qword [rax + 8], rsi
or qword [rax + rcx + 8], 1
add rax, 0x10
test byte [0x080043ba], 2
jne .bss
pop rbx
pop rbp
pop r12
ret
nop dword [rax]
lea rbp, [rbx + 0x17]
and rbp, 0xfffffffffffffff0
mov rcx, rbp
shr rcx, 3
jmp .bss
nop dword [rax]
mov eax, 1
xchg dword [0x080043eb], eax
xor ebp, ebp
mov r12d, 1
test eax, eax
je 0x8004322
nop dword [rax + rax]
mov eax, dword [0x08004406]
test eax, eax
jne 0x800441b
mov eax, r12d
xchg dword [0x08004413], eax
test eax, eax
je 0x8004322
add ebp, 1
test bpl, 0x3f
jne 0x8004400
call sched_yield
jmp 0x8004400
nop dword [rax + rax]
call sym.init_mparams.isra.0
jmp .bss
nop word [rax + rax]
cmp rbx, 0xffffffffffffff7f
ja .bss
mov eax, dword [0x08004453]
lea rbp, [rbx + 0x17]
and rbp, 0xfffffffffffffff0
test eax, eax
jne 0x80046e0
mov rdx, qword [0x0800446a]
cmp rdx, rbp
jae .bss
mov rax, qword [0x0800447a]
cmp rbp, rax
jae 0x800461b
sub rax, rbp
mov qword [0x0800448d], rax
mov rdx, rax
mov rax, qword [0x08004497]
or rdx, 1
lea rcx, [rax + rbp]
or rbp, 3
mov qword [0x080044aa], rcx
mov qword [rcx + 8], rdx
mov qword [rax + 8], rbp
add rax, 0x10
test byte [0x080044bd], 2
je 0x80043c0
mov dword [0x080044cd], 0
pop rbx
pop rbp
pop r12
ret
nop word [rax + rax]
mov rdx, qword [0x080044df]
cmp rdx, rbp
jae .bss
test eax, eax
je .bss
mov r9d, 1
shl eax, cl
mov r8d, r9d
shl r8d, cl
lea r10d, [r8 + r8]
mov r8d, r10d
neg r8d
or r8d, r10d
and eax, r8d
mov ecx, eax
neg ecx
and eax, ecx
xor ecx, ecx
tzcnt ecx, eax
lea eax, [rcx + rcx + 9]
lea r10, [rdi + rax*8]
mov rax, qword [r10 + 0x10]
mov r8, qword [rax + 0x10]
cmp r10, r8
je 0x8004710
cmp qword [0x0800453a], r8
ja .text.unlikely
cmp qword [r8 + 0x18], rax
jne .text.unlikely
mov qword [r8 + 0x18], r10
mov qword [r10 + 0x10], r8
lea r8d, [rcx*8]
mov r9, r8
mov rcx, r8
add r8, rax
sub r9, rbp
cmp r9, 0x1f
jbe 0x8004728
mov rcx, rbp
add rbp, rax
or rcx, 3
mov qword [rax + 8], rcx
mov rcx, r9
or rcx, 1
mov qword [arg_8h], rcx
mov qword [r8], r9
test rdx, rdx
je 0x80045e2
shr rdx, 3
mov r8, qword [0x0800459c]
mov rcx, rdx
lea edx, [rdx + rdx + 9]
lea rdi, [rdi + rdx*8]
mov edx, 1
shl edx, cl
test edx, esi
je .bss
mov rdx, qword [rdi + 0x10]
cmp rdx, qword [0x080045c1]
jb .text.unlikely
movq xmm0, rdx
movq xmm1, rdi
mov qword [rdi + 0x10], r8
punpcklqdq xmm0, xmm1
mov qword [rdx + 0x18], r8
movups xmmword [r8 + 0x10], xmm0
mov qword [0x080045e9], r9
mov qword [0x080045f0], rbp
jmp 0x80044b2
nop dword [rax]
mov rax, qword [0x080045ff]
mov rdx, qword [0x08004606]
mov rbp, 0xffffffffffffffff
lea rsi, [rax - 1]
cmp rdx, 0xffffffffffffffff
je .bss
mov rsi, rbp
lea rdi, [0x08004625]
call sym.sys_alloc
jmp .bss
nop
mov edx, dword [0x08004636]
test edx, edx
je .bss
mov rsi, rbp
call sym.tmalloc_small
test rax, rax
jne .bss
jmp .bss
nop dword [rax]
mov rax, qword [0x0800465f]
mov rcx, rdx
sub rcx, rbp
lea rsi, [rax + rdx]
cmp rcx, 0x1f
jbe 0x80046b0
mov rdi, rcx
lea rdx, [rax + rbp]
or rbp, 3
mov qword [0x08004681], rcx
or rdi, 1
mov qword [0x0800468c], rdx
mov qword [rdx + 8], rdi
mov qword [rsi], rcx
mov qword [rax + 8], rbp
jmp 0x80044b2
nop dword [rax]
btr esi, ecx
mov dword [0x080046a9], esi
jmp 0x800439b
nop
or rdx, 3
mov qword [0x080046bf], 0
mov qword [0x080046ca], 0
mov qword [rax + 8], rdx
or qword [rsi + 8], 1
jmp 0x80044b2
nop dword [rax + rax]
mov rsi, rbp
lea rdi, [0x080046ea]
call sym.tmalloc_large
test rax, rax
jne .bss
jmp .bss
nop dword [rax]
or edx, esi
mov dword [0x08004708], edx
mov rdx, rdi
jmp 0x80045c7
shl r9d, cl
not r9d
and esi, r9d
mov dword [0x0800471f], esi
jmp 0x8004552
nop dword [rax]
or ecx, 3
mov esi, ecx
mov qword [rax + 8], rsi
or qword [r8 + 8], 1
jmp 0x80044b2
