push rbp
push rbx
mov rbx, rdi
mov rdi, rsi
add rsi, rdx
sub rsp, 8
mov rax, qword [rdi + 8]
test al, 1
jne 0x8000da0
mov r10, qword [rdi]
sub rdi, r10
test al, 3
je 0x8001040
mov r9, qword [rbx + 0x18]
add rdx, r10
cmp r9, rdi
ja .text.unlikely
cmp qword [rbx + 0x20], rdi
je 0x8001100
mov rcx, r10
mov r8, qword [rdi + 0x18]
shr rcx, 3
cmp r10, 0xff
jbe 0x8001010
mov r11, qword [rdi + 0x30]
cmp r8, rdi
je 0x8001240
mov rax, qword [rdi + 0x10]
cmp r9, rax
ja .text.unlikely
cmp qword [rax + 0x18], rdi
jne .text.unlikely
cmp qword [r8 + 0x10], rdi
jne .text.unlikely
mov qword [rax + 0x18], r8
mov qword [r8 + 0x10], rax
test r11, r11
je 0x8000da4
mov eax, dword [rdi + 0x38]
lea rcx, [rax + 0x4a]
cmp qword [rbx + rax*8 + 0x258], rdi
je 0x80012a0
cmp r9, r11
ja .text.unlikely
cmp qword [r11 + 0x20], rdi
je 0x80011e0
mov qword [r11 + 0x28], r8
test r8, r8
je 0x8000da4
cmp r9, r8
ja .text.unlikely
mov rax, qword [rdi + 0x20]
mov qword [r8 + 0x30], r11
test rax, rax
je 0x8000d7e
cmp r9, rax
ja .text.unlikely
mov qword [r8 + 0x20], rax
mov qword [rax + 0x30], r8
mov rax, qword [rdi + 0x28]
test rax, rax
je 0x8000da4
cmp r9, rax
ja .text.unlikely
mov qword [r8 + 0x28], rax
mov qword [rax + 0x30], r8
jmp 0x8000da4
nop word [rax + rax]
mov r9, qword [rbx + 0x18]
cmp r9, rsi
ja .text.unlikely
mov rax, qword [rsi + 8]
test al, 2
jne 0x8000ec0
mov r11, qword [rbx + 0x20]
cmp qword [rbx + 0x28], rsi
je 0x8001180
cmp r11, rsi
je 0x80011b8
and rax, 0xfffffffffffffff8
mov r8, qword [rsi + 0x18]
mov rcx, rax
add rdx, rax
shr rcx, 3
cmp rax, 0xf8
jbe 0x8000fe0
mov rbp, qword [rsi + 0x30]
cmp r8, rsi
je 0x80011f0
mov rax, qword [rsi + 0x10]
cmp r9, rax
ja .text.unlikely
cmp qword [rax + 0x18], rsi
jne .text.unlikely
cmp qword [r8 + 0x10], rsi
jne .text.unlikely
mov qword [rax + 0x18], r8
mov qword [r8 + 0x10], rax
test rbp, rbp
je 0x8000ea0
mov eax, dword [rsi + 0x38]
lea rcx, [rax + 0x4a]
cmp qword [rbx + rax*8 + 0x258], rsi
je 0x8001290
cmp r9, rbp
ja .text.unlikely
cmp qword [arg_20h], rsi
je 0x80012b0
mov qword [arg_28h], r8
test r8, r8
je 0x8000ea0
cmp r8, r9
jb .text.unlikely
mov rax, qword [rsi + 0x20]
mov qword [r8 + 0x30], rbp
test rax, rax
je 0x8000e81
cmp r9, rax
ja .text.unlikely
mov qword [r8 + 0x20], rax
mov qword [rax + 0x30], r8
mov rax, qword [rsi + 0x28]
test rax, rax
je 0x8000ea0
cmp r9, rax
ja .text.unlikely
mov qword [r8 + 0x28], rax
mov qword [rax + 0x30], r8
nop dword [rax + rax]
mov rax, rdx
or rax, 1
mov qword [rdi + 8], rax
mov qword [rdi + rdx], rdx
cmp r11, rdi
jne 0x8000ed6
mov qword [rbx + 8], rdx
jmp 0x8000fb9
nop dword [rax]
and rax, 0xfffffffffffffffe
mov qword [rsi + 8], rax
mov rax, rdx
or rax, 1
mov qword [rdi + 8], rax
mov qword [rsi], rdx
mov rcx, rdx
shr rcx, 3
cmp rdx, 0xff
ja 0x8000f30
lea eax, [rcx + rcx + 9]
mov esi, dword [rbx]
lea rdx, [rbx + rax*8]
mov eax, 1
shl eax, cl
test esi, eax
je 0x8000fd0
mov rax, qword [rdx + 0x10]
cmp rax, r9
jb .text.unlikely
movq xmm0, rax
movq xmm1, rdx
mov qword [rdx + 0x10], rdi
punpcklqdq xmm0, xmm1
mov qword [rax + 0x18], rdi
movups xmmword [rdi + 0x10], xmm0
add rsp, 8
pop rbx
pop rbp
ret
nop dword [rax]
mov rax, rdx
shr rax, 8
mov ecx, eax
test eax, eax
je 0x8000fc0
cmp eax, 0xffff
ja 0x8001138
bsr eax, eax
mov ecx, 0x26
mov rsi, rdx
xor eax, 0x1f
sub ecx, eax
shr rsi, cl
mov rcx, rsi
mov esi, 0x1f
sub esi, eax
and ecx, 1
mov eax, 1
lea ecx, [rcx + rsi*2]
lea esi, [rcx + 0x4b]
shl eax, cl
shl rsi, 3
mov r8d, eax
mov eax, dword [rbx + 4]
pxor xmm0, xmm0
mov dword [rdi + 0x38], ecx
movups xmmword [rdi + 0x20], xmm0
test eax, r8d
jne 0x8001068
or eax, r8d
add rsi, rbx
movq xmm0, rdi
mov dword [rbx + 4], eax
punpcklqdq xmm0, xmm0
mov qword [rbx + rcx*8 + 0x258], rdi
mov qword [rdi + 0x30], rsi
movups xmmword [rdi + 0x10], xmm0
add rsp, 8
pop rbx
pop rbp
ret
mov r8d, 1
mov esi, 0x258
jmp 0x8000f80
nop dword [rax]
or eax, esi
mov dword [rbx], eax
mov rax, rdx
jmp 0x8000f0c
nop dword [rax]
lea r10d, [rcx + rcx + 9]
mov rax, qword [rsi + 0x10]
lea r10, [rbx + r10*8]
cmp r10, rax
jne .text.unlikely
cmp r8, rax
jne .text.unlikely
mov eax, 0xfffffffe
rol eax, cl
and dword [rbx], eax
jmp 0x8000ea0
nop dword [rax]
lea r10d, [rcx + rcx + 9]
mov rax, qword [rdi + 0x10]
lea r10, [rbx + r10*8]
cmp r10, rax
jne .text.unlikely
cmp r8, rax
jne .text.unlikely
mov eax, 0xfffffffe
rol eax, cl
and dword [rbx], eax
jmp 0x8000da4
nop dword [rax]
lea rbp, [r10 + rdx + 0x20]
mov rsi, rbp
call munmap
test eax, eax
jne 0x8000fb9
sub qword [rbx + 0x358], rbp
jmp 0x8000fb9
nop dword [rax]
mov eax, ecx
mov r8, rdx
mov rsi, qword [rbx + rax*8 + 0x258]
cmp ecx, 0x1f
je 0x80010ae
mov eax, ecx
mov ecx, 0x39
shr eax, 1
sub ecx, eax
shl r8, cl
jmp 0x80010ae
nop word [rax + rax]
mov rax, r8
add r8, r8
shr rax, 0x3f
add rax, 4
mov rcx, qword [rsi + rax*8]
test rcx, rcx
je 0x8001150
mov rsi, rcx
mov rax, qword [rsi + 8]
and rax, 0xfffffffffffffff8
cmp rax, rdx
jne 0x8001090
mov rax, qword [rsi + 0x10]
cmp r9, rax
ja .text.unlikely
cmp r9, rsi
ja .text.unlikely
movq xmm0, rax
movq xmm2, rsi
mov qword [rax + 0x18], rdi
punpcklqdq xmm0, xmm2
mov qword [rsi + 0x10], rdi
mov qword [rdi + 0x30], 0
movups xmmword [rdi + 0x10], xmm0
jmp 0x8000fb9
nop dword [rax + rax]
mov rax, qword [rsi + 8]
mov rcx, rax
and ecx, 3
cmp rcx, 3
jne .text.unlikely
and rax, 0xfffffffffffffffe
mov qword [rbx + 8], rdx
mov qword [rsi + 8], rax
mov rax, rdx
or rax, 1
mov qword [rdi + 8], rax
mov qword [rsi], rdx
jmp 0x8000fb9
nop dword [rax + rax]
mov r8d, 0x80000000
mov esi, 0x350
mov ecx, 0x1f
jmp 0x8000f80
nop dword [rax]
lea rdx, [rsi + rax*8]
cmp r9, rdx
ja .text.unlikely
movq xmm0, rdi
mov qword [rsi + rax*8], rdi
punpcklqdq xmm0, xmm0
mov qword [rdi + 0x30], rsi
movups xmmword [rdi + 0x10], xmm0
jmp 0x8000fb9
nop word [rax + rax]
add rdx, qword [rbx + 0x10]
mov qword [rbx + 0x28], rdi
mov qword [rbx + 0x10], rdx
or rdx, 1
mov qword [rdi + 8], rdx
cmp r11, rdi
jne 0x8000fb9
mov qword [rbx + 0x20], 0
mov qword [rbx + 8], 0
jmp 0x8000fb9
nop word [rax + rax]
add rdx, qword [rbx + 8]
mov qword [rbx + 0x20], rdi
mov rax, rdx
mov qword [rbx + 8], rdx
or rax, 1
mov qword [rdi + 8], rax
mov qword [rdi + rdx], rdx
jmp 0x8000fb9
nop dword [rax + rax]
mov qword [r11 + 0x20], r8
jmp 0x8000d52
nop dword [rax]
mov rax, qword [rsi + 0x28]
lea rcx, [rsi + 0x28]
test rax, rax
je 0x8001315
nop dword [rax]
mov r10, rcx
mov r8, rax
lea rcx, [rax + 0x28]
mov rax, qword [rax + 0x28]
test rax, rax
jne 0x8001208
mov rax, qword [r8 + 0x20]
lea rcx, [r8 + 0x20]
test rax, rax
jne 0x8001208
cmp r9, r10
ja .text.unlikely
mov qword [r10], 0
jmp 0x8000e24
nop dword [rax]
mov rax, qword [rdi + 0x28]
lea rcx, [rdi + 0x28]
test rax, rax
je 0x8001327
nop dword [rax]
mov r10, rcx
mov r8, rax
lea rcx, [rax + 0x28]
mov rax, qword [rax + 0x28]
test rax, rax
jne 0x8001258
mov rax, qword [r8 + 0x20]
lea rcx, [r8 + 0x20]
test rax, rax
jne 0x8001258
cmp r9, r10
ja .text.unlikely
mov qword [r10], 0
jmp 0x8000d21
nop dword [rax]
mov qword [rbx + rcx*8 + 8], r8
jmp 0x8000e5a
nop word [rax + rax]
mov qword [rbx + rcx*8 + 8], r8
jmp 0x8000d57
nop word [rax + rax]
mov qword [arg_20h], r8
jmp 0x8000e55
cmp r9, rax
ja .text.unlikely
cmp qword [rax + 0x18], rsi
jne .text.unlikely
cmp r8, rax
je 0x8000fff
cmp r10, r8
jne 0x8001339
mov qword [rax + 0x18], r8
mov qword [r8 + 0x10], rax
jmp 0x8000ea0
cmp r9, rax
ja .text.unlikely
cmp qword [rax + 0x18], rdi
jne .text.unlikely
cmp r8, rax
je 0x800102f
cmp r10, r8
jne 0x8001350
mov qword [rax + 0x18], r8
mov qword [r8 + 0x10], rax
jmp 0x8000da4
mov rax, qword [rsi + 0x20]
test rax, rax
je 0x8001368
lea rcx, [rsi + 0x20]
jmp 0x8001208
mov rax, qword [rdi + 0x20]
test rax, rax
je 0x80013a3
lea rcx, [rdi + 0x20]
jmp 0x8001258
cmp r8, r9
jb .text.unlikely
cmp qword [r8 + 0x10], rsi
je 0x80012da
jmp .text.unlikely
nop dword [rax]
cmp r9, r8
ja .text.unlikely
cmp qword [r8 + 0x10], rdi
je 0x8001308
jmp .text.unlikely
nop dword [rax]
test rbp, rbp
je 0x8000ea0
mov eax, dword [rsi + 0x38]
xor r8d, r8d
mov rcx, rax
cmp qword [rbx + rax*8 + 0x258], rsi
jne .text.unlikely
mov qword [rbx + rax*8 + 0x258], 0
mov eax, 0xfffffffe
rol eax, cl
and dword [rbx + 4], eax
jmp 0x8000ea0
test r11, r11
je .text.unlikely
mov eax, dword [r8 + 0x38]
xor r8d, r8d
mov rcx, rax
cmp qword [rbx + rax*8 + 0x258], rdi
jne .text.unlikely
mov qword [rbx + rax*8 + 0x258], 0
mov eax, 0xfffffffe
rol eax, cl
and dword [rbx + 4], eax
jmp 0x8000da4
