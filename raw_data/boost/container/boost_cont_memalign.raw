push r15
push r14
push r13
push r12
mov r12, rdi
push rbp
mov rbp, rsi
push rbx
sub rsp, 0x18
cmp qword [0x0800874c], 0
je 0x8008898
cmp rbp, 0x10
jbe 0x8008860
cmp rbp, 0x20
mov ebx, 0x20
cmovae rbx, rbp
lea rax, [rbx - 1]
test rax, rbx
je 0x8008830
cmp rbp, 0x20
jbe 0x80089f0
mov eax, 0x20
nop dword [rax]
add rax, rax
cmp rbx, rax
ja 0x8008788
mov rdx, 0xffffffffffffff80
mov rbx, rax
sub rdx, rax
cmp r12, rdx
jae __errno_location
lea rax, [r12 + 0x17]
and rax, 0xfffffffffffffff0
cmp r12, 0x16
mov r12d, 0x20
cmova r12, rax
lea rdi, [rbx + r12 + 0x18]
call dlmalloc
mov r13, rax
test rax, rax
je 0x800884e
lea r15, [rax - 0x10]
test byte [0x080087da], 2
jne 0x80088f8
lea rax, [rbx - 1]
test r13, rax
jne 0x80088a8
mov rdx, qword [r13 - 8]
mov rax, r13
mov rbp, r15
test dl, 3
je 0x8008811
mov rcx, rdx
lea rsi, [r12 + 0x20]
and rcx, 0xfffffffffffffff8
cmp rcx, rsi
ja 0x80089a0
test byte [0x08008818], 2
je 0x8008874
mov dword [0x08008824], 0
jmp 0x8008874
nop word cs:[rax + rax]
mov rdx, 0xffffffffffffff80
sub rdx, rbx
cmp r12, rdx
jb 0x80087a6
call __errno_location
mov dword [rax], 0xc
add rsp, 0x18
xor eax, eax
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
mov rsi, r12
lea rdi, [0x0800886a]
call mspace_malloc
test rax, rax
je 0x800884e
mov rdx, qword [rax - 8]
and rdx, 0xfffffffffffffff8
add qword [0x08008883], rdx
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
call sym.init_mparams.isra.0
jmp 0x8008752
nop word [rax + rax]
mov rdx, rbx
add rax, r13
neg rdx
and rax, rdx
lea rbp, [rax - 0x10]
mov r8, rbp
sub r8, r15
cmp r8, 0x1f
ja 0x80088cd
add rbp, rbx
mov r8, rbp
sub r8, r15
mov rcx, qword [r13 - 8]
lea rax, [arg_10h]
mov rdx, rcx
and rdx, 0xfffffffffffffff8
sub rdx, r8
and ecx, 3
jne 0x8008948
add r8, qword [r13 - 0x10]
mov qword [arg_8h], rdx
mov qword [rbp], r8
jmp 0x80087f7
nop dword [rax]
mov eax, 1
xchg dword [0x08008903], eax
test eax, eax
je 0x80087e0
xor ebp, ebp
mov r14d, 1
nop dword [rax + rax]
mov eax, dword [0x0800891e]
test eax, eax
jne 0x8008933
mov eax, r14d
xchg dword [0x0800892b], eax
test eax, eax
je 0x80087e0
add ebp, 1
test bpl, 0x3f
jne 0x8008918
call sched_yield
jmp 0x8008918
nop dword [rax + rax]
mov rcx, qword [arg_8h]
mov rsi, r15
mov qword [var_8h], rax
lea rdi, [0x0800895b]
and ecx, 1
or rcx, rdx
or rcx, 2
mov qword [arg_8h], rcx
or qword [rbp + rdx + 8], 1
mov rdx, qword [r13 - 8]
and edx, 1
or rdx, r8
or rdx, 2
mov qword [r13 - 8], rdx
mov rdx, r8
or qword [r15 + r8 + 8], 1
call sym.dispose_chunk
mov rdx, qword [arg_8h]
mov rax, qword [var_8h]
jmp 0x80087f7
nop dword [rax]
mov r8, rcx
and edx, 1
lea rsi, [rbp + r12]
mov qword [var_8h], rax
sub r8, r12
or r12, rdx
lea rdi, [0x080089bd]
mov rdx, r8
or r12, 2
or rdx, 3
mov qword [arg_8h], r12
mov qword [rsi + 8], rdx
mov rdx, r8
or qword [rbp + rcx + 8], 1
call sym.dispose_chunk
mov rax, qword [var_8h]
jmp .bss
nop dword [rax + rax]
mov rdx, 0xffffffffffffff60
mov ebx, 0x20
jmp 0x800883a
