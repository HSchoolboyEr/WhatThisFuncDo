test rsi, rsi
je 0x800069b
sub qword [rsi], 1
je 0x80006a0
ret
nop dword [rax]
push r13
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 8
mov rdi, qword [rdi + 8]
mov rcx, qword [rsi + 8]
mov rax, qword [rdi]
lea rdx, [rdi + 0x10]
lea r8, [rdx + rcx*8]
sub rax, 1
cmp rcx, rax
je 0x8000720
mov r9, qword [rdi + 8]
lea r9, [rdi + r9*8 + 0x10]
lea rdi, [rax*8]
add rdx, rdi
mov r10, qword [rdx]
mov qword [r8], r10
mov qword [rdx], 0
lea rdx, [r9 + rdi]
mov rdi, qword [rdx]
mov qword [r9 + rcx*8], rdi
mov qword [rdx], rsi
mov qword [rdi + 8], rcx
mov qword [rsi + 8], rax
mov rdi, qword [arg_8h]
cmp byte [arg_10h], 0
mov rax, qword [rdi]
lea rbx, [rax - 1]
mov qword [rdi], rbx
jne 0x8000730
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop
mov qword [r8], 0
jmp 0x8000700
nop dword [rax]
mov r13, qword [rdi + 8]
lea rax, [r13*8]
cmp r13, rbx
jbe 0x800077d
lea r12, [rdi + rax]
jmp 0x800076c
nop word [rax + rax]
mov esi, 0x18
call _ZdlPvm
mov qword [r12 + rbx*8 + 0x10], 0
add rbx, 1
cmp r13, rbx
jbe 0x8000776
mov rdi, qword [r12 + rbx*8 + 0x10]
test rdi, rdi
jne 0x8000750
mov rdi, qword [arg_8h]
mov rbx, qword [rdi]
test rbx, rbx
jne 0x8000714
call free
mov qword [arg_8h], 0
jmp 0x8000714
