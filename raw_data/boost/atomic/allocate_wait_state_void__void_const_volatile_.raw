push r15
push r14
push r13
push r12
push rbp
mov rbp, rsi
push rbx
mov rbx, rdi
sub rsp, 8
mov rsi, qword [rdi + 8]
test rsi, rsi
je 0x80005c0
mov r12, qword [rsi]
mov rdi, rbp
add rsi, 0x10
mov rax, qword [0x0800057e]
mov rdx, r12
call rax
cmp r12, rax
mov r12, qword [rbx + 8]
mov rdx, qword [r12 + 8]
jbe 0x8000618
add rax, rdx
mov rax, qword [r12 + rax*8 + 0x10]
test rax, rax
je 0x8000618
mov rcx, qword [rax]
lea rdx, [rcx + 1]
mov qword [rax], rdx
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov edi, 2
call method boost::atomics::detail::lock_pool::(anonymous namespace)::wait_state_list::allocate_buffer(unsigned long, boost::atomics::detail::lock_pool::(anonymous namespace)::wait_state_list::header*)
mov qword [rbx + 8], rax
mov r12, rax
test rax, rax
je 0x8000680
mov r15, qword [r12]
mov rdx, qword [r12 + 8]
lea r14, [r15*8]
lea r13, [r14 + rdx*8 + 0x10]
add r13, r12
mov rax, qword [r13]
test rax, rax
je 0x8000648
mov rcx, qword [rax]
lea rdx, [rcx + 1]
mov qword [r12 + r14 + 0x10], rbp
mov rcx, qword [rbx + 8]
add qword [rcx], 1
jmp 0x80005a9
nop word [rax + rax]
mov r15, qword [r12]
cmp r15, rdx
jne 0x80005e3
mov rsi, r12
lea rdi, [rdx + rdx]
call method boost::atomics::detail::lock_pool::(anonymous namespace)::wait_state_list::allocate_buffer(unsigned long, boost::atomics::detail::lock_pool::(anonymous namespace)::wait_state_list::header*)
mov r12, rax
test rax, rax
je 0x8000680
mov rdi, qword [rbx + 8]
call free
mov qword [rbx + 8], r12
jmp 0x80005da
nop dword [rax]
lea rsi, [0x0800064f]
mov edi, 0x18
call _ZnwmRKSt9nothrow_t
test rax, rax
je 0x8000680
mov qword [rax], 0
mov r12, qword [rbx + 8]
mov edx, 1
mov qword [rax + 8], r15
mov qword [rax + 0x10], 0
mov qword [r13], rax
jmp 0x8000603
xor eax, eax
jmp 0x80005ac
