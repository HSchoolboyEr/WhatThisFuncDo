push r15
push r14
push r13
push r12
push rbp
mov rbp, rsi
push rbx
mov rbx, rdi
sub rsp, 0x18
movzx eax, byte [0x080000fb]
test al, al
je 0x80001e0
lea r12, [rbx + 1]
lea rdi, [var_8h]
mov esi, 0x10
shl r12, 4
mov rdx, r12
call posix_memalign
test eax, eax
je 0x8000140
xor r13d, r13d
add rsp, 0x18
mov rax, r13
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
mov r13, qword [var_8h]
test r13, r13
je 0x8000124
movabs rax, 0xfffffffffffffff
lea rdi, [r13 + 0x10]
cmp rbx, rax
ja .text.unlikely
lea r14, [rdi + rbx*8]
test rbp, rbp
je 0x8000208
mov r12, qword [rbp]
lea r15, [arg_10h]
mov rsi, r15
mov qword [r13], r12
lea rdx, [r12*8]
call memcpy
mov rdx, rbx
xor esi, esi
mov rdi, rax
sub rdx, r12
shl r12, 6
shl rdx, 3
add rdi, r12
call memset
mov rbp, qword [arg_8h]
mov rdi, r14
lea rdx, [rbp*8]
lea rsi, [r15 + rdx]
call memcpy
mov rdx, rbx
xor esi, esi
sub rdx, rbp
shl rbp, 6
shl rdx, 3
lea rdi, [r14 + rbp]
call memset
mov qword [r13 + 8], rbx
jmp 0x8000124
nop
mov eax, 1
xchg byte [0x080001eb], al
test al, al
jne 0x8000103
lea rdi, [method.boost::atomics::detail::lock_pool._anonymous_namespace_::cleanup_lock_pool__]
call atexit
jmp 0x8000103
nop dword [rax]
mov rdx, r12
xor esi, esi
mov rdi, r13
call memset
jmp 0x80001d6
