push r14
push r13
push r12
lea r12, [0x0800022d]
push rbp
lea r14, [r12 + 0x4000]
push rbx
nop word [rax + rax]
mov ecx, 0xa
mov eax, dword [r12]
test al, 1
jne 0x8000340
mov edx, eax
or edx, 1
lock cmpxchg dword [r12], edx
jne 0x8000340
mov rdi, qword [r12 + 8]
mov byte [r12 + 0x10], 1
test rdi, rdi
je 0x80002c1
mov r13, qword [rdi + 8]
mov rbx, qword [rdi]
lea rax, [r13*8]
cmp r13, rbx
jbe 0x80002bb
lea rbp, [rdi + rax]
jmp 0x80002ac
nop dword [rax]
mov esi, 0x18
call _ZdlPvm
mov qword [rbp + rbx*8 + 0x10], 0
add rbx, 1
cmp r13, rbx
je 0x80002b6
mov rdi, qword [rbp + rbx*8 + 0x10]
test rdi, rdi
jne 0x8000290
mov rdi, qword [r12 + 8]
cmp qword [rdi], 0
je free
mov eax, dword [r12]
mov ebx, eax
and ebx, 0xfffffffe
add ebx, 4
lock cmpxchg dword [r12], ebx
jne 0x80002c5
test al, 2
jne 0x80002f0
add r12, 0x40
cmp r14, r12
jne 0x8000240
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop
sub rsp, 8
mov ecx, 1
mov edx, 0x81
xor eax, eax
push 0
xor r9d, r9d
xor r8d, r8d
mov rsi, r12
mov edi, 0xca
call syscall
pop rdx
pop rcx
test eax, eax
jne 0x80002d9
mov edx, ebx
mov eax, ebx
and edx, 0xfffffffd
lock cmpxchg dword [r12], edx
jmp 0x80002d9
nop word [rax + rax]
call free
mov qword [r12 + 8], 0
jmp 0x80002c1
pause
sub ecx, 1
jne 0x8000245
mov eax, dword [r12]
test al, 1
jne 0x8000368
mov edx, eax
or edx, 1
lock cmpxchg dword [r12], edx
je 0x8000262
test al, 1
je 0x8000353
mov ecx, eax
or ecx, 2
lock cmpxchg dword [r12], ecx
jne 0x800034f
sub rsp, 8
mov rsi, r12
mov edi, 0xca
xor r9d, r9d
push 0
xor r8d, r8d
mov edx, 0x80
xor eax, eax
call syscall
mov eax, dword [r12]
pop rsi
pop rdi
jmp 0x800034f
