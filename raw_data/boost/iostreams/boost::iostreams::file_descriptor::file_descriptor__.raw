push r12
push rbp
push rbx
mov rbx, rdi
mov edi, 8
call _Znwm
mov qword [rbx + 8], 0
mov edi, 0x18
mov rbp, rax
mov rax, qword [0x080007f8]
mov qword [rbx], rbp
mov qword [rbp], rax
call _Znwm
mov qword [rax + 0x10], rbp
mov rdx, qword [0x0800080f]
lea rsi, [0x08000816]
mov rbp, qword [rbx + 8]
mov qword [rax], rsi
mov qword [rax + 8], rdx
mov qword [rbx + 8], rax
test rbp, rbp
je 0x8000831
lock sub dword [arg_8h], 1
je 0x8000840
pop rbx
pop rbp
pop r12
ret
nop word cs:[rax + rax]
mov rax, qword [rbp]
lea rdx, [0x0800084b]
add byte [rax], al
add byte [rax], al
mov rax, qword [rax + 0x10]
cmp rax, rdx
jne 0x80008c0
mov r12, qword [arg_10h]
test r12, r12
je 0x800087b
mov edi, dword [r12]
cmp edi, 0xffffffff
je 0x800086e
test byte [r12 + 4], 1
jne close
mov esi, 8
mov rdi, r12
call _ZdlPvm
lock sub dword [arg_ch], 1
jne 0x8000831
mov rax, qword [rbp]
lea rcx, [0x0800088d]
add byte [rax], al
add byte [rax], al
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x80008b0
pop rbx
mov rdi, rbp
mov rax, qword [rax + 8]
pop rbp
pop r12
jmp rax
nop dword [rax + rax]
call close
jmp 0x800086e
nop
mov rdi, rbp
call rdx
jmp 0x8000831
nop word [rax + rax]
mov rdi, rbp
call rax
jmp 0x800087b
