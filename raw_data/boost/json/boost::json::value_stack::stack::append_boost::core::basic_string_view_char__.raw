push r15
push r14
mov r14, rsi
push r13
push r12
mov r12, rdx
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x18
mov rbp, qword [rdi + 0x20]
mov rdx, qword [rdi + 0x28]
mov rcx, qword [rdi + 0x18]
lea rax, [rdx + r12]
mov rsi, rbp
lea rdi, [rax + 0x18]
sub rsi, rcx
cmp rdi, rsi
ja 0x8017c10
lea rdi, [rcx + rdx + 0x18]
mov rsi, r14
mov rdx, r12
call memcpy
add qword [rbx + 0x28], r12
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov rdi, qword [rbx + 0x10]
add rax, 0x17
movabs rdx, 0xaaaaaaaaaaaaaaab
sub rcx, rdi
mov qword [var_8h], rdi
sar rcx, 3
imul rcx, rdx
mul rdx
shr rdx, 4
lea rdx, [rcx + rdx + 1]
cmp rdx, 0x10
jbe 0x8017d18
mov eax, 0x10
nop dword [rax]
add rax, rax
cmp rdx, rax
ja 0x8017c50
lea r13, [rax + rax*2]
shl r13, 3
mov rax, qword [rbx]
mov rsi, r13
mov edx, 0x10
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x08017c7c]
cmove rdi, rax
mov rax, qword [rdi]
call qword [rax + 0x10]
mov rsi, qword [rbx + 0x10]
mov r15, rax
test rsi, rsi
je 0x8017cf0
mov rdx, qword [rbx + 0x18]
mov rax, qword [rbx + 0x28]
mov rdi, r15
sub rdx, rsi
test rax, rax
lea rcx, [rdx + rax + 0x18]
cmovne rdx, rcx
call memcpy
mov r10, qword [rbx + 0x10]
mov rsi, qword [rbx + 8]
cmp r10, rsi
je 0x8017cf0
mov rax, qword [rbx]
mov rsi, r10
mov rdx, rbp
mov ecx, 0x10
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x08017cdd]
cmove rdi, rax
sub rdx, qword [var_8h]
mov rax, qword [rdi]
call qword [rax + 0x18]
mov rsi, qword [rbx + 0x10]
mov rcx, qword [rbx + 0x18]
add r13, r15
mov rdx, qword [rbx + 0x28]
mov qword [rbx + 0x10], r15
mov qword [rbx + 0x20], r13
add rcx, r15
sub rcx, rsi
mov qword [rbx + 0x18], rcx
jmp 0x8017be6
nop word [rax + rax]
mov r13d, 0x180
jmp 0x8017c60
