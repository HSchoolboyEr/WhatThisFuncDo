push r15
push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
mov rbx, rdx
sub rsp, 0x38
mov rdx, qword [rdi + 0x10]
lea rax, [rdx + 8]
mov r13d, dword [rdx]
sub rsi, rax
movabs rax, 0xaaaaaaaaaaaaaaab
mov r12, rsi
mov r14, rsi
sar r12, 3
imul r12, rax
mov eax, dword [rdx + 4]
cmp r13d, eax
jae 0x800a070
lea r15, [rdx + rsi + 8]
sub r13, r12
jne 0x800a050
movdqu xmm1, xmmword [rbx]
movups xmmword [r15], xmm1
mov rax, qword [rbx + 0x10]
mov qword [r15 + 0x10], rax
mov rax, qword [arg_10h]
mov qword [rbx], 0
mov byte [rbx + 8], 0
add dword [rax], 1
add rsp, 0x38
mov rax, r15
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
lea rdx, [r13 + r13*2]
lea rdi, [r15 + 0x18]
mov rsi, r15
shl rdx, 3
call memmove
jmp 0x800a01c
nop word [rax + rax]
lea rdi, [r13 + 1]
cmp rdi, 0x7ffffffe
ja .text.unlikely
mov rcx, rax
mov edx, 0x7ffffffe
shr rcx, 1
sub rdx, rcx
cmp rax, rdx
ja 0x800a09e
add rax, rcx
cmp rdi, rax
cmovb rdi, rax
mov rsi, rbp
call _ZN5boost4json5array5table8allocateEmRKNS0_11storage_ptrE
movdqu xmm2, xmmword [rbx]
lea r8, [r14 + 8]
lea r15, [rax + r8]
mov rcx, rax
movups xmmword [r15], xmm2
mov rax, qword [rbx + 0x10]
mov qword [r15 + 0x10], rax
mov rsi, qword [arg_10h]
mov qword [rbx], 0
mov byte [rbx + 8], 0
test r12, r12
je 0x800a0fb
add rsi, 8
lea rdi, [rcx + 8]
mov rdx, r14
mov qword [var_8h], r8
mov qword [rsp], rcx
call memmove
mov rsi, qword [arg_10h]
mov r8, qword [var_8h]
mov rcx, qword [rsp]
sub r13, r12
je 0x800a121
lea rdx, [r13 + r13*2]
add rsi, r8
lea rdi, [r15 + 0x18]
mov qword [rsp], rcx
shl rdx, 3
call memmove
mov rsi, qword [arg_10h]
mov rcx, qword [rsp]
mov eax, dword [rsi]
add eax, 1
mov dword [rcx], eax
mov eax, dword [rsi + 4]
mov qword [arg_10h], rcx
test eax, eax
je 0x800a03e
mov rdx, qword [rbp]
lea rax, [rax + rax*2]
mov ecx, 8
mov rdi, rdx
and rdi, 0xfffffffffffffffc
test rdx, rdx
lea rdx, [0x0800a155]
cmove rdi, rdx
lea rdx, [rax*8 + 8]
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x800a03e
