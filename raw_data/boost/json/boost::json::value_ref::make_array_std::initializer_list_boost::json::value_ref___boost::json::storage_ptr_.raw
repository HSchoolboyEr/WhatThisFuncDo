push r15
push r14
push r13
push r12
mov r12, rdi
push rbp
mov rbp, rdx
push rbx
mov rbx, rsi
sub rsp, 0x78
mov rax, qword [rcx]
mov qword [rcx], 0
mov byte [rdi + 8], 6
mov qword [rdi], rax
lea rax, [0x0800d10f]
mov qword [rdi + 0x10], rax
mov eax, dword [0x0800d119]
cmp rax, rdx
jb _ZN5boost4json5array12reserve_implEm
lea rax, [rbp + rbp*4]
lea rax, [rbx + rax*8]
mov qword [rsp], rax
cmp rbx, rax
je 0x800d238
lea rax, [var_28h]
lea rbp, [var_30h]
mov qword [var_8h], rax
lea r15, [var_18h]
lea r13, [var_50h]
lea r14, [0x0800d158]
nop dword [rax + rax]
mov rax, qword [r12]
mov qword [var_18h], rax
test al, 1
jne 0x800d3b8
mov rdx, r15
mov rsi, rbx
mov rdi, rbp
call _ZNK5boost4json9value_ref10make_valueENS0_11storage_ptrE
add byte [rax], al
add byte [rax], al
mov rdi, qword [r12]
mov qword [var_20h], rdi
test dil, 1
jne 0x800d3d0
movzx eax, byte [var_38h]
and eax, 0x3f
cmp al, 7
ja 0x800d200
movzx eax, al
movsxd rax, dword [r14 + rax*4]
add rax, r14
jmp rax
nop word [rax + rax]
mov rdx, qword [rsp + 8]
mov qword [rsp + 0x28], rdi
mov rsi, rbp
mov rdi, r13
mov qword [rsp + 0x20], 0
call _ZN5boost4json5arrayC1EOS1_NS0_11storage_ptrE
mov rdi, qword [rsp + 0x28]
test dil, 1
jne 0x800d365
mov rdi, qword [rsp + 0x20]
test dil, 1
je 0x800d200
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x800d200
test rdi, rdi
jne 0x800d418
nop dword [rax]
mov rsi, r13
mov rdi, r12
call _ZN5boost4json5array9push_backENS0_8pilferedINS0_5valueEEE
mov rdi, r13
call _ZN5boost4json5valueD1Ev
mov rdi, rbp
call _ZN5boost4json5valueD1Ev
mov rdi, qword [var_18h]
test dil, 1
jne 0x800d390
add rbx, 0x28
cmp qword [rsp], rbx
jne 0x800d160
add rsp, 0x78
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
movsd xmm0, qword [rsp + 0x40]
mov qword [rsp + 0x50], rdi
mov byte [rsp + 0x58], 4
movsd qword [rsp + 0x60], xmm0
jmp 0x800d200
nop dword [rax + rax]
mov rax, qword [rsp + 0x40]
mov qword [rsp + 0x50], rdi
mov byte [rsp + 0x58], 3
mov qword [rsp + 0x60], rax
jmp 0x800d200
nop dword [rax]
mov rax, qword [rsp + 0x40]
mov qword [rsp + 0x50], rdi
mov byte [rsp + 0x58], 2
mov qword [rsp + 0x60], rax
jmp 0x800d200
nop dword [rax]
movzx eax, byte [rsp + 0x40]
mov qword [rsp + 0x50], rdi
mov byte [rsp + 0x58], 1
mov byte [rsp + 0x60], al
jmp 0x800d200
nop dword [rax + rax]
mov qword [rsp + 0x50], rdi
mov byte [rsp + 0x58], 0
jmp 0x800d200
nop
mov rdx, qword [rsp + 8]
mov qword [rsp + 0x28], rdi
mov rsi, rbp
mov rdi, r13
mov qword [rsp + 0x20], 0
call _ZN5boost4json6objectC1EOS1_NS0_11storage_ptrE
mov rdi, qword [rsp + 0x28]
test dil, 1
je 0x800d1dd
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x800d1dd
test rdi, rdi
je 0x800d1dd
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800d1dd
nop dword [rax]
mov rdx, qword [rsp + 8]
mov qword [rsp + 0x28], rdi
mov rsi, rbp
mov rdi, r13
mov qword [rsp + 0x20], 0
call _ZN5boost4json6stringC1EOS1_NS0_11storage_ptrE
mov rdi, qword [rsp + 0x28]
test dil, 1
je 0x800d1dd
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x800d1dd
cmp rax, 1
jne 0x800d1dd
jmp 0x800d326
nop dword [rax + rax]
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x800d22a
test rdi, rdi
je 0x800d22a
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800d22a
nop dword [rax]
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
jmp 0x800d171
nop word [rax + rax]
and rdi, 0xfffffffffffffffc
lock add qword [rdi + 8], 1
movzx eax, byte [var_38h]
mov rdi, qword [var_20h]
and eax, 0x3f
cmp al, 7
ja 0x800d1e2
lea rcx, [0x0800d3f6]
movzx eax, al
movsxd rax, dword [rcx + rax*4]
add rax, rcx
jmp rax
nop word [rax + rax]
mov rsi, rdx
call _ZN5boost4json5array12reserve_implEm
jmp 0x800d122
nop dword [rax]
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800d200
