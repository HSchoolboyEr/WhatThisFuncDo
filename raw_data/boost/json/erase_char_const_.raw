push r12
push rbp
push rbx
mov rbx, rdi
mov rdi, rsi
sub rsp, 0x20
movzx ecx, byte [rbx + 8]
cmp cl, 0x85
je 0x800a480
mov rax, qword [rbx + 0x10]
mov r12, rdi
lea rsi, [rax + 8]
sub r12, rsi
cmp cl, 5
je 0x800a430
movsx rax, byte [rbx + 0x17]
mov edx, 0xe
sub rdx, rax
cmp rdx, r12
jb .text.unlikely
sub rdx, r12
mov ebp, 1
cmove rbp, rdx
add rdx, 1
sub rdx, rbp
je 0x800a3ee
lea rax, [rbp + r12]
add rsi, rax
call memmove
movzx ecx, byte [rbx + 8]
cmp cl, 5
je 0x800a470
movsx rdx, byte [rbx + 0x17]
mov eax, 0xe
sub rax, rdx
sub rax, rbp
cmp cl, 0x85
jne 0x800a438
mov edx, 0xe
sub edx, eax
mov byte [rbx + 0x17], dl
mov byte [rbx + rax + 9], 0
add rsp, 0x20
lea rax, [rbx + 9]
add rax, r12
pop rbx
pop rbp
pop r12
ret
nop dword [rax + rax]
mov edx, dword [rax]
jmp 0x800a3bf
nop dword [rax]
mov rdx, qword [rbx + 0x10]
mov dword [rdx], eax
cmp byte [rbx + 8], 0x85
lea rdx, [rbx + 9]
je 0x800a450
mov rcx, qword [rbx + 0x10]
lea rdx, [rcx + 8]
mov byte [rdx + rax], 0
cmp byte [rbx + 8], 0x85
je 0x800a41b
mov rax, qword [rbx + 0x10]
add rsp, 0x20
pop rbx
pop rbp
add rax, 8
add rax, r12
pop r12
ret
nop
mov rdx, qword [rbx + 0x10]
mov eax, dword [rdx]
sub rax, rbp
jmp 0x800a43c
nop dword [rax + rax]
lea rsi, [rbx + 9]
mov r12, rdi
sub r12, rsi
jmp 0x800a3b2
