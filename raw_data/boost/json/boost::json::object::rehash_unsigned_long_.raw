push r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov rax, qword [rdi + 0x10]
mov r13, qword [rax + 8]
cmp rsi, 0x7ffffffe
ja .text.unlikely
mov eax, dword [rax + 4]
mov edx, 0x7ffffffe
mov r12, rdi
mov rbp, rsi
mov rcx, rax
shr rcx, 1
sub rdx, rcx
cmp rax, rdx
ja 0x8006495
add rax, rcx
cmp rsi, rax
cmovb rbp, rax
mov rax, qword [r12]
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x080064aa]
cmove rdi, rax
lea rax, [rbp + rbp*4]
cmp rbp, 0x12
ja 0x80065f8
lea rsi, [rax*8 + 0x10]
mov rax, qword [rdi]
mov edx, 0x10
call qword [rax + 0x10]
mov dword [rax + 4], ebp
mov rbx, rax
mov rsi, qword [r12 + 0x10]
test r13, r13
cmove r13, rbx
mov eax, dword [rsi]
mov qword [rbx + 8], r13
test eax, eax
jne 0x8006653
mov dword [rbx], eax
mov eax, dword [rsi + 4]
test eax, eax
je 0x8006536
mov rdx, qword [r12]
mov rdi, rdx
and rdi, 0xfffffffffffffffc
test rdx, rdx
lea rdx, [0x0800650e]
cmove rdi, rdx
cmp eax, 0x12
jbe 0x8006637
lea rdx, [rax + rax*4]
mov ecx, 0x10
lea rax, [rax + rdx*2]
lea rdx, [rax*4 + 0x10]
mov rax, qword [rdi]
call qword [rax + 0x18]
mov r11d, dword [rbx + 4]
mov qword [r12 + 0x10], rbx
cmp r11d, 0x12
jbe 0x80065e8
mov edx, dword [rbx]
mov rax, rdx
lea rdx, [rdx + rdx*4]
lea r8, [rbx + rdx*8 + 0x10]
lea r9d, [rax - 1]
test eax, eax
je 0x80065e8
movabs r10, 0xcbf29ce484222325
add r10, qword [rbx + 8]
movabs rdi, 0x100000001b3
nop dword [rax + rax]
mov rdx, qword [r8 - 0x10]
mov esi, dword [r8 - 8]
sub r8, 0x28
mov rax, r10
add rsi, rdx
cmp rsi, rdx
je 0x80065b4
nop word [rax + rax]
movsx rcx, byte [rdx]
add rdx, 1
xor rax, rcx
imul rax, rdi
cmp rsi, rdx
jne 0x80065a0
mov ecx, r11d
xor edx, edx
div rcx
lea rsi, [rcx + rcx*4]
shl rdx, 2
lea rax, [rdx + rsi*8 + 0x10]
add rax, rbx
mov edx, dword [rax]
mov dword [r8 + 0x24], edx
mov dword [rax], r9d
sub r9d, 1
jb 0x80065e8
mov r11d, dword [rbx + 4]
jmp 0x8006580
nop dword [rax]
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax + rax]
lea rax, [rbp + rax*2]
mov edx, 0x10
lea rsi, [rax*4 + 0x10]
mov rax, qword [rdi]
call qword [rax + 0x10]
mov esi, 0xff
mov dword [rax + 4], ebp
mov ebp, ebp
mov rbx, rax
lea rdx, [rbp*4]
add rbp, rdx
lea rdi, [rax + rbp*8 + 0x10]
call memset
jmp 0x80064d6
lea rax, [rax + rax*4]
mov ecx, 0x10
lea rdx, [rax*8 + 0x10]
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x8006536
lea rdx, [rax + rax*4]
add rsi, 0x10
lea rdi, [rbx + 0x10]
shl rdx, 3
call memcpy
mov rsi, qword [r12 + 0x10]
mov eax, dword [rsi]
jmp 0x80064f0
