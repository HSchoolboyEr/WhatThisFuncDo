push r12
mov r12, rsi
push rbp
mov rbp, rdx
push rbx
mov rbx, rdi
sub rsp, 0x10
cmp qword [rdi + 0x28], 0
je 0x8004590
add rbp, r12
cmp qword [rbx + 0x40], 0
mov qword [rsp], r12
mov rdi, rbx
mov qword [var_8h], rbp
jne 0x8004578
mov rax, qword [rbx + 8]
add rdi, qword [rbx + 0x10]
test al, 1
jne 0x8004584
mov rsi, rsp
call rax
cmp qword [rbx + 0x40], 0
jne 0x8004562
mov byte [rbx + 0x7c], 1
mov qword [rbx + 0x28], 0
mov rdx, qword [rsp]
add rsp, 0x10
mov rax, r12
pop rbx
pop rbp
sub rdx, r12
pop r12
ret
nop dword [rax]
mov rax, qword [rbx + 0x18]
add rdi, qword [rbx + 0x20]
test al, 1
je 0x800454a
mov rdx, qword [rdi]
mov rax, qword [rdx + rax - 1]
jmp 0x800454a
nop
movzx eax, byte [0x08004597]
test al, al
je 0x80045b0
lea rax, [0x080045a2]
mov qword [rbx + 0x28], rax
jmp 0x8004528
nop dword [rax + rax]
lea rdi, [0x080045b7]
call __cxa_guard_acquire
test eax, eax
je 0x800459b
lea rdi, [0x080045c7]
mov byte [0x080045ce], 0
mov qword [0x080045d9], 0
call __cxa_guard_release
lea rdx, [0x080045e5]
lea rsi, [0x080045ec]
lea rdi, [0x080045f3]
call __cxa_atexit
jmp 0x800459b
