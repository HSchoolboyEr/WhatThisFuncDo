push r12
mov eax, 1
push rbp
push rbx
mov rbx, rdi
mov dword [rdi + 0x58], 0
mov qword [rdi + 0x60], 0
mov qword [rdi + 0x68], 0
mov r12, qword [rsi]
mov qword [rdi + 0x80], 0
mov word [rdi + 0xa0], ax
mov byte [rdi + 0xa2], 1
test r12b, 1
jne 0x8003af0
mov rbp, qword [rbx + 0x18]
mov rax, qword [rbx + 0x10]
cmp rbp, rax
je 0x8003a9c
cmp byte [rbx + 0x30], 0
jne 0x8003ac8
mov qword [rbx + 0x18], rax
mov rdi, qword [rbx + 0x38]
mov qword [rbx + 0x28], 0
test dil, 1
jne 0x8003b00
mov qword [rbx + 0x38], r12
and r12d, 3
cmp r12, 2
setne byte [rbx + 0x30]
pop rbx
pop rbp
pop r12
ret
nop dword [rax + rax]
sub rbp, 0x18
nop dword [rax]
mov rdi, rbp
sub rbp, 0x18
call _ZN5boost4json5valueD1Ev
mov rax, qword [rbx + 0x10]
lea rdx, [arg_18h]
cmp rax, rdx
jne 0x8003ad0
jmp 0x8003a98
nop dword [rax + rax]
mov rax, r12
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
jmp 0x8003a85
nop
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x8003aae
cmp rax, 1
jne 0x8003aae
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x8003aae
