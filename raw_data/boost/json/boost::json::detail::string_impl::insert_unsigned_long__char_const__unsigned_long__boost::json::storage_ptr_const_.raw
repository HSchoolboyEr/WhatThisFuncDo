push r15
mov r15, r8
push r14
mov r14, rdx
push r13
mov r13, rcx
push r12
mov r12, rdi
push rbp
mov rbp, rsi
push rbx
sub rsp, 0x48
movzx eax, byte [rdi]
cmp al, 5
je 0x800f0b0
movsx rdx, byte [rdi + 0xf]
mov ebx, 0xe
sub rbx, rdx
cmp rsi, rbx
ja .LC175
cmp al, 0x85
je 0x800efa8
mov rax, qword [rdi + 8]
lea r8, [rax + 8]
mov eax, 0xe
mov rdx, rax
sub rdx, rbx
cmp rdx, r13
jb 0x800efc0
mov rax, rbx
lea r15, [rbp + r13]
lea r9, [r8 + rbp]
sub rax, rbp
add r15, r8
lea rdx, [rax + 1]
lea rax, [r8 + rbx]
cmp r14, rax
jae 0x800ef5a
cmp r8, r14
jbe 0x800f128
mov rsi, r9
mov rdi, r15
mov qword [rsp], r9
call memmove
mov r9, qword [rsp]
mov rdx, r13
mov rsi, r14
mov rdi, r9
call memcpy
add rbx, r13
cmp byte [r12], 5
je 0x800f1d0
mov eax, 0xe
sub eax, ebx
mov byte [r12 + 0xf], al
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov eax, 0xe
lea r8, [rdi + 1]
mov rdx, rax
sub rdx, rbx
cmp rdx, r13
jae 0x800ef32
mov edx, 0x7ffffffe
mov rcx, rdx
sub rcx, rbx
cmp rcx, r13
jb .LC175
lea rcx, [r13 + rbx]
cmp rcx, 0x7ffffffe
ja 0x800f287
sub rdx, rax
cmp rax, rdx
ja 0x800f0d0
add rax, rax
cmp rax, rcx
cmovb rax, rcx
mov esi, eax
cmp eax, 0xe
ja 0x800f0d5
mov eax, 0xe
mov byte [var_20h], 0x85
lea rdi, [var_21h]
sub eax, ecx
mov byte [rsp + rsi + 0x21], 0
mov byte [var_2fh], al
mov rsi, r8
mov rdx, rbp
mov qword [rsp], r8
sub rbx, rbp
call memcpy
mov r8, qword [rsp]
cmp byte [var_20h], 0x85
lea rdx, [rbx + 1]
lea rax, [var_21h]
lea rsi, [r8 + rbp]
je 0x800f054
mov rax, qword [var_20h_2]
add rax, 8
lea rdi, [rbp + r13]
add rdi, rax
call memcpy
cmp byte [var_20h], 0x85
lea rdi, [var_21h]
je 0x800f076
mov rax, qword [var_20h_2]
lea rdi, [rax + 8]
add rdi, rbp
mov rdx, r13
mov rsi, r14
call memcpy
mov rsi, r15
mov rdi, r12
call _ZN5boost4json6detail11string_impl7destroyERKNS0_11storage_ptrE
movdqa xmm1, xmmword [var_20h]
movups xmmword [r12], xmm1
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov rax, qword [rdi + 8]
mov ebx, dword [rax]
cmp rsi, rbx
ja .LC175
lea r8, [rax + 8]
mov eax, dword [rax + 4]
jmp 0x800ef23
nop dword [rax + rax]
mov esi, 0x7ffffffe
lea rdi, [var_20h]
mov rdx, r15
mov qword [var_8h], r8
mov qword [rsp], rcx
call method boost::json::detail::string_impl::string_impl(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
movzx eax, byte [var_20h]
mov rcx, qword [rsp]
mov r8, qword [var_8h]
cmp al, 5
jne 0x800f1c0
mov rax, qword [var_20h_2]
mov dword [rax], ecx
movzx eax, byte [var_20h]
cmp al, 0x85
je 0x800f208
mov rax, qword [var_20h_2]
lea rdi, [rax + 8]
jmp 0x800f021
nop dword [rax + rax]
mov rcx, r14
sub rcx, r8
lea r10, [rcx + r13]
cmp r10, rbp
jbe 0x800ef5a
mov rsi, r9
mov rdi, r15
mov qword [var_18h], r8
mov qword [var_10h], r10
mov qword [var_8h], rcx
mov qword [rsp], r9
call memmove
mov rcx, qword [var_8h]
mov r9, qword [rsp]
mov r10, qword [var_10h]
mov r8, qword [var_18h]
cmp rcx, rbp
jae 0x800f1f0
mov rdx, rbp
mov rsi, r14
mov rdi, r9
mov qword [var_10h], r8
sub rdx, rcx
mov qword [rsp], rdx
call memcpy
mov rdx, qword [rsp]
mov r8, qword [var_10h]
mov rsi, r15
mov rcx, qword [var_8h]
add rdx, rbp
lea rdi, [r8 + rdx]
mov rdx, r13
sub rdx, rbp
add rdx, rcx
call memcpy
jmp 0x800ef7b
nop word cs:[rax + rax]
mov edx, 0xe
sub edx, ecx
mov byte [var_2fh], dl
jmp 0x800f10d
mov rax, qword [r12 + 8]
mov dword [rax], ebx
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
lea rsi, [r8 + r10]
mov rdx, r13
mov rdi, r9
call memcpy
jmp 0x800ef7b
nop dword [rax]
lea rdi, [var_21h]
jmp 0x800f021
lea rax, [0x0800f219]
lea rsi, [0x0800f220]
movq xmm2, rax
movq xmm0, rsi
lea rdi, [var_20h]
mov rax, qword [0x0800f236]
punpcklqdq xmm0, xmm2
mov qword [var_30h], rax
movaps xmmword [var_20h], xmm0
call _ZN5boost4json6detail18throw_out_of_rangeERKNS_15source_locationE
add byte [rax], al
add byte [rax], al
lea rax, [0x0800f250]
lea rsi, [0x0800f257]
movq xmm0, rsi
movq xmm3, rax
mov rax, qword [0x0800f268]
lea rsi, [var_20h_2]
punpcklqdq xmm0, xmm3
lea rdi, [0x0800f278]
mov qword [var_30h_2], rax
movaps xmmword [var_20h_2], xmm0
call _ZN5boost4json6detail18throw_length_errorEPKcRKNS_15source_locationE
call method boost::json::detail::string_impl::growth(unsigned long, unsigned long) [clone .part.0]
nop dword [rax]
