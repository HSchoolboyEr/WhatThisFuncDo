push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x40
movdqu xmm1, xmmword [rsi]
mov rax, qword [rdi + 0x40]
mov qword [var_30h], rsi
movaps xmmword [var_20h], xmm1
test rax, rax
jne 0x801a770
mov r13, qword [rdi]
mov rdx, qword [r13 + 0x10]
mov ecx, dword [rdx]
lea rbp, [rdx + 0x10]
lea rcx, [rcx + rcx*4]
lea r14, [rdx + rcx*8 + 0x10]
mov rdx, qword [var_20h]
cmp rdx, qword [var_28h]
jae 0x801a950
lea rax, [rdx + 1]
mov qword [var_20h], rax
mov byte [rdx], 0x7b
cmp r14, rbp
jne 0x801a7ec
mov rax, qword [var_20h]
cmp rax, qword [var_28h]
jae 0x801aa98
lea rdx, [rax + 1]
mov r12d, 1
mov qword [var_20h], rdx
mov byte [rax], 0x7d
mov rax, qword [var_30h]
mov rdx, qword [var_20h]
mov qword [rax], rdx
add rsp, 0x40
mov eax, r12d
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
mov rcx, qword [rdi + 0x48]
lea rdx, [rax - 1]
lea rsi, [rax - 9]
mov qword [rdi + 0x40], rdx
movzx edx, byte [rcx + rax - 1]
mov qword [rdi + 0x40], rsi
mov rbp, qword [rcx + rax - 9]
sub rax, 0x11
mov qword [rdi + 0x40], rax
mov r13, qword [rcx + rax]
sub edx, 0x1d
mov rcx, qword [r13 + 0x10]
mov esi, dword [rcx]
lea rsi, [rsi + rsi*4]
lea r14, [rcx + rsi*8 + 0x10]
cmp dl, 4
ja 0x801a70c
lea rcx, [0x0801a7bc]
movzx edx, dl
movsxd rax, dword [rcx + rdx*4]
add rax, rcx
jmp rax
nop dword [rax + rax]
mov rax, qword [var_20h]
cmp rax, qword [var_28h]
jae 0x801a9b8
lea rdx, [rax + 1]
mov qword [var_20h], rdx
mov byte [rax], 0x2c
mov eax, dword [arg_20h]
movq xmm0, qword [arg_18h]
add rax, qword [arg_18h]
movq xmm2, rax
punpcklqdq xmm0, xmm2
movups xmmword [rbx + 0x50], xmm0
lea rsi, [var_20h]
mov rdi, rbx
call _ZN5boost4json10serializer12write_stringILb0EEEbRNS0_6detail6streamE
mov r12d, eax
test al, al
je 0x801aa28
mov rax, qword [var_20h]
cmp rax, qword [var_28h]
jae 0x801a8d8
lea rdx, [rax + 1]
mov qword [var_20h], rdx
mov byte [rax], 0x3a
mov qword [rbx + 0x28], rbp
lea rsi, [var_20h]
mov rdi, rbx
call _ZN5boost4json10serializer11write_valueILb0EEEbRNS0_6detail6streamE
mov r12d, eax
test al, al
je 0x801a868
add rbp, 0x28
cmp rbp, r14
jne 0x801a7d0
jmp 0x801a731
nop dword [rax + rax]
mov rax, qword [rbx + 0x40]
mov byte [var_dh], 0x1f
lea r14, [rbx + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rbx + 0x38]
jbe 0x801a88b
mov rdi, r14
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r13
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 0x10
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x801a8b5
mov rdi, r14
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
lea rsi, [var_dh]
mov rdi, r14
mov qword [rdx + rax], rbp
add qword [rbx + 0x40], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x801a753
nop dword [rax]
mov rax, qword [rbx + 0x40]
mov byte [var_ch], 0x1e
lea r12, [rbx + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rbx + 0x38]
jbe 0x801a8fb
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r13
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 0x10
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x801a925
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
lea rsi, [var_ch]
mov rdi, r12
mov qword [rdx + rax], rbp
add qword [rbx + 0x40], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
xor r12d, r12d
jmp 0x801a753
nop word [rax + rax]
mov byte [var_ah], 0x1c
lea r12, [rbx + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rbx + 0x38]
jbe 0x801a96f
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r13
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 0x10
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x801a999
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
lea rsi, [var_ah]
mov rdi, r12
mov qword [rdx + rax], rbp
add qword [rbx + 0x40], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x801a93f
nop dword [rax]
mov rax, qword [rbx + 0x40]
mov byte [var_eh], 0x20
lea r12, [rbx + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rbx + 0x38]
jbe 0x801a9db
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r13
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 0x10
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x801aa05
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
lea rsi, [var_eh]
mov rdi, r12
mov qword [rdx + rax], rbp
add qword [rbx + 0x40], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x801a93f
nop dword [rax]
mov rax, qword [rbx + 0x40]
mov byte [var_bh], 0x1d
lea r14, [rbx + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rbx + 0x38]
jbe 0x801aa4b
mov rdi, r14
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r13
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 0x10
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x801aa75
mov rdi, r14
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
lea rsi, [var_bh]
mov rdi, r14
mov qword [rdx + rax], rbp
add qword [rbx + 0x40], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x801a753
nop dword [rax]
mov qword [var_10h], rbp
lea rbp, [rbx + 0x30]
lea rsi, [var_18h]
mov rdi, rbp
mov byte [var_fh], 0x21
mov qword [var_18h], r13
call _ZN5boost4json6detail5stack4pushIPKNS0_6objectEEEvRKT_
lea rsi, [var_10h]
mov rdi, rbp
call _ZN5boost4json6detail5stack4pushIPKNS0_14key_value_pairEEEvRKT_
lea rsi, [var_fh]
mov rdi, rbp
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x801a93f
