push r13
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x18
mov rax, qword [rcx]
mov byte [rdi + 8], 6
mov qword [rcx], 0
mov qword [rdi], rax
test rsi, rsi
jne 0x8008110
lea rax, [0x080080fa]
mov qword [rdi + 0x10], rax
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rbx, rsi
cmp rsi, 0x7ffffffe
ja 0x80081ec
mov rdi, rax
mov r12, rdx
mov edx, 8
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x08008139]
cmove rdi, rax
lea rax, [rsi + rsi*2]
lea rsi, [rax*8 + 8]
mov rax, qword [rdi]
call qword [rax + 0x10]
mov dword [rax + 4], ebx
mov rdx, rax
sub rbx, 1
lea r13, [var_8h_2]
mov qword [arg_10h], rax
mov dword [rax], 0
xor eax, eax
jmp 0x80081a4
nop dword [rax]
lea rax, [rax + rax*2]
mov rsi, r12
lea rdi, [rdx + rax*8 + 8]
mov rdx, r13
call _ZN5boost4json5valueC1ERKS1_NS0_11storage_ptrE
add byte [rax], al
add byte [rax], al
mov rdi, qword [var_8h_2]
test dil, 1
jne 0x80081c8
mov rdx, qword [arg_10h]
mov eax, dword [rdx]
add eax, 1
mov dword [rdx], eax
sub rbx, 1
jb 0x80080fe
mov rcx, qword [rbp]
mov qword [var_8h_2], rcx
test cl, 1
je 0x8008170
and rcx, 0xfffffffffffffffc
lock add qword [rcx + 8], 1
mov rdx, qword [arg_10h]
mov eax, dword [rdx]
jmp 0x8008170
nop dword [rax]
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x800818f
cmp rax, 1
jne 0x800818f
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800818f
call method boost::json::array::table::allocate(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
mov r12, rax
jmp .text.unlikely
mov r12, rax
jmp .text.unlikely
nop
nop word cs:[rax + rax]
nop dword [rax]
