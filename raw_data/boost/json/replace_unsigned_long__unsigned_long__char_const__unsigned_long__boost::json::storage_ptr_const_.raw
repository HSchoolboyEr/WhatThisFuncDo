push r15
mov r10, rcx
mov r15, rdi
push r14
mov r14, r9
push r13
mov r13, rsi
push r12
mov r12, r8
push rbp
push rbx
sub rsp, 0x58
movzx ecx, byte [rdi]
cmp cl, 5
je 0x800f8c0
movsx rax, byte [rdi + 0xf]
mov ebp, 0xe
sub rbp, rax
cmp rsi, rbp
ja .LC193
mov r8, rbp
mov rbx, rdx
mov rax, r12
sub r8, rsi
cmp r8, rdx
cmovbe rbx, r8
cmp rbx, r12
cmovae rax, rbx
cmp cl, 0x85
je 0x800f720
mov rdi, qword [rdi + 8]
lea rcx, [rdi + 8]
cmp rbx, r12
jbe 0x800f72d
lea rax, [rcx + r13]
mov qword [rsp], rax
lea rax, [rcx + rbp]
cmp r10, rax
jae 0x800f850
cmp rcx, r10
ja 0x800f850
cmp r10, qword [rsp]
jne 0x800f640
cmp rbx, r12
je 0x800f8a9
mov r11, r10
lea r14, [r8 + 1]
lea rsi, [r13 + rbx]
sub r11, rcx
lea r8, [r13 + r12]
lea r9, [rcx + rsi]
sub r14, rbx
lea rax, [r11 + r12]
add r8, rcx
cmp rax, r13
jbe 0x800f867
cmp rbx, r12
ja 0x800f970
cmp r11, rsi
ja 0x800f958
sub rsi, r11
mov rdi, r12
cmp rsi, r12
cmova rsi, r12
sub rdi, rsi
mov qword [var_28h], rsi
add r13, rsi
mov qword [var_20h], rdi
add r13, rcx
mov rsi, r9
mov rdi, r8
mov rdx, r14
mov qword [var_10h], rcx
mov qword [var_8h], r11
add rbp, r12
mov qword [var_18h], r10
sub rbp, rbx
call memmove
mov r14, qword [var_28h]
mov r10, qword [var_18h]
mov rdi, qword [rsp]
mov rsi, r10
mov rdx, r14
call memmove
mov r11, qword [var_8h]
mov rsi, r12
mov rdi, r13
sub rsi, rbx
mov rcx, qword [var_10h]
mov rdx, qword [var_20h]
add rsi, r11
add rsi, r14
add rsi, rcx
call memmove
cmp byte [r15], 5
jne 0x800f89e
mov rax, qword [r15 + 8]
mov dword [rax], ebp
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
lea rcx, [rdi + 1]
cmp rbx, r12
ja 0x800f613
sub rax, rbx
mov edx, 0xe
mov rsi, rdx
sub rsi, rbp
cmp rsi, rax
jae 0x800f613
mov esi, 0x7ffffffe
mov rdi, rsi
sub rdi, rbp
cmp rdi, rax
jb .LC193
add rbp, rax
cmp rbp, 0x7ffffffe
ja 0x800fa3c
sub rsi, rdx
cmp rdx, rsi
ja 0x800f900
add rdx, rdx
cmp rdx, rbp
cmovb rdx, rbp
mov esi, edx
cmp edx, 0xe
ja 0x800f905
mov eax, 0xe
mov byte [var_30h], 0x85
lea rdi, [var_31h]
sub eax, ebp
mov byte [rsp + rsi + 0x31], 0
mov byte [var_3fh], al
mov rsi, rcx
mov rdx, r13
mov qword [var_10h], r10
mov qword [var_8h], r8
mov qword [rsp], rcx
call memcpy
mov r8, qword [var_8h]
mov rcx, qword [rsp]
lea rsi, [r13 + rbx]
mov r10, qword [var_10h]
lea rdi, [var_31h]
lea rdx, [r8 + 1]
add rsi, rcx
sub rdx, rbx
cmp byte [var_30h], 0x85
je 0x800f7ee
mov rax, qword [var_30h_2]
lea rdi, [rax + 8]
lea rax, [r13 + r12]
mov qword [rsp], r10
add rdi, rax
call memcpy
cmp byte [var_30h], 0x85
mov r10, qword [rsp]
lea rdi, [var_31h]
je 0x800f818
mov rax, qword [var_30h_2]
lea rdi, [rax + 8]
add rdi, r13
mov rdx, r12
mov rsi, r10
call memcpy
mov rsi, r14
mov rdi, r15
call _ZN5boost4json6detail11string_impl7destroyERKNS0_11storage_ptrE
movdqa xmm1, xmmword [var_30h]
movups xmmword [r15], xmm1
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
lea r14, [r8 + 1]
lea r9, [r13 + rbx]
lea r8, [r13 + r12]
sub r14, rbx
add r9, rcx
add r8, rcx
mov rdx, r14
mov rsi, r9
mov rdi, r8
mov qword [var_8h], r10
call memmove
mov r10, qword [var_8h]
mov rdi, qword [rsp]
mov rdx, r12
mov rsi, r10
call memcpy
add rbp, r12
sub rbp, rbx
cmp byte [r15], 5
je 0x800f709
mov eax, 0xe
sub eax, ebp
mov byte [r15 + 0xf], al
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov rsi, qword [rdi + 8]
mov ebp, dword [rsi]
cmp r13, rbp
ja .LC193
mov r8, rbp
mov rbx, rdx
lea rcx, [rsi + 8]
mov rax, r12
sub r8, r13
cmp rdx, r8
cmova rbx, r8
cmp rbx, r12
cmovae rax, rbx
ja 0x800f613
mov edx, dword [rsi + 4]
sub rax, rbx
jmp 0x800f735
nop
mov esi, 0x7ffffffe
lea rdi, [var_30h]
mov rdx, r14
mov qword [var_10h], r10
mov qword [var_8h], r8
mov qword [rsp], rcx
call method boost::json::detail::string_impl::string_impl(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
movzx eax, byte [var_30h]
mov rcx, qword [rsp]
mov r8, qword [var_8h]
mov r10, qword [var_10h]
cmp al, 5
jne 0x800f9b0
mov rax, qword [var_30h_2]
mov dword [rax], ebp
movzx eax, byte [var_30h]
cmp al, 0x85
je 0x800f9bd
mov rax, qword [var_30h_2]
lea rdi, [rax + 8]
jmp 0x800f7a3
nop dword [rax]
mov qword [var_20h], r12
mov r13, qword [rsp]
mov qword [var_28h], 0
jmp 0x800f69d
nop
mov rdi, qword [rsp]
mov rdx, r12
mov rsi, r10
mov qword [var_10h], r9
mov qword [var_8h], r8
call memmove
mov r9, qword [var_10h]
mov r8, qword [var_8h]
mov rdx, r14
mov rsi, r9
mov rdi, r8
call memmove
jmp 0x800f88e
nop word cs:[rax + rax]
mov edx, 0xe
sub edx, ebp
mov byte [var_3fh], dl
jmp 0x800f943
lea rdi, [var_31h]
jmp 0x800f7a3
lea rax, [0x0800f9ce]
lea rbx, [0x0800f9d5]
movq xmm2, rax
movq xmm0, rbx
lea rdi, [var_30h]
mov rax, qword [0x0800f9eb]
punpcklqdq xmm0, xmm2
mov qword [var_40h], rax
movaps xmmword [var_30h], xmm0
call _ZN5boost4json6detail18throw_out_of_rangeERKNS_15source_locationE
lea rax, [0x0800fa05]
lea rbx, [0x0800fa0c]
movq xmm3, rax
movq xmm0, rbx
mov rax, qword [0x0800fa1d]
lea rsi, [var_30h_2]
punpcklqdq xmm0, xmm3
lea rdi, [0x0800fa2d]
mov qword [var_40h_2], rax
movaps xmmword [var_30h_2], xmm0
call _ZN5boost4json6detail18throw_length_errorEPKcRKNS_15source_locationE
call method boost::json::detail::string_impl::growth(unsigned long, unsigned long) [clone .part.0]
nop
nop word cs:[rax + rax]
nop dword [rax]
