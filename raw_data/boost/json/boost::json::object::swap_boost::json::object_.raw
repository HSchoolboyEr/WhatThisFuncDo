push r14
push r13
push r12
push rbp
mov rbp, rsi
push rbx
mov rbx, rdi
sub rsp, 0x50
mov rsi, qword [rsi]
mov rdi, qword [rdi]
test rsi, rsi
jne 0x80091c8
lea rsi, [0x08009098]
test rdi, rdi
je 0x80091a8
and rdi, 0xfffffffffffffffc
cmp rdi, rsi
je 0x80091a8
mov rax, qword [rdi]
call qword [rax + 0x20]
test al, al
jne 0x80091a8
mov rax, qword [rbp]
mov qword [var_30h], rax
test al, 1
jne 0x80091e8
lea r12, [var_30h]
lea r13, [var_10h]
mov rsi, rbx
mov rdx, r12
mov rdi, r13
call _ZN5boost4json6objectC1EOS1_NS0_11storage_ptrE
mov rdi, qword [var_30h]
test dil, 1
jne 0x8009240
mov rax, qword [rbx]
mov qword [var_8h], rax
test al, 1
jne 0x8009228
lea r14, [var_8h]
mov rsi, rbp
mov rdi, r12
mov rdx, r14
call _ZN5boost4json6objectC1EOS1_NS0_11storage_ptrE
mov rdi, qword [var_8h]
test dil, 1
jne 0x8009200
mov rdi, rbp
lea r14, [0x08009130]
call _ZN5boost4json6objectD1Ev
mov rax, qword [var_10h]
mov byte [arg_8h], 7
mov rdi, rbx
mov qword [var_10h], 0
mov qword [rbp], rax
mov rax, qword [var_20h]
mov qword [var_20h], r14
mov qword [arg_10h], rax
call _ZN5boost4json6objectD1Ev
mov rax, qword [var_30h]
mov byte [rbx + 8], 7
mov rdi, r12
mov qword [var_30h], 0
mov qword [rbx], rax
mov rax, qword [var_40h]
mov qword [var_40h], r14
mov qword [rbx + 0x10], rax
call _ZN5boost4json6objectD1Ev
mov rdi, r13
call _ZN5boost4json6objectD1Ev
add rsp, 0x50
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
mov rdx, qword [rbx + 0x10]
mov rax, qword [arg_10h]
mov qword [arg_10h], rdx
mov qword [rbx + 0x10], rax
add rsp, 0x50
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
and rsi, 0xfffffffffffffffc
test rdi, rdi
jne 0x80090a1
lea rdi, [0x080091dc]
jmp 0x80090a5
nop dword [rax]
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
jmp 0x80090cd
nop word [rax + rax]
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x8009126
test rdi, rdi
je 0x8009126
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x8009126
nop dword [rax]
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
jmp 0x8009104
nop word [rax + rax]
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x80090f4
test rdi, rdi
je 0x80090f4
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x80090f4
