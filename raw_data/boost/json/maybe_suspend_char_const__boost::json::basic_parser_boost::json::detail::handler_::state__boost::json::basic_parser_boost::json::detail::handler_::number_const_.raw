cmp byte [rdi + 0xa0], 0
mov qword [rdi + 0xa8], rsi
mov rax, rdi
je 0x801bb70
sub rsp, 0x18
movdqu xmm0, xmmword [rcx]
movups xmmword [rdi + 0x40], xmm0
mov rcx, qword [rcx + 0x10]
mov qword [rdi + 0x50], rcx
mov rcx, qword [rdi + 0x80]
test rcx, rcx
je 0x801bb78
mov rsi, qword [rax + 0x88]
mov byte [rsi + rcx], dl
add qword [rax + 0x80], 1
add rsp, 0x18
ret
nop word [rax + rax]
ret
nop dword [rax]
mov rsi, qword [rdi + 0xb0]
sub rsi, qword [rdi + 0xc0]
lea rsi, [rsi + rsi*8 + 0xb]
cmp rsi, qword [rdi + 0x78]
jbe 0x801bb53
lea rdi, [rdi + 0x70]
mov dword [var_ch], edx
mov qword [rsp], rax
call .text
mov rax, qword [rsp]
mov edx, dword [var_ch]
mov rcx, qword [rax + 0x80]
jmp 0x801bb53
