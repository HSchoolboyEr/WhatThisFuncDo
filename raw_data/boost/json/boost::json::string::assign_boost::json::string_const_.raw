push r13
push r12
mov r12, rdi
push rbp
sub rsp, 0x10
cmp rdi, rsi
je 0x8007e3d
movzx eax, byte [rsi + 8]
cmp al, 5
je 0x8007ed0
movsx rdx, byte [rsi + 0x17]
mov r13d, 0xe
lea rbp, [rsi + 9]
sub r13, rdx
cmp al, 0x85
je 0x8007d7f
mov rsi, qword [rsi + 0x10]
lea rbp, [rsi + 8]
movzx eax, byte [r12 + 8]
cmp al, 5
je 0x8007e50
cmp r13, 0xe
jbe 0x8007ded
cmp r13, 0x7ffffffe
ja 0x8007f36
mov edx, 0xe
add rdx, rdx
cmp rdx, r13
cmovb rdx, r13
mov esi, edx
cmp edx, 0xe
ja 0x8007e80
mov ecx, 0xe
mov byte [rsp], 0x85
sub ecx, edx
mov byte [arg_fh], cl
mov byte [rsp + rsi + 1], 0
cmp al, 5
je 0x8007e99
cmp al, 0x45
je 0x8007f00
movdqu xmm0, xmmword [rsp]
movzx eax, byte [rsp]
movups xmmword [r12 + 8], xmm0
cmp al, 0x85
je 0x8007ee0
mov rcx, qword [r12 + 0x10]
mov dword [rcx], r13d
cmp byte [r12 + 8], 0x85
lea rax, [r12 + 9]
je 0x8007e13
mov rax, qword [r12 + 0x10]
add rax, 8
mov byte [rax + r13], 0
cmp byte [r12 + 8], 0x85
je 0x8007ef3
mov rax, qword [r12 + 0x10]
lea rdi, [rax + 8]
test r13, r13
je 0x8007e3d
mov rdx, r13
mov rsi, rbp
call memcpy
add rsp, 0x10
mov rax, r12
pop rbp
pop r12
pop r13
ret
nop word [rax + rax]
mov rcx, qword [r12 + 0x10]
mov edx, dword [rcx + 4]
cmp rdx, r13
jae 0x8007dfa
cmp r13, 0x7ffffffe
ja 0x8007f36
mov ecx, 0x7ffffffe
mov esi, 0x7ffffffe
sub rcx, rdx
cmp rdx, rcx
jbe 0x8007da5
mov rdi, rsp
mov rdx, r12
call method boost::json::detail::string_impl::string_impl(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
movzx eax, byte [r12 + 8]
cmp al, 5
jne 0x8007dd6
mov rax, qword [r12]
mov rsi, qword [r12 + 0x10]
mov ecx, 4
mov rdi, rax
mov edx, dword [rsi + 4]
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x08007ebb]
cmove rdi, rax
add rdx, 9
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x8007dde
nop
mov rsi, qword [rsi + 0x10]
mov r13d, dword [rsi]
jmp 0x8007d7b
nop dword [rax]
mov eax, 0xe
sub eax, r13d
mov byte [r12 + 0x17], al
mov byte [r12 + r13 + 9], 0
lea rdi, [r12 + 9]
jmp 0x8007e2d
nop dword [rax]
mov rax, qword [r12]
mov edx, dword [r12 + 0xc]
mov ecx, 0x10
mov rsi, qword [r12 + 0x10]
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x08007f24]
cmove rdi, rax
add edx, 1
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x8007dde
call method boost::json::detail::string_impl::growth(unsigned long, unsigned long) [clone .part.0]
nop
nop dword [rax]
