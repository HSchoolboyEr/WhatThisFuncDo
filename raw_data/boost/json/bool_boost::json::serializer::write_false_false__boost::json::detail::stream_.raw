push r13
mov r13, rsi
push r12
mov r12, rdi
push rbp
push rbx
sub rsp, 0x18
mov rdx, qword [rdi + 0x40]
mov rbx, qword [rsi]
mov rax, qword [rsi + 8]
test rdx, rdx
je 0x801a130
lea rcx, [rdx - 1]
mov qword [rdi + 0x40], rcx
mov rcx, qword [rdi + 0x48]
movzx edx, byte [rcx + rdx - 1]
cmp dl, 0xb
je 0x801a1a0
ja 0x801a198
cmp dl, 9
je 0x801a1a8
cmp dl, 0xa
je 0x801a151
nop word [rax + rax]
cmp rbx, rax
jae 0x801a250
mov byte [rbx], 0x66
lea rbp, [rbx + 1]
cmp rbp, rax
jae 0x801a230
mov byte [rbp], 0x61
lea rbx, [arg_1h]
cmp rbx, rax
jae 0x801a210
mov byte [rbx], 0x6c
lea rbp, [rbx + 1]
cmp rbp, rax
jae 0x801a1f8
mov byte [rbp], 0x73
lea rbx, [arg_1h]
cmp rbx, rax
jae 0x801a1b0
lea rbp, [rbx + 1]
mov byte [rbx], 0x65
mov eax, 1
mov qword [r13], rbp
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
nop word [rax + rax]
cmp dl, 0xc
je 0x801a172
jmp 0x801a130
nop
mov rbp, rbx
jmp 0x801a161
nop dword [rax]
mov rbp, rbx
jmp 0x801a140
nop dword [rax]
mov rax, qword [r12 + 0x40]
lea rsi, [rax + 1]
cmp rsi, qword [r12 + 0x38]
jbe 0x801a1cf
lea rdi, [r12 + 0x30]
call .text
mov rax, qword [r12 + 0x40]
mov rdx, qword [r12 + 0x48]
mov byte [rdx + rax], 0xc
add qword [r12 + 0x40], 1
mov rbp, rbx
xor eax, eax
mov qword [r13], rbp
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
nop word [rax + rax]
lea rsi, [var_fh]
lea rdi, [r12 + 0x30]
mov byte [var_fh], 0xb
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
xor eax, eax
jmp 0x801a1e3
lea rsi, [var_eh]
lea rdi, [r12 + 0x30]
mov byte [var_eh], 0xa
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x801a1de
nop word cs:[rax + rax]
lea rsi, [var_dh]
lea rdi, [r12 + 0x30]
mov byte [var_dh], 9
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
xor eax, eax
jmp 0x801a1e3
nop dword [rax + rax]
lea rsi, [var_ch]
lea rdi, [r12 + 0x30]
mov byte [var_ch], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x801a1de
