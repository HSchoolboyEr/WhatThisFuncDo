push r13
push r12
mov r12, rsi
push rbp
push rbx
mov rbx, rdi
sub rsp, 8
mov rax, qword [rdi + 0x10]
lea r13, [rax + 1]
cmp r13, qword [rdi + 8]
jbe 0x80185d0
mov rax, qword [rdi]
mov rsi, r13
mov edx, 0x10
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x0801855e]
cmove rdi, rax
mov rax, qword [rdi]
call qword [rax + 0x10]
mov rsi, qword [rbx + 0x18]
mov rbp, rax
test rsi, rsi
je 0x80185a4
mov rdx, qword [rbx + 0x10]
test rdx, rdx
jne 0x80185e0
mov rax, qword [rbx]
mov rdx, qword [rbx + 8]
mov ecx, 0x10
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x0801859a]
cmove rdi, rax
mov rax, qword [rdi]
call qword [rax + 0x18]
mov qword [rbx + 0x18], rbp
mov rax, qword [rbx + 0x10]
mov qword [rbx + 8], r13
movzx edx, byte [r12]
mov byte [rbp + rax], dl
add qword [rbx + 0x10], 1
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rbp, qword [rdi + 0x18]
jmp 0x80185b0
nop word cs:[rax + rax]
mov rdi, rax
call memcpy
mov rsi, qword [rbx + 0x18]
jmp 0x801857d
