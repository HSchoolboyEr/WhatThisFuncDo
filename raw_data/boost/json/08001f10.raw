push r13
lea rax, [0x08001f19]
mov r13, rdi
push r12
push rbp
lea rbp, [rdi + 8]
push rbx
sub rsp, 8
mov rsi, qword [rdi + 0x28]
mov qword [rdi], rax
cmp rsi, rbp
je 0x8001f84
lea r12, [0x08001f3b]
jmp 0x8001f5f
nop dword [rax]
mov rax, qword [r12]
mov rdx, qword [rsi + 0x10]
mov ecx, 0x10
lea rdi, [0x08001f54]
call qword [rax + 0x18]
cmp rbx, rbp
je 0x8001f84
mov rsi, rbx
mov rdi, qword [r13 + 0x38]
mov rbx, qword [rsi + 0x18]
test rdi, rdi
je 0x8001f40
and rdi, 0xfffffffffffffffc
mov rdx, qword [rsi + 0x10]
mov ecx, 0x10
mov rax, qword [rdi]
call qword [rax + 0x18]
cmp rbx, rbp
jne 0x8001f5c
mov rdx, qword [r13 + 0x18]
mov rax, qword [r13 + 0x10]
mov qword [r13 + 0x28], rbp
mov rdi, qword [r13 + 0x38]
sub rax, rdx
mov qword [r13 + 0x10], rdx
add qword [r13 + 8], rax
test dil, 1
jne 0x8001fb0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x8001fa5
cmp rax, 1
jne 0x8001fa5
mov rax, qword [rdi]
mov rax, qword [rax + 8]
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
jmp rax
