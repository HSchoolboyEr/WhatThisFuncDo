push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x10
mov rax, qword [rdx]
mov qword [rdx], 0
mov rdx, qword [rsi + 0x10]
mov byte [rdi + 8], 6
mov qword [rdi], rax
mov r12d, dword [rdx]
test r12d, r12d
jne 0x8008258
lea rax, [0x08008243]
mov qword [rdi + 0x10], rax
add rsp, 0x10
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
mov edx, r12d
cmp r12d, 0x7ffffffe
ja 0x8008334
mov rdi, rax
mov rbx, rsi
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x0800827c]
cmove rdi, rax
lea rax, [rdx + rdx*2]
mov edx, 8
lea rsi, [rax*8 + 8]
mov rax, qword [rdi]
call qword [rax + 0x10]
mov rdx, qword [rbx + 0x10]
mov dword [rax + 4], r12d
lea rdi, [rax + 8]
lea r12, [var_8h_2]
mov qword [var_10h], rax
lea rbx, [rdx + 8]
mov dword [rax], 0
mov r13d, dword [rdx]
jmp 0x80082ee
nop dword [rax + rax]
mov rdx, r12
lea r14, [rdi + 0x18]
call _ZN5boost4json5valueC1ERKS1_NS0_11storage_ptrE
mov rdi, qword [var_8h_2]
test dil, 1
jne 0x8008310
mov rdx, qword [var_10h]
mov eax, dword [rdx]
add eax, 1
mov dword [rdx], eax
cmp eax, r13d
jae 0x8008247
mov rdi, r14
mov rax, qword [rbp]
mov rsi, rbx
add rbx, 0x18
mov qword [var_8h_2], rax
test al, 1
je 0x80082c0
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
jmp 0x80082c0
nop
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x80082d7
cmp rax, 1
jne 0x80082d7
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x80082d7
call method boost::json::array::table::allocate(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
mov r12, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
nop
nop word [rax + rax]
