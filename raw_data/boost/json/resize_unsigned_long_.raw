push r13
lea rcx, [rsi + rsi*2]
mov r13, rsi
push r12
push rbp
mov rbp, rdi
push rbx
lea rbx, [rcx*8 + 8]
sub rsp, 8
mov rdx, qword [rdi + 0x10]
mov eax, dword [rdx]
cmp rax, rsi
jae 0x8009d50
mov ecx, dword [rdx + 4]
cmp rsi, rcx
ja _ZN5boost4json5array12reserve_implEm
lea rax, [rax + rax*2]
lea rcx, [rdx + rbx]
lea rax, [rdx + rax*8 + 8]
cmp rcx, rax
je 0x8009d06
nop dword [rax]
mov rdx, qword [rbp]
test dl, 1
jne 0x8009d18
add rax, 0x18
mov qword [rax - 0x18], rdx
mov byte [rax - 0x10], 0
cmp rax, rcx
jne 0x8009ce8
mov rdx, qword [arg_10h]
mov dword [rdx], r13d
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rsi, rdx
and rsi, 0xfffffffffffffffc
lock add qword [rsi + 8], 1
add rax, 0x18
mov qword [rax - 0x18], rdx
mov byte [rax - 0x10], 0
cmp rcx, rax
jne 0x8009ce8
jmp 0x8009d02
nop dword [rax + rax]
call _ZN5boost4json5array12reserve_implEm
mov rdx, qword [arg_10h]
mov eax, dword [rdx]
jmp 0x8009cd3
nop dword [rax]
lea rax, [rax + rax*2]
add rbx, rdx
lea rcx, [rdx + rax*8 + 8]
mov rax, qword [rdi]
and eax, 3
cmp rax, 2
je 0x8009d06
lea r12, [rcx - 0x18]
cmp rcx, rbx
je 0x8009d06
nop dword [rax]
mov rdi, r12
sub r12, 0x18
call _ZN5boost4json5valueD1Ev
lea rax, [r12 + 0x18]
cmp rbx, rax
jne 0x8009d78
jmp 0x8009d02
