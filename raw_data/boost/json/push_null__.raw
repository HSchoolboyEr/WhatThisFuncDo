push r14
push r13
push r12
push rbp
push rbx
mov rax, qword [rdi + 0x18]
mov rbx, rdi
mov rdx, qword [rdi + 0x20]
cmp rax, rdx
jae 0x8005c40
mov rcx, qword [rbx + 0x38]
mov rdx, rax
test cl, 1
jne 0x8005d1d
add rdx, 0x18
mov qword [rax], rcx
mov byte [rax + 8], 0
mov qword [rbx + 0x18], rdx
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
movabs rax, 0xaaaaaaaaaaaaaaab
sub rdx, qword [rdi + 0x10]
mov r12, rdx
sar rdx, 3
imul rdx, rax
add rdx, 1
cmp rdx, 0x10
jbe 0x8005d38
mov eax, 0x10
nop dword [rax]
add rax, rax
cmp rdx, rax
ja 0x8005c70
lea rbp, [rax + rax*2]
shl rbp, 3
mov rax, qword [rbx]
lea r14, [0x08005c8a]
mov rsi, rbp
mov edx, 0x10
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
cmove rdi, r14
mov rax, qword [rdi]
call qword [rax + 0x10]
mov rsi, qword [rbx + 0x10]
mov r13, rax
test rsi, rsi
je 0x8005cf4
mov rdx, qword [rbx + 0x18]
mov rdi, rax
sub rdx, rsi
call memcpy
mov r8, qword [rbx + 0x10]
mov rsi, qword [rbx + 8]
cmp r8, rsi
je 0x8005cf4
mov rax, qword [rbx]
mov rsi, r8
mov ecx, 0x10
mov rdx, r12
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
cmove rdi, r14
mov rax, qword [rdi]
call qword [rax + 0x18]
mov rsi, qword [rbx + 0x10]
mov rax, qword [rbx + 0x18]
mov rcx, qword [rbx + 0x38]
add rbp, r13
mov qword [rbx + 0x10], r13
mov qword [rbx + 0x20], rbp
sub rax, rsi
add rax, r13
mov qword [rbx + 0x18], rax
mov rdx, rax
test cl, 1
je 0x8005c28
mov rdx, rcx
and rdx, 0xfffffffffffffffc
lock add qword [rdx + 8], 1
mov rdx, qword [rbx + 0x18]
jmp 0x8005c28
nop dword [rax + rax]
mov ebp, 0x180
jmp 0x8005c80
