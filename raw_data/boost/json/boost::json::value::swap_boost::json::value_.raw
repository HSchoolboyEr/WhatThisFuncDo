push r14
push r13
push r12
push rbp
mov rbp, rsi
push rbx
mov rbx, rdi
sub rsp, 0x50
mov rsi, qword [rsi]
mov rdi, qword [rdi]
test rsi, rsi
jne 0x800c318
lea rsi, [0x0800c1e8]
test rdi, rdi
je 0x800c2e8
and rdi, 0xfffffffffffffffc
cmp rdi, rsi
je 0x800c2e8
mov rax, qword [rdi]
call qword [rax + 0x20]
test al, al
jne 0x800c2e8
mov rax, qword [rbp]
mov qword [var_30h], rax
test al, 1
jne 0x800c338
lea r12, [var_30h]
lea r13, [var_10h]
mov rsi, rbx
mov rdx, r12
mov rdi, r13
call _ZN5boost4json5valueC1EOS1_NS0_11storage_ptrE
mov rdi, qword [var_30h]
test dil, 1
jne 0x800c390
mov rax, qword [rbx]
mov qword [var_8h], rax
test al, 1
jne 0x800c380
lea r14, [var_8h]
mov rsi, rbp
mov rdi, r12
mov rdx, r14
call _ZN5boost4json5valueC1EOS1_NS0_11storage_ptrE
mov rdi, qword [var_8h]
test dil, 1
jne 0x800c350
mov rdi, rbp
call _ZN5boost4json5valueD1Ev
mov rax, qword [var_20h]
movdqu xmm2, xmmword [var_10h]
mov rdi, rbx
mov qword [var_10h], 0
mov qword [arg_10h], rax
movups xmmword [rbp], xmm2
mov byte [var_18h], 0
call _ZN5boost4json5valueD1Ev
mov rax, qword [var_40h]
movdqu xmm3, xmmword [var_30h]
mov rdi, r12
mov qword [var_30h], 0
mov qword [rbx + 0x10], rax
movups xmmword [rbx], xmm3
mov byte [var_38h], 0
call _ZN5boost4json5valueD1Ev
mov rdi, r13
call _ZN5boost4json5valueD1Ev
add rsp, 0x50
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
movdqu xmm1, xmmword [rbp]
movdqu xmm0, xmmword [rbx]
mov rax, qword [rbx + 0x10]
movups xmmword [rbx], xmm1
mov rdx, qword [arg_10h]
mov qword [rbx + 0x10], rdx
mov qword [arg_10h], rax
movups xmmword [rbp], xmm0
add rsp, 0x50
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
and rsi, 0xfffffffffffffffc
test rdi, rdi
jne 0x800c1f1
lea rdi, [0x0800c32c]
jmp 0x800c1f5
nop dword [rax]
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
jmp 0x800c21d
nop word [rax + rax]
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je _ZN5boost4json5valueD1Ev
cmp rax, 1
jne _ZN5boost4json5valueD1Ev
mov rax, qword [rdi]
call qword [rax + 8]
jmp _ZN5boost4json5valueD1Ev
nop
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
jmp 0x800c254
nop
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x800c244
cmp rax, 1
jne 0x800c244
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800c244
