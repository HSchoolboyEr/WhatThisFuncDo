push r13
push r12
mov r12, rdi
push rbp
mov rbp, rsi
push rbx
sub rsp, 8
mov rsi, qword [rsi]
mov rdi, qword [rdi]
test rsi, rsi
jne 0x800ba98
lea rsi, [0x0800b976]
test rdi, rdi
je 0x800ba00
and rdi, 0xfffffffffffffffc
cmp rdi, rsi
je 0x800ba60
mov rax, qword [rdi]
call qword [rax + 0x20]
test al, al
jne 0x800ba60
cmp rbp, r12
je 0x800b9ec
movzx eax, byte [arg_8h]
cmp al, 5
je 0x800baf0
movsx rdx, byte [arg_17h]
mov r13d, 0xe
sub r13, rdx
cmp al, 0x85
je 0x800bb00
mov rbx, qword [arg_10h]
lea rbp, [rbx + 8]
lea rdi, [r12 + 8]
mov rdx, r12
mov rsi, r13
call _ZN5boost4json6detail11string_impl6assignEmRKNS0_11storage_ptrE
mov rdi, rax
test r13, r13
je 0x800b9ec
mov rdx, r13
mov rsi, rbp
call memcpy
add rsp, 8
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
ret
nop word [rax + rax]
movzx eax, byte [r12 + 8]
cmp al, 5
je _ZN5boost4json6detail16default_resource9instance_E
cmp al, 0x45
jne 0x800ba30
mov eax, dword [r12 + 0xc]
mov r8, qword [r12 + 0x10]
mov rdi, rsi
lea edx, [rax + 1]
mov rax, qword [rdi]
mov ecx, 0x10
mov rsi, r8
call qword [rax + 0x18]
movdqu xmm0, xmmword [arg_8h]
mov eax, 0x85
movups xmmword [r12 + 8], xmm0
mov word [arg_8h], ax
mov rax, r12
mov byte [arg_17h], 0xe
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop word cs:[rax + rax]
movzx eax, byte [r12 + 8]
cmp al, 5
je 0x800bab8
cmp al, 0x45
jne 0x800ba30
mov rdx, qword [r12]
lea rdi, [0x0800ba79]
mov eax, dword [r12 + 0xc]
mov r8, qword [r12 + 0x10]
mov rsi, rdx
and rsi, 0xfffffffffffffffc
test rdx, rdx
cmovne rdi, rsi
jmp 0x800ba1f
nop dword [rax + rax]
and rsi, 0xfffffffffffffffc
test rdi, rdi
jne 0x800b97f
lea rdi, [0x0800baac]
jmp 0x800b983
nop dword [rax]
mov rax, qword [r12]
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
jne 0x800bacf
lea rdi, [0x0800bacf]
mov rsi, qword [r12 + 0x10]
mov rax, qword [rdi]
mov ecx, 4
mov edx, dword [rsi + 4]
add rdx, 9
call qword [rax + 0x18]
jmp 0x800ba30
nop dword [rax + rax]
mov rbx, qword [arg_10h]
mov r13d, dword [rbx]
jmp 0x800b9c5
nop dword [rax]
add rbp, 9
jmp 0x800b9c9
