mov rcx, qword [rdi + 0x10]
mov rax, rdx
mov r9, rdi
mov edx, dword [rcx]
mov edi, dword [rcx + 4]
lea rdx, [rdx + rdx*4]
lea r8, [rcx + rdx*8 + 0x10]
cmp edi, 0x12
jbe 0x80039f8
xor edx, edx
movdqu xmm0, xmmword [rsi]
lea r10, [rdi + rdi*4]
div rdi
movups xmmword [r8], xmm0
lea rdi, [0x080039a5]
shl rdx, 2
lea rax, [rdx + r10*8 + 0x10]
add rcx, rax
mov rax, qword [rsi + 0x10]
mov qword [r8 + 0x10], rax
mov rax, qword [rsi + 0x18]
mov qword [rsi], 0
mov rdx, qword [r9 + 0x10]
mov byte [rsi + 8], 0
mov qword [r8 + 0x18], rax
mov eax, dword [rsi + 0x20]
mov dword [rsi + 0x20], 0
mov dword [r8 + 0x20], eax
mov eax, dword [rcx]
mov qword [rsi + 0x18], rdi
mov dword [r8 + 0x24], eax
mov eax, dword [rdx]
mov dword [rcx], eax
add eax, 1
mov dword [rdx], eax
mov rax, r8
ret
nop dword [rax]
movdqu xmm1, xmmword [rsi]
lea rcx, [0x08003a03]
movups xmmword [r8], xmm1
mov rax, qword [rsi + 0x10]
mov qword [r8 + 0x10], rax
mov rax, qword [rsi + 0x18]
mov qword [rsi], 0
mov byte [rsi + 8], 0
mov qword [r8 + 0x18], rax
mov eax, dword [rsi + 0x20]
mov qword [rsi + 0x18], rcx
mov dword [r8 + 0x20], eax
mov rax, qword [r9 + 0x10]
mov dword [rsi + 0x20], 0
add dword [rax], 1
mov rax, r8
ret
