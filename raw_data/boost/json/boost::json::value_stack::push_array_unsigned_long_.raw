push rbp
mov rbp, rdi
push rbx
mov rbx, rsi
sub rsp, 0x48
mov rax, qword [rdi + 0x18]
test rsi, rsi
je 0x8006160
lea rdx, [rbx + rbx*2]
mov qword [arg_8h], rbx
shl rdx, 3
sub rax, rdx
mov qword [arg_18h], rax
mov qword [rsp], rax
lea rax, [arg_38h]
mov qword [arg_10h], rax
mov rax, qword [arg_38h]
mov qword [arg_20h], rax
test al, 1
jne 0x8006130
mov byte [arg_28h], 6
test rbx, rbx
jne 0x80060d0
lea rax, [0x0800609c]
mov qword [arg_30h], rax
mov rax, qword [arg_18h]
movdqu xmm0, xmmword [arg_20h]
mov rdi, rsp
movups xmmword [rax], xmm0
mov rdx, qword [arg_30h]
mov qword [rax + 0x10], rdx
add qword [arg_18h], 0x18
call _ZN5boost4json6detail15unchecked_arrayD1Ev
add byte [rax], al
add byte [rax], al
add rsp, 0x48
pop rbx
pop rbp
ret
nop dword [rax + rax]
cmp rbx, 0x7ffffffe
ja 0x8006178
mov rax, qword [arg_20h]
mov edx, 8
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x080060f8]
cmove rdi, rax
lea rax, [rbx + rbx*2]
lea rsi, [rax*8 + 8]
mov rax, qword [rdi]
call qword [rax + 0x10]
mov rdx, qword [arg_8h]
mov dword [rax + 4], ebx
mov qword [arg_30h], rax
mov dword [rax], edx
test rdx, rdx
jne 0x8006148
mov qword [rsp], 0
jmp 0x80060a1
nop
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
mov rbx, qword [arg_8h]
jmp 0x800608b
nop dword [rax]
mov rsi, qword [rsp]
lea rdx, [rdx + rdx*2]
lea rdi, [rax + 8]
shl rdx, 3
call memcpy
jmp 0x8006122
nop
cmp qword [rdi + 0x20], rax
ja 0x8006059
call _ZN5boost4json11value_stack5stack8grow_oneEv
mov rax, qword [arg_18h]
jmp 0x8006059
call method boost::json::array::table::allocate(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
mov rbp, rax
jmp .text.unlikely
nop
nop word cs:[rax + rax]
