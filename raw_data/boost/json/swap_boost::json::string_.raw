push r13
push r12
push rbp
mov rbp, rsi
push rbx
mov rbx, rdi
sub rsp, 0x58
mov rsi, qword [rsi]
mov rdi, qword [rdi]
test rsi, rsi
jne 0x800bcf8
lea rsi, [0x0800bb36]
test rdi, rdi
je 0x800bcd8
and rdi, 0xfffffffffffffffc
cmp rdi, rsi
je 0x800bcd8
mov rax, qword [rdi]
call qword [rax + 0x20]
test al, al
jne 0x800bcd8
mov rax, qword [rbp]
mov qword [var_30h], rax
test al, 1
jne 0x800bdb8
lea r12, [var_10h]
mov qword [var_10h], rax
mov rsi, rbx
movabs rax, 0xe00000000000000
mov rdi, r12
mov qword [var_20h], rax
mov qword [var_30h], 0
mov qword [var_18h], 0x85
call _ZN5boost4json6string6assignEOS1_
add byte [rax], al
add byte [rax], al
mov rdi, qword [var_30h]
test dil, 1
jne 0x800bd90
mov rax, qword [rbx]
mov qword [var_8h], rax
test al, 1
jne 0x800bd78
lea r13, [var_30h]
mov qword [var_30h], rax
mov rsi, rbp
movabs rax, 0xe00000000000000
mov rdi, r13
mov qword [var_40h], rax
mov qword [var_8h], 0
mov qword [var_38h], 0x85
call _ZN5boost4json6string6assignEOS1_
mov rdi, qword [var_8h]
test dil, 1
jne 0x800bd50
mov rsi, rbx
lea rdi, [rbx + 8]
call _ZN5boost4json6detail11string_impl7destroyERKNS0_11storage_ptrE
mov rdi, rbx
call _ZNK5boost4json11storage_ptr7releaseEv
mov rax, qword [var_30h]
mov rsi, rbp
lea rdi, [arg_8h]
mov qword [var_30h], 0
movdqu xmm2, xmmword [var_38h]
mov qword [rbx], rax
movups xmmword [rbx + 8], xmm2
movabs rbx, 0xe00000000000000
mov qword [var_38h], 0x85
mov qword [var_40h], rbx
call _ZN5boost4json6detail11string_impl7destroyERKNS0_11storage_ptrE
mov rdi, rbp
call _ZNK5boost4json11storage_ptr7releaseEv
mov rax, qword [var_10h]
lea rdi, [var_38h]
mov rsi, r13
mov qword [var_10h], 0
movdqu xmm3, xmmword [var_18h]
mov qword [rbp], rax
movups xmmword [arg_8h], xmm3
mov qword [var_18h], 0x85
mov qword [var_20h], rbx
call _ZN5boost4json6detail11string_impl7destroyERKNS0_11storage_ptrE
mov rdi, qword [var_30h]
test dil, 1
jne 0x800bd18
lea rdi, [var_18h]
mov rsi, r12
call _ZN5boost4json6detail11string_impl7destroyERKNS0_11storage_ptrE
mov rdi, qword [var_10h]
test dil, 1
je 0x800bcea
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x800bcea
test rdi, rdi
je 0x800bcea
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800bcea
nop dword [rax + rax]
movdqu xmm0, xmmword [rbx + 8]
movdqu xmm1, xmmword [arg_8h]
movups xmmword [rbx + 8], xmm1
movups xmmword [arg_8h], xmm0
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
and rsi, 0xfffffffffffffffc
test rdi, rdi
jne 0x800bb3f
lea rdi, [0x0800bd0c]
jmp 0x800bb43
nop dword [rax]
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x800bca2
cmp rax, 1
jne 0x800bca2
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800bca2
nop word [rax + rax]
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x800bc05
test rdi, rdi
je 0x800bc05
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800bc05
nop dword [rax]
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
mov rax, qword [var_8h]
jmp 0x800bbc0
nop dword [rax]
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x800bbb0
test rdi, rdi
je 0x800bbb0
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800bbb0
nop dword [rax]
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
mov rax, qword [var_30h]
jmp 0x800bb6b
