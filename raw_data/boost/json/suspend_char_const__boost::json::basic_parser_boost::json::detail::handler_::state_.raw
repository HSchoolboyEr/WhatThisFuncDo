push rbx
mov ebx, edx
mov rax, rdi
sub rsp, 0x10
mov rdx, qword [rdi + 0x80]
mov qword [rdi + 0xa8], rsi
test rdx, rdx
je 0x801af88
mov rcx, qword [rax + 0x88]
mov byte [rcx + rdx], bl
add qword [rax + 0x80], 1
add rsp, 0x10
pop rbx
ret
nop dword [rax]
mov rcx, qword [rdi + 0xb0]
sub rcx, qword [rdi + 0xc0]
lea rsi, [rcx + rcx*8 + 0xb]
cmp rsi, qword [rdi + 0x78]
jbe 0x801af6d
lea rdi, [rdi + 0x70]
mov qword [var_8h], rax
call .text
mov rax, qword [var_8h]
mov rdx, qword [rax + 0x80]
jmp 0x801af6d
