push r13
mov r13, rdx
push r12
mov r12, rdi
push rbp
mov rbp, rsi
sub rsp, 0x10
movzx eax, byte [rdi + 8]
cmp al, 5
je 0x8006fe8
cmp rdx, 0xe
jbe 0x8006f6f
cmp rdx, 0x7ffffffe
ja 0x8007061
mov edx, 0xe
add rdx, rdx
cmp rdx, r13
cmovb rdx, r13
mov esi, edx
cmp edx, 0xe
ja 0x8007013
mov ecx, 0xe
mov byte [rsp], 0x85
sub ecx, edx
mov byte [arg_fh], cl
mov byte [rsp + rsi + 1], 0
cmp al, 5
je 0x800702c
cmp al, 0x45
jne 0x8006f60
mov rax, qword [r12]
mov edx, dword [r12 + 0xc]
mov ecx, 0x10
mov rsi, qword [r12 + 0x10]
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x08006f53]
cmove rdi, rax
add edx, 1
mov rax, qword [rdi]
call qword [rax + 0x18]
movdqu xmm0, xmmword [rsp]
movzx eax, byte [rsp]
movups xmmword [r12 + 8], xmm0
cmp al, 0x85
je 0x8006fc8
mov rcx, qword [r12 + 0x10]
mov dword [rcx], r13d
cmp byte [r12 + 8], 0x85
lea rax, [r12 + 9]
je 0x8006f91
mov rax, qword [r12 + 0x10]
add rax, 8
mov byte [rax + r13], 0
cmp byte [r12 + 8], 0x85
je 0x8006fdb
mov rax, qword [r12 + 0x10]
lea rdi, [rax + 8]
test r13, r13
je 0x8006fb7
mov rdx, r13
mov rsi, rbp
call memcpy
add rsp, 0x10
mov rax, r12
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov eax, 0xe
sub eax, r13d
mov byte [r12 + 0x17], al
mov byte [r12 + r13 + 9], 0
lea rdi, [r12 + 9]
jmp 0x8006fa7
nop word [rax + rax]
mov rcx, qword [rdi + 0x10]
mov edx, dword [rcx + 4]
cmp r13, rdx
jbe 0x8006f78
cmp r13, 0x7ffffffe
ja 0x8007061
mov ecx, 0x7ffffffe
mov esi, 0x7ffffffe
sub rcx, rdx
cmp rdx, rcx
jbe 0x8006efa
mov rdi, rsp
mov rdx, r12
call method boost::json::detail::string_impl::string_impl(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
movzx eax, byte [r12 + 8]
cmp al, 5
jne 0x8006f2b
mov rax, qword [r12]
mov rsi, qword [r12 + 0x10]
mov ecx, 4
mov rdi, rax
mov edx, dword [rsi + 4]
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x0800704e]
cmove rdi, rax
add rdx, 9
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x8006f60
call method boost::json::detail::string_impl::growth(unsigned long, unsigned long) [clone .part.0]
nop word cs:[rax + rax]
