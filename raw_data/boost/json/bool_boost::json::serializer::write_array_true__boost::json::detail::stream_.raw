push r15
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x38
mov r15, qword [rdi]
movdqu xmm0, xmmword [rsi]
mov qword [var_20h], rsi
mov rdx, qword [rsi]
mov rax, qword [r15 + 0x10]
movups xmmword [var_10h], xmm0
mov ecx, dword [rax]
lea rbp, [rax + 8]
lea rcx, [rcx + rcx*2]
lea r13, [rax + rcx*8 + 8]
cmp qword [var_18h], rdx
jbe 0x8019e70
lea rax, [rdx + 1]
mov qword [var_10h], rax
mov byte [rdx], 0x5b
cmp r13, rbp
je 0x8019da0
mov qword [rbx + 0x28], rbp
lea r14, [var_10h]
mov rdi, rbx
mov rsi, r14
call _ZN5boost4json10serializer11write_valueILb1EEEbRNS0_6detail6streamE
mov r12d, eax
test al, al
je 0x8019d35
add rbp, 0x18
mov rax, qword [var_10h]
mov rdx, qword [var_18h]
cmp rbp, r13
je 0x8019daa
cmp rdx, rax
jbe 0x8019de8
lea rdx, [rax + 1]
mov rsi, r14
mov rdi, rbx
mov qword [var_10h], rdx
mov byte [rax], 0x2c
mov qword [rbx + 0x28], rbp
call _ZN5boost4json10serializer11write_valueILb1EEEbRNS0_6detail6streamE
mov r12d, eax
test al, al
jne 0x8019cf3
mov rax, qword [rbx + 0x40]
mov byte [var_eh], 0x19
lea r13, [rbx + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rbx + 0x38]
jbe 0x8019d58
mov rdi, r13
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r15
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 0x10
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x8019d82
mov rdi, r13
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
lea rsi, [var_eh]
mov rdi, r13
mov qword [rdx + rax], rbp
add qword [rbx + 0x40], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x8019dc5
nop
mov rax, qword [var_10h]
mov rdx, qword [var_18h]
cmp rax, rdx
jae 0x8019ee0
lea rdx, [rax + 1]
mov r12d, 1
mov qword [var_10h], rdx
mov byte [rax], 0x5d
mov rax, qword [var_20h]
mov rdx, qword [var_10h]
mov qword [rax], rdx
add rsp, 0x38
mov eax, r12d
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov rax, qword [rbx + 0x40]
lea r12, [rbx + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rbx + 0x38]
jbe 0x8019e06
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r15
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 0x10
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x8019e30
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], rbp
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 9
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x8019e5a
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov byte [rdx + rax], 0x1a
add qword [rbx + 0x40], 1
xor r12d, r12d
jmp 0x8019dc5
nop
mov rax, qword [rdi + 0x40]
mov byte [var_dh], 0x18
lea r12, [rdi + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rdi + 0x38]
jbe 0x8019e93
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r15
mov rsi, qword [rbx + 0x40]
lea rax, [rsi + 8]
add rsi, 0x10
mov qword [rbx + 0x40], rax
cmp rsi, qword [rbx + 0x38]
jbe 0x8019ebd
mov rdi, r12
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
lea rsi, [var_dh]
mov rdi, r12
mov qword [rdx + rax], rbp
add qword [rbx + 0x40], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x8019e67
nop dword [rax]
mov rax, qword [rbx + 0x40]
mov byte [var_fh], 0x1b
lea rbp, [rbx + 0x30]
lea rsi, [rax + 8]
cmp rsi, qword [rbx + 0x38]
jbe 0x8019f03
mov rdi, rbp
call .text
mov rax, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov qword [rdx + rax], r15
mov rax, qword [rbx + 0x40]
lea rdx, [rax + 8]
lea rsi, [rax + 0x10]
mov qword [rbx + 0x40], rdx
cmp rsi, qword [rbx + 0x38]
jbe 0x8019f2d
mov rdi, rbp
call .text
mov rdx, qword [rbx + 0x40]
mov rax, qword [rbx + 0x48]
lea rsi, [var_fh]
mov rdi, rbp
mov qword [rax + rdx], r13
add qword [rbx + 0x40], 8
call _ZN5boost4json6detail5stack4pushINS0_10serializer5stateEEEvRKT_
jmp 0x8019e67
