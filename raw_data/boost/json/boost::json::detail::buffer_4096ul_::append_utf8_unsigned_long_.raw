mov rdx, qword [rdi + 0x1000]
add rdx, rdi
cmp rsi, 0x7f
jbe 0x801dfb0
mov ecx, esi
mov rax, rsi
and ecx, 0x3f
shr rax, 6
or ecx, 0xffffff80
cmp rsi, 0x7ff
jbe 0x801df98
mov r8, rsi
and eax, 0x3f
shr r8, 0xc
or eax, 0xffffff80
cmp rsi, 0xffff
jbe 0x801dfc0
shr rsi, 0x12
and r8d, 0x3f
mov byte [rdx + 2], al
or esi, 0xfffffff0
or r8d, 0xffffff80
mov byte [rdx + 3], cl
mov byte [rdx], sil
mov byte [rdx + 1], r8b
add qword [rdi + 0x1000], 4
ret
nop dword [rax + rax]
or eax, 0xffffffc0
mov byte [rdx + 1], cl
mov byte [rdx], al
add qword [rdi + 0x1000], 2
ret
nop dword [rax]
mov byte [rdx], sil
add qword [rdi + 0x1000], 1
ret
nop dword [rax]
or r8d, 0xffffffe0
mov byte [rdx + 1], al
mov byte [rdx], r8b
mov byte [rdx + 2], cl
add qword [rdi + 0x1000], 3
ret
