push rbx
mov rax, rdi
mov ebx, esi
sub rsp, 0x10
mov rcx, qword [rdi + 0x68]
test cl, 1
je 0x801dea0
cmp rcx, 1
jne 0x801dee5
mov ecx, dword [rdi + 0x58]
test ecx, ecx
jne 0x801dee5
cmp byte [rax + 0xa0], 0
je 0x801dee5
mov rcx, qword [rax + 0x80]
test rcx, rcx
je 0x801def0
mov rsi, qword [rax + 0x88]
mov qword [rsi + rcx], rdx
mov rdx, qword [rax + 0x80]
lea rcx, [rdx + 8]
mov qword [rax + 0x80], rcx
mov rcx, qword [rax + 0x88]
mov byte [rcx + rdx + 8], bl
add qword [rax + 0x80], 1
add rsp, 0x10
pop rbx
ret
nop dword [rax + rax]
mov rsi, qword [rax + 0xb0]
sub rsi, qword [rax + 0xc0]
lea rsi, [rsi + rsi*8 + 0xb]
cmp rsi, qword [rax + 0x78]
jbe 0x801deb5
lea rdi, [rax + 0x70]
mov qword [var_8h], rdx
mov qword [rsp], rax
call .text
mov rax, qword [rsp]
mov rdx, qword [var_8h]
mov rcx, qword [rax + 0x80]
jmp 0x801deb5
