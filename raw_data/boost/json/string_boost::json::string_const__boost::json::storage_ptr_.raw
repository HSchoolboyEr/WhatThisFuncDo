mov rax, qword [rdx]
mov byte [rdi + 0x17], 0xe
mov qword [rdx], 0
mov qword [rdi], rax
mov eax, 0x85
mov word [rdi + 8], ax
cmp rdi, rsi
je 0x80099a0
push r13
push r12
push rbp
mov rbp, rdi
sub rsp, 0x10
movzx eax, byte [rsi + 8]
cmp al, 5
je 0x8009920
movsx rdx, byte [rsi + 0x17]
mov r13d, 0xe
lea r12, [rsi + 9]
sub r13, rdx
cmp al, 0x85
je 0x8009859
mov rsi, qword [rsi + 0x10]
lea r12, [rsi + 8]
cmp r13, 0xe
jbe 0x80098f8
cmp r13, 0x7ffffffe
ja 0x80099a1
cmp r13, 0x1c
mov esi, 0x1c
mov rdi, rsp
mov rdx, rbp
cmovae rsi, r13
call method boost::json::detail::string_impl::string_impl(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
movzx eax, byte [arg_8h]
cmp al, 5
je 0x8009968
cmp al, 0x45
je 0x8009930
movdqu xmm0, xmmword [rsp]
movzx eax, byte [rsp]
movups xmmword [arg_8h], xmm0
cmp al, 0x85
je 0x80098f8
mov rax, qword [arg_10h]
mov dword [rax], r13d
cmp byte [arg_8h], 0x85
lea rax, [arg_9h]
je 0x80098c6
mov rax, qword [arg_10h]
add rax, 8
mov byte [rax + r13], 0
cmp byte [arg_8h], 0x85
je 0x80099a6
mov rdi, qword [arg_10h]
add rdi, 8
add rsp, 0x10
mov rdx, r13
mov rsi, r12
pop rbp
pop r12
pop r13
jmp memcpy
nop dword [rax]
mov eax, 0xe
lea rdi, [arg_9h]
sub eax, r13d
mov byte [arg_17h], al
mov byte [rbp + r13 + 9], 0
test r13, r13
jne 0x80098dd
add rsp, 0x10
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rsi, qword [rsi + 0x10]
mov r13d, dword [rsi]
jmp 0x8009855
nop dword [rax]
mov rax, qword [rbp]
mov edx, dword [arg_ch]
mov ecx, 0x10
mov rsi, qword [arg_10h]
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x08009951]
cmove rdi, rax
add edx, 1
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x800989c
nop dword [rax + rax]
mov rax, qword [rbp]
mov rsi, qword [arg_10h]
mov ecx, 4
mov rdi, rax
mov edx, dword [rsi + 4]
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x08009989]
cmove rdi, rax
add rdx, 9
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x800989c
nop dword [rax]
ret
call method boost::json::detail::string_impl::growth(unsigned long, unsigned long) [clone .part.0]
lea rdi, [arg_9h]
jmp 0x80098dd
