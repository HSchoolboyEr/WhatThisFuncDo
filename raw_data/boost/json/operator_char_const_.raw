push r14
push r13
mov r13, rdi
push r12
push rbp
mov rbp, rsi
sub rsp, 0x48
mov rax, qword [rdi]
mov qword [rsp], rax
test al, 1
jne 0x800cee0
mov qword [var_20h], rax
mov rdi, rbp
movabs rax, 0xe00000000000000
mov qword [rsp], 0
mov qword [var_8h], 0
mov qword [var_28h], 0x85
mov qword [var_30h], rax
call strlen
mov r12, rax
cmp rax, 0xe
ja 0x800cde0
mov eax, 0xe
lea r14, [var_20h]
sub eax, r12d
mov byte [var_37h], al
mov byte [rsp + r12 + 0x29], 0
test r12, r12
jne 0x800cf7d
mov rdi, qword [var_8h]
test dil, 1
jne 0x800ceb5
mov rsi, r13
mov rdi, r14
call _ZN5boost4json5value4swapERS1_
mov rdi, r14
call _ZN5boost4json5valueD1Ev
mov rdi, qword [rsp]
test dil, 1
jne 0x800cef8
add rsp, 0x48
mov rax, r13
pop rbp
pop r12
pop r13
pop r14
ret
nop
lea r14, [var_20h]
cmp rax, 0x7ffffffe
ja 0x800cf66
cmp rax, 0x1c
mov esi, 0x1c
lea rdi, [var_10h]
mov rdx, r14
cmovae rsi, rax
call method boost::json::detail::string_impl::string_impl(unsigned long, boost::json::storage_ptr const&) [clone .part.0]
movzx eax, byte [var_28h]
cmp al, 5
je 0x800cf30
cmp al, 0x45
jne 0x800ce4d
mov rax, qword [var_20h]
mov rsi, qword [var_30h]
mov ecx, 0x10
mov rdi, rax
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x0800ce3c]
cmove rdi, rax
mov eax, dword [var_2ch]
lea edx, [rax + 1]
mov rax, qword [rdi]
call qword [rax + 0x18]
movdqu xmm0, xmmword [var_10h]
movzx eax, byte [var_10h]
movups xmmword [var_28h], xmm0
cmp al, 0x85
je 0x800cf6b
mov rax, qword [var_30h]
mov dword [rax], r12d
cmp byte [var_28h], 0x85
lea rax, [var_29h]
je 0x800ce82
mov rax, qword [var_30h]
add rax, 8
mov byte [rax + r12], 0
cmp byte [var_28h], 0x85
je 0x800cf7d
mov rax, qword [var_30h]
lea rdi, [rax + 8]
mov rdx, r12
mov rsi, rbp
call memcpy
mov rdi, qword [var_8h]
test dil, 1
je 0x800cdae
and rdi, 0xfffffffffffffffc
lock sub qword [rdi + 8], 1
jne 0x800cdae
test rdi, rdi
je 0x800cdae
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800cdae
nop dword [rax]
and rax, 0xfffffffffffffffc
lock add qword [rax + 8], 1
mov rax, qword [rsp]
jmp 0x800cd40
nop dword [rax + rax]
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x800cdcf
cmp rax, 1
jne 0x800cdcf
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x800cdcf
nop word [rax + rax]
mov rax, qword [var_20h]
mov rsi, qword [var_30h]
mov ecx, 4
mov rdi, rax
mov edx, dword [rsi + 4]
and rdi, 0xfffffffffffffffc
test rax, rax
lea rax, [0x0800cf53]
cmove rdi, rax
add rdx, 9
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x800ce4d
call method boost::json::detail::string_impl::growth(unsigned long, unsigned long) [clone .part.0]
mov eax, 0xe
sub eax, r12d
mov byte [var_37h], al
mov byte [rsp + r12 + 0x29], 0
lea rdi, [arg_29h]
jmp 0x800ce9b
