push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
mov rdi, qword [rdi]
mov rax, rdi
and eax, 3
cmp rax, 2
je 0x80027d5
mov rsi, qword [arg_10h]
mov eax, dword [rsi + 4]
test eax, eax
jne 0x80027f0
test dil, 1
jne 0x80028c8
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
mov edx, dword [rsi]
lea r12, [rsi + 0x10]
lea r13, [0x080027fd]
lea r14, [0x08002804]
lea rdx, [rdx + rdx*4]
lea rbx, [rsi + rdx*8 + 0x10]
cmp rbx, r12
jne 0x800284d
jmp 0x8002881
nop dword [rax]
mov rsi, qword [rbx + 0x18]
cmp rsi, r13
je 0x8002861
mov rdi, rax
mov ecx, 1
and rdi, 0xfffffffffffffffc
test rax, rax
mov eax, dword [rbx + 0x20]
cmove rdi, r14
lea edx, [rax + 1]
mov rax, qword [rdi]
call qword [rax + 0x18]
mov rdi, rbx
call _ZN5boost4json5valueD1Ev
cmp r12, rbx
je 0x800286e
mov rax, qword [rbx - 0x28]
sub rbx, 0x28
mov rdx, rax
and edx, 3
cmp rdx, 2
jne 0x8002818
mov rdi, rbx
call _ZN5boost4json5valueD1Ev
cmp r12, rbx
jne 0x800284d
mov rsi, qword [arg_10h]
mov rdi, qword [rbp]
mov eax, dword [rsi + 4]
test eax, eax
je 0x80027d5
mov rdx, rdi
and rdx, 0xfffffffffffffffc
test rdi, rdi
lea rdi, [0x08002892]
cmovne rdi, rdx
cmp eax, 0x12
jbe 0x8002900
lea rdx, [rax + rax*4]
mov ecx, 0x10
lea rax, [rax + rdx*2]
lea rdx, [rax*4 + 0x10]
mov rax, qword [rdi]
call qword [rax + 0x18]
mov rdi, qword [rbp]
test dil, 1
je 0x80027df
nop dword [rax]
and rdi, 0xfffffffffffffffc
mov rax, 0xffffffffffffffff
lock xadd qword [rdi + 8], rax
test rdi, rdi
je 0x80027df
cmp rax, 1
jne 0x80027df
mov rax, qword [rdi]
pop rbx
pop rbp
pop r12
mov rax, qword [rax + 8]
pop r13
pop r14
jmp rax
nop dword [rax]
lea rax, [rax + rax*4]
mov ecx, 0x10
lea rdx, [rax*8 + 0x10]
mov rax, qword [rdi]
call qword [rax + 0x18]
mov rdi, qword [rbp]
jmp 0x80027d5
