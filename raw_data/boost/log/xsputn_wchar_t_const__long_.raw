push r14
push r13
mov r13, rsi
push r12
mov r12, rdx
push rbp
push rbx
mov rbp, qword [rdi + 0x20]
mov rbx, rdi
mov r14, qword [rdi + 0x28]
movzx eax, byte [rdi + 0x50]
cmp rbp, r14
je 0x8001709
test al, al
jne 0x8001760
mov rdi, qword [rdi + 0x40]
mov rdx, r14
mov rax, qword [rbx + 0x48]
sub rdx, rbp
mov rcx, qword [rdi + 8]
sar rdx, 2
cmp rcx, rax
jae 0x80016e0
movabs rsi, 0xfffffffffffffff
sub rax, rcx
sub rsi, rcx
cmp rdx, rax
ja 0x80017b0
cmp rdx, rsi
jbe 0x80016eb
lea rdi, [0x080016da]
call _ZSt20__throw_length_errorPKc
nop
xor eax, eax
test rdx, rdx
jne 0x80017b9
mov rsi, rbp
sub rbp, r14
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwm
sar rbp, 2
movzx eax, byte [rbx + 0x50]
movsxd rbp, ebp
shl rbp, 2
add qword [rbx + 0x28], rbp
test al, al
jne 0x80017a0
mov rdi, qword [rbx + 0x40]
mov rdx, qword [rbx + 0x48]
mov rax, qword [rdi + 8]
cmp rax, rdx
jae 0x8001788
movabs rcx, 0xfffffffffffffff
sub rdx, rax
sub rcx, rax
cmp r12, rdx
ja 0x80017e8
cmp r12, rcx
ja 0x80016d3
mov rdx, r12
mov rsi, r13
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwm
pop rbx
mov rax, r12
pop rbp
pop r12
pop r13
pop r14
ret
nop word [rax + rax]
sub rbp, r14
xor r12d, r12d
sar rbp, 2
movsxd rbp, ebp
lea rax, [r14 + rbp*4]
mov qword [rdi + 0x28], rax
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
test r12, r12
je 0x8001740
xor r12d, r12d
xor edx, edx
mov rsi, r13
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwm
mov byte [rbx + 0x50], 1
jmp 0x800174b
xor r12d, r12d
pop rbx
pop rbp
mov rax, r12
pop r12
pop r13
pop r14
ret
nop
cmp rax, rsi
ja .LC4
mov rsi, rbp
sub rbp, r14
mov rdx, rax
xor r12d, r12d
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwm
sar rbp, 2
mov byte [rbx + 0x50], 1
movsxd rax, ebp
shl rax, 2
add qword [rbx + 0x28], rax
jmp 0x800174b
nop word [rax + rax]
cmp rdx, rcx
ja .LC4
mov r12, rdx
jmp 0x8001792
