mov rdi, qword [rdi]
test rdi, rdi
je 0x8003490
push rbp
xor ecx, ecx
mov rbp, rsp
push r14
push r13
push r12
mov r12, rsi
lea rsi, [0x08003342]
push rbx
mov ebx, edx
lea rdx, [0x0800334c]
sub rsp, 0x90
call __dynamic_cast
mov r14, rax
test rax, rax
je 0x800347b
lea r13, [var_9ch]
movzx ecx, bx
mov esi, 0xc
xor eax, eax
lea rdx, [0x0800337c]
mov rdi, r13
call snprintf
mov rax, qword [r14 + 0x18]
mov qword [var_a8h], rax
lea rbx, [rax + 0x30]
nop dword [rax + rax]
mov rdi, rbx
call pthread_mutex_lock
cmp eax, 4
je 0x8003398
test eax, eax
jne 0x80034da
mov rdi, r13
call strlen
sub rsp, 8
mov rcx, qword [r12]
mov r9, r13
mov rdx, qword [r12 + 8]
push 0x20
mov r8, rax
lea rdi, [var_90h]
lea rsi, [r14 + 0x14]
call sym boost::asio::ip::basic_resolver<boost::asio::ip::udp, boost::asio::any_io_executor>::resolve(boost::asio::ip::udp const&, std::experimental::fundamentals_v1::basic_string_view<char, std::char_traits<char> >, std::experimental::fundamentals_v1::basic_string_view<char, std::char_traits<char> >, boost::asio::ip::resolver_base::flags) [clone .isra.0]
mov rdi, qword [var_88h]
pop rax
mov rax, qword [var_90h]
pop rdx
test rdi, rdi
je 0x8003498
cmp qword [0x080033fb], 0
jne 0x80034d0
add dword [rdi + 8], 1
mov rax, qword [rax]
movdqu xmm1, xmmword [rax]
movups xmmword [var_50h], xmm1
mov rcx, qword [rax + 0x10]
mov qword [var_40h], rcx
mov edx, dword [rax + 0x18]
mov qword [var_60h], rcx
mov dword [var_38h], edx
movzx r12d, word [rax]
mov dword [var_58h], edx
mov word [var_50h], r12w
movdqu xmm2, xmmword [var_50h]
movups xmmword [var_70h], xmm2
call _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
add byte [rax], al
add byte [rax], al
mov rdi, qword [var_88h]
test rdi, rdi
je 0x8003450
call _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
nop dword [rax]
mov rdi, rbx
call pthread_mutex_unlock
cmp eax, 4
je 0x8003450
mov rax, qword [var_60h]
mov word [var_70h], r12w
movdqu xmm0, xmmword [var_70h]
mov qword [r14 + 0x40], rax
mov eax, dword [var_58h]
movups xmmword [r14 + 0x30], xmm0
mov dword [r14 + 0x48], eax
lea rsp, [var_20h]
pop rbx
pop r12
pop r13
pop r14
pop rbp
ret
nop dword [rax + rax]
ret
nop dword [rax]
mov rax, qword [rax]
movdqu xmm3, xmmword [rax]
movups xmmword [var_50h], xmm3
mov rcx, qword [rax + 0x10]
mov qword [var_40h], rcx
mov edx, dword [rax + 0x18]
mov qword [var_60h], rcx
mov dword [var_38h], edx
movzx r12d, word [rax]
mov dword [var_58h], edx
mov word [var_50h], r12w
movdqu xmm4, xmmword [var_50h]
movups xmmword [var_70h], xmm4
jmp 0x8003450
nop dword [rax]
lock add dword [rdi + 8], 1
jmp 0x8003405
lea r12, [var_50h]
mov esi, eax
lea rdx, [0x080034e7]
mov rdi, r12
call _ZN5boost16thread_exceptionC2EiPKc
lea rax, [0x080034f6]
mov rdi, r12
mov qword [var_50h], rax
call _ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_
add byte [rax], al
add byte [rax], al
mov r14, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
nop word cs:[rax + rax]
nop dword [rax]
