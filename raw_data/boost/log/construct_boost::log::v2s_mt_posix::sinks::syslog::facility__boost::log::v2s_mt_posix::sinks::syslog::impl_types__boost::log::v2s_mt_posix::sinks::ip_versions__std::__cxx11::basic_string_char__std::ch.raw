push r15
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x68
mov dword [var_1ch], esi
test edx, edx
je 0x8001d10
mov dword [arg_30h], 2
test ecx, ecx
je 0x8001cd6
cmp ecx, 1
jne .LC78
mov dword [arg_30h], 0xa
mov edi, 0x50
call _Znwm
lea rdx, [arg_30h]
lea rsi, [arg_1ch]
mov rdi, rax
mov rbp, rax
call _ZN5boost3log12v2s_mt_posix5sinks14syslog_backend14implementation16udp_socket_basedC1ERKNS2_6syslog8facilityERKNS_4asio2ip3udpE
mov qword [rbx], rbp
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov edi, 0x28
mov rbp, r8
call _Znwm
lea rdx, [0x08001d24]
mov r12, rax
mov eax, dword [arg_1ch]
mov qword [r12 + 8], 0
shr eax, 3
cmp byte [0x08001d3e], 2
mov r15d, dword [rdx + rax*4]
lea rax, [0x08001d49]
mov qword [r12], rax
lea rax, [0x08001d54]
mov dword [r12 + 0x10], r15d
mov qword [arg_28h], rax
jne 0x8001e30
movzx eax, byte [0x08001d6b]
test al, al
je .bss
lea r13, [0x08001d7a]
nop word [rax + rax]
mov rdi, r13
call pthread_mutex_lock
cmp eax, 4
je 0x8001d80
test eax, eax
jne 0x800210d
movzx eax, byte [0x08001d9c]
test al, al
je .bss
mov qword [r12 + 0x18], 0
mov rax, qword [0x08001db4]
mov qword [r12 + 0x20], rax
test rax, rax
je 0x8001e81
lea rdx, [rax + 8]
mov eax, dword [rax + 8]
test eax, eax
je 0x8001e78
lea ecx, [rax + 1]
lock cmpxchg dword [rdx], ecx
jne 0x8001dc9
test eax, eax
je 0x8001e78
cmp qword [r12 + 0x20], 0
je 0x8001e81
mov r13, qword [0x08001df5]
mov qword [r12 + 0x18], r13
test r13, r13
je 0x8001f98
lea rbp, [0x08001e0a]
nop word [rax + rax]
mov rdi, rbp
call pthread_mutex_unlock
cmp eax, 4
je 0x8001e10
mov qword [rbx], r12
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
lea r13, [arg_28h]
lea r14, [0x08001e3c]
mov rdi, r13
call _ZNK5boost3log12v2s_mt_posix3aux17once_block_sentry16enter_once_blockEv
add byte [rax], al
add byte [rax], al
test al, al
jne 0x8001f28
movzx eax, byte [0x08001e53]
test al, al
je __cxa_guard_acquire
mov rdi, r13
call _ZN5boost3log12v2s_mt_posix3aux17once_block_sentry6commitEv
add byte [rax], al
add byte [rax], al
mov rax, qword [arg_28h]
cmp byte [rax], 2
je .bss
jmp 0x8001e3c
nop dword [rax + rax]
mov qword [r12 + 0x20], 0
mov r13, qword [r12 + 0x18]
jmp 0x8001dfa
nop dword [rax + rax]
lea rdi, [0x08001e97]
call __cxa_guard_acquire
test eax, eax
je 0x8001da4
lea rdi, [0x08001eab]
call __cxa_guard_release
lea rdx, [0x08001eb7]
lea rsi, [0x08001ebe]
lea rdi, [method.boost::weak_ptr_boost::log::v2s_mt_posix::sinks._anonymous_namespace_::native_syslog_initializer_::weak_ptr__]
call __cxa_atexit
jmp 0x8001da4
nop
lea rdi, [0x08001ed7]
call __cxa_guard_acquire
test eax, eax
je .bss
xor esi, esi
lea rdi, [0x08001eed]
call pthread_mutex_init
test eax, eax
jne 0x80020f2
lea rdi, [0x08001f01]
call __cxa_guard_release
lea rdx, [0x08001f0d]
lea rsi, [0x08001f14]
lea rdi, [0x08001f1b]
add byte [rax], al
add byte [rax], al
call __cxa_atexit
jmp .bss
nop dword [rax]
mov rax, qword [arg_28h]
cmp byte [rax], 2
je .bss
mov rdi, r13
call _ZN5boost3log12v2s_mt_posix3aux17once_block_sentry8rollbackEv
add byte [rax], al
add byte [rax], al
jmp .bss
mov rdi, r14
call __cxa_guard_acquire
test eax, eax
je _ZN5boost3log12v2s_mt_posix3aux17once_block_sentry6commitEv
xor esi, esi
lea rdi, [0x08001f5c]
call pthread_mutex_init
mov esi, eax
test eax, eax
jne 0x8002128
mov rdi, r14
call __cxa_guard_release
lea rdx, [0x08001f7a]
lea rsi, [0x08001f81]
lea rdi, [0x08001f88]
call __cxa_atexit
jmp _ZN5boost3log12v2s_mt_posix3aux17once_block_sentry6commitEv
nop word [rax + rax]
mov edi, 0x40
call _Znwm
mov r14, rax
lea rax, [rax + 8]
mov qword [rsp], rax
mov rax, qword [0x08001fb4]
mov rdi, r14
mov qword [r14 + 0x10], 0
mov qword [r14 + 8], rax
lea rax, [0x08001fca]
mov qword [r14], rax
mov byte [r14 + 0x18], 0
call method boost::detail::sp_counted_impl_pd<boost::log::v2s_mt_posix::sinks::(anonymous namespace)::native_syslog_initializer*, boost::detail::sp_ms_deleter<boost::log::v2s_mt_posix::sinks::(anonymous namespace)::native_syslog_initializer> >::get_untyped_deleter()
lea rsi, [rax + 0x18]
lea rdi, [rax + 8]
mov qword [rsp], rax
mov qword [rax + 8], rsi
mov rdx, qword [arg_8h]
mov qword [arg_10h], rsi
mov rsi, qword [rbp]
mov qword [arg_8h], rdi
add rdx, rsi
call method void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
mov rax, qword [rsp]
cmp qword [rax + 0x10], 0
je 0x8002010
mov r13, qword [rax + 8]
mov edx, r15d
xor esi, esi
mov rdi, r13
call openlog
mov rax, qword [rsp]
mov byte [rax], 1
lea rax, [r14 + 8]
lock add dword [rax], 1
mov rdi, r14
call _ZN5boost6detail15sp_counted_base7releaseEv
add byte [rax], al
add byte [rax], al
mov rdi, qword [r12 + 0x20]
movq xmm1, r14
movq xmm0, qword [arg_8h]
punpcklqdq xmm0, xmm1
movups xmmword [r12 + 0x18], xmm0
test rdi, rdi
je 0x8002096
call _ZN5boost6detail15sp_counted_base7releaseEv
mov rax, qword [r12 + 0x18]
mov r14, qword [r12 + 0x20]
mov rdi, qword [0x08002069]
mov qword [0x08002070], rax
cmp r14, rdi
je .bss
test r14, r14
jne 0x80020af
test rdi, rdi
je 0x800208a
lock sub dword [rdi + 0xc], 1
je 0x80020be
mov qword [0x08002091], r14
jmp .bss
mov rax, qword [arg_8h]
cmp r14, qword [0x080020a2]
mov qword [0x080020a9], rax
je .bss
lock add dword [r14 + 0xc], 1
mov rdi, qword [0x080020bc]
jmp 0x800207e
mov rax, qword [rdi]
lea rcx, [0x080020c8]
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x80020d6
call qword [rax + 8]
jmp 0x800208a
call rdx
jmp 0x800208a
lea rdx, [0x080020e1]
mov esi, 0x209
lea rdi, [0x080020ed]
call _ZN5boost3log12v2s_mt_posix11setup_error6throw_EPKcmS4_
lea r14, [arg_30h]
lea rdx, [0x080020fe]
mov esi, eax
mov rdi, r14
call _ZN5boost16thread_exceptionC2EiPKc
add byte [rax], al
add byte [rax], al
jmp .text.unlikely
lea r14, [arg_30h]
lea rdx, [0x08002119]
mov esi, eax
mov rdi, r14
call _ZN5boost16thread_exceptionC2EiPKc
jmp .text.unlikely
lea r14, [arg_30h]
lea rdx, [0x08002134]
mov rdi, r14
call _ZN5boost16thread_exceptionC2EiPKc
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov r12, rax
jmp .text.unlikely
mov rdi, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
nop
nop word [rax + rax]
