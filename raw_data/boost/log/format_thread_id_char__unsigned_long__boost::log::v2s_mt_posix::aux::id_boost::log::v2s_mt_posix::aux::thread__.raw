movzx eax, byte [0x080002b7]
mov r9d, 0x10
mov r10, rsi
lea r8, [0x080002c7]
lea r11, [rdi + 2]
mov byte [rdi], al
movzx eax, byte [0x080002d4]
add eax, 0x17
mov byte [rdi + 1], al
lea rax, [rsi - 3]
cmp rax, 0x10
cmovbe r9, rax
lea rsi, [r9*4]
lea rcx, [rsi - 4]
cmp r10, 3
je 0x800050f
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 2], cl
lea rcx, [rsi - 8]
cmp rax, 1
jbe 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 3], cl
lea rcx, [rsi - 0xc]
cmp rax, 2
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 4], cl
lea rcx, [rsi - 0x10]
cmp rax, 3
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 5], cl
lea rcx, [rsi - 0x14]
cmp rax, 4
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 6], cl
lea rcx, [rsi - 0x18]
cmp rax, 5
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 7], cl
lea rcx, [rsi - 0x1c]
cmp rax, 6
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 8], cl
lea rcx, [rsi - 0x20]
cmp rax, 7
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 9], cl
lea rcx, [rsi - 0x24]
cmp rax, 8
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 0xa], cl
lea rcx, [rsi - 0x28]
cmp rax, 9
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 0xb], cl
lea rcx, [rsi - 0x2c]
cmp rax, 0xa
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 0xc], cl
lea rcx, [rsi - 0x30]
cmp rax, 0xb
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 0xd], cl
lea rcx, [rsi - 0x34]
cmp rax, 0xc
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 0xe], cl
lea rcx, [rsi - 0x38]
cmp rax, 0xd
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 0xf], cl
lea rcx, [rsi - 0x3c]
cmp rax, 0xe
je 0x8000500
mov r10, rdx
shr r10, cl
mov rcx, r10
and ecx, 0xf
movzx ecx, byte [r8 + rcx]
mov byte [rdi + 0x10], cl
lea rcx, [rsi - 0x40]
cmp rax, 0xf
je 0x8000500
shr rdx, cl
and edx, 0xf
movzx edx, byte [r8 + rdx]
mov byte [rdi + 0x11], dl
nop dword [rax + rax]
test rax, rax
mov eax, 1
cmove r9, rax
add r11, r9
mov byte [r11], 0
ret
