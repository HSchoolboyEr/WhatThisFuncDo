mov rax, qword [rdi]
and rax, 0xfffffffffffffffc
jne 0x80093f0
ret
nop word [rax + rax]
push r12
push rbp
push rbx
mov rbx, qword [rax + 8]
lock sub qword [rbx + 0xd8], 1
je 0x8009410
pop rbx
pop rbp
pop r12
ret
nop dword [rax + rax]
movzx ebp, byte [rbx + 0x60]
test bpl, bpl
jne 0x8009460
movzx ebp, byte [rbx + 0xd0]
mov byte [rbx + 0xf0], 1
test bpl, bpl
jne 0x8009403
mov rdi, qword [rbx + 0xa8]
test rdi, rdi
je 0x8009445
mov byte [rbx + 0xd0], 1
mov rax, qword [rdi]
call qword [rax + 8]
lea r12, [rbx + 0x38]
test bpl, bpl
je 0x8009403
pop rbx
mov rdi, r12
pop rbp
pop r12
jmp pthread_mutex_unlock
nop word [rax + rax]
lea r12, [rbx + 0x38]
mov rdi, r12
call pthread_mutex_lock
cmp byte [rbx + 0x60], 0
mov byte [rbx + 0xf0], 1
je 0x800948a
or qword [rbx + 0xa0], 1
lea rdi, [rbx + 0x70]
call pthread_cond_broadcast
cmp byte [rbx + 0xd0], 0
jne 0x800944e
jmp 0x800942c
