push r15
push r14
push r13
mov r13, rdi
push r12
lea r12, [0x08000272]
push rbp
push rbx
sub rsp, 0x28
mov rbx, qword [rdi]
mov rbp, qword [rdi + 8]
mov r15, rbx
add rbp, rbx
nop dword [rax]
cmp rbx, rbp
je 0x8000350
mov rdx, rbp
sub rdx, rbx
mov rax, rdx
sar rax, 2
test rax, rax
jle 0x8000326
lea rax, [rbx + rax*4]
jmp 0x80002d7
nop dword [rax]
cmp byte [rbx + 1], 0x5c
je 0x8000360
cmp byte [rbx + 2], 0x5c
je 0x8000380
cmp byte [rbx + 3], 0x5c
je 0x80003a0
add rbx, 4
cmp rax, rbx
je 0x8000320
cmp byte [rbx], 0x5c
jne 0x80002b0
mov rax, rbp
sub rax, rbx
cmp rax, 1
jle 0x8000288
sub rbx, r15
mov edx, 1
mov rdi, r13
mov rsi, rbx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm
add byte [rax], al
add byte [rax], al
mov r15, qword [r13]
add rbx, r15
movzx eax, byte [rbx]
lea edx, [rax - 0x5c]
cmp dl, 0x1c
ja 0x80003f1
movzx edx, dl
movsxd rdx, dword [r12 + rdx*4]
add rdx, r12
jmp rdx
nop dword [rax]
mov rdx, rbp
sub rdx, rbx
cmp rdx, 2
je 0x80003c6
cmp rdx, 3
je 0x80003b9
cmp rdx, 1
je 0x80003d3
mov rbx, rbp
cmp rbx, rbp
jne 0x8000291
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
add rbx, 1
mov rax, rbp
sub rax, rbx
cmp rax, 1
jle 0x8000288
jmp 0x80002e8
nop dword [rax]
add rbx, 2
mov rax, rbp
sub rax, rbx
cmp rax, 1
jle 0x8000288
jmp 0x80002e8
nop dword [rax]
add rbx, 3
mov rax, rbp
sub rax, rbx
cmp rax, 1
jle 0x8000288
jmp 0x80002e8
cmp byte [rbx], 0x5c
je 0x80002e8
add rbx, 1
cmp byte [rbx], 0x5c
je 0x80002dc
add rbx, 1
cmp byte [rbx], 0x5c
jne 0x8000344
mov rax, rbp
sub rax, rbx
cmp rax, 1
jle 0x8000288
jmp 0x80002e8
sub eax, 0x30
cmp al, 7
jbe 0x800053b
mov rbp, qword [r13 + 8]
add rbp, r15
jmp 0x8000288
mov rbp, qword [r13 + 8]
add rbx, 1
add rbp, r15
jmp 0x8000288
mov byte [rbx], 7
mov r15, qword [r13]
mov rbp, qword [r13 + 8]
add rbp, r15
jmp 0x8000288
mov byte [rbx], 8
mov r15, qword [r13]
mov rbp, qword [r13 + 8]
add rbp, r15
jmp 0x8000288
mov byte [rbx], 0xa
mov r15, qword [r13]
mov rbp, qword [r13 + 8]
add rbp, r15
jmp 0x8000288
mov byte [rbx], 0xd
mov r15, qword [r13]
mov rbp, qword [r13 + 8]
add rbp, r15
jmp 0x8000288
mov byte [rbx], 9
mov r15, qword [r13]
mov rbp, qword [r13 + 8]
add rbp, r15
jmp 0x8000288
mov rbp, qword [r13 + 8]
lea rcx, [rbx + 1]
mov qword [rsp + 8], rcx
add rbp, r15
mov rax, rbp
sub rax, rcx
cmp rax, 1
jle 0x8000288
movsx esi, byte [rbx + 1]
mov edi, esi
mov dword [rsp + 0x1c], esi
mov r14d, esi
call isxdigit
test eax, eax
je 0x8000288
movsx edi, byte [rbx + 2]
mov byte [rsp + 0x1b], dil
mov dword [rsp + 0x14], edi
call isxdigit
test eax, eax
je 0x8000288
mov esi, dword [rsp + 0x1c]
mov edi, dword [rsp + 0x14]
movzx edx, byte [rsp + 0x1b]
lea eax, [rsi - 0x30]
cmp eax, 9
jbe 0x80004ef
lea eax, [r14 - 0x61]
cmp al, 5
ja 0x8000593
lea eax, [rsi - 0x57]
shl eax, 4
sub edi, 0x30
cmp edi, 9
ja 0x8000581
sub edx, 0x30
or eax, edx
mov byte [rbx], al
mov rbp, qword [rsp + 8]
lea rdx, [rbx + 3]
mov rax, qword [r13]
sub rbp, rax
add rax, qword [r13 + 8]
cmp rdx, rax
je 0x8000577
sub rdx, qword [rsp + 8]
mov rsi, rbp
mov rdi, r13
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm
mov r15, qword [r13]
lea rbx, [r15 + rbp]
jmp 0x80003fc
movsx ecx, byte [rbx + 1]
lea rsi, [rbx + 1]
movsx eax, al
mov rdx, rsi
lea edi, [rcx - 0x30]
cmp dil, 7
jbe 0x80005b0
mov byte [rbx], al
mov rax, qword [r13]
mov rbp, rsi
sub rbp, rax
add rax, qword [r13 + 8]
cmp rdx, rax
je 0x8000577
sub rdx, rsi
mov rdi, r13
mov rsi, rbp
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm
jmp 0x800052e
mov qword [r13 + 8], rbp
mov byte [rbx + 1], 0
jmp 0x800052e
lea ecx, [rdx - 0x61]
cmp cl, 5
ja 0x80005cf
sub edx, 0x57
or eax, edx
jmp 0x8000503
lea eax, [rsi - 0x37]
sub r14d, 0x41
shl eax, 4
cmp r14b, 6
mov ecx, eax
mov eax, 0
cmovb eax, ecx
jmp 0x80004f2
lea eax, [rcx + rax*8 - 0x30]
movsx ecx, byte [rbx + 2]
lea rdx, [rbx + 2]
lea edi, [rcx - 0x30]
cmp dil, 7
ja 0x8000552
lea rdx, [rbx + 3]
lea eax, [rcx + rax*8 - 0x30]
jmp 0x8000552
