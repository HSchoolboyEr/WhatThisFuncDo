push r15
push r14
push r13
push r12
mov r12, rdx
mov edx, 0x100
push rbp
push rbx
sub rsp, 0x168
cmp rcx, 0x100
mov qword [var_10h], rdi
cmovbe rdx, rcx
mov qword [var_18h], rdi
mov qword [var_38h], 0
cmp rsi, rdi
je 0x8001ea8
mov rbp, rcx
test rcx, rcx
je 0x8001ea8
mov rax, rdi
lea rdi, [var_38h]
mov rbx, rsi
mov r14, r8
mov qword [var_8h], rdi
lea rdi, [var_28h]
lea r13, [var_60h]
mov r10, rax
mov qword [rsp], rdi
lea r15, [var_18h]
mov rax, qword [r14]
add rdx, r13
mov qword [var_28h], r13
mov rcx, rbx
push qword [rsp]
mov r9, r13
mov r8, r15
mov rdi, r14
push rdx
mov rdx, r10
mov rsi, qword [var_8h]
call qword [rax + 0x10]
pop rdx
pop rcx
cmp eax, 1
je 0x8001df0
cmp eax, 3
jne 0x8001dd0
mov r13, qword [var_18h]
mov r15, qword [r12 + 8]
sub rbx, r13
sar rbx, 1
cmp rbx, rbp
cmova rbx, rbp
lea rbp, [var_50h]
add r15, qword [r12]
mov qword [var_40h], rbp
add rbx, rbx
lea r14, [r13 + rbx]
test r13, r13
jne 0x8001b9a
test r14, r14
jne .LC3
mov rax, rbx
mov rdx, rbp
sar rax, 1
mov qword [var_30h], rax
cmp rbx, 0x1e
ja 0x8001e70
cmp r13, r14
je 0x8001d52
mov rax, r14
sub rax, r13
sub rax, 2
mov rsi, rax
shr rsi, 1
add rsi, 1
lea rcx, [rdx + rsi]
cmp r13, rcx
setae dil
cmp r14, rdx
setbe cl
or dil, cl
je 0x8001db0
cmp rax, 0x1c
jbe 0x8001db0
mov rcx, rsi
movdqa xmm2, xmmword [0x08001bfe]
xor eax, eax
and rcx, 0xfffffffffffffff0
nop dword [rax]
movdqu xmm0, xmmword [r13 + rax*2]
movdqu xmm1, xmmword [r13 + rax*2 + 0x10]
pand xmm0, xmm2
pand xmm1, xmm2
packuswb xmm0, xmm1
movups xmmword [rdx + rax], xmm0
add rax, 0x10
cmp rax, rcx
jne 0x8001c08
mov rax, rsi
and rax, 0xfffffffffffffff0
lea rcx, [r13 + rax*2]
add rdx, rax
cmp rsi, rax
je 0x8001d48
movzx eax, word [rcx]
mov byte [rdx], al
lea rax, [rcx + 2]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 2]
mov byte [rdx + 1], al
lea rax, [rcx + 4]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 4]
mov byte [rdx + 2], al
lea rax, [rcx + 6]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 6]
mov byte [rdx + 3], al
lea rax, [rcx + 8]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 8]
mov byte [rdx + 4], al
lea rax, [rcx + 0xa]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0xa]
mov byte [rdx + 5], al
lea rax, [rcx + 0xc]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0xc]
mov byte [rdx + 6], al
lea rax, [rcx + 0xe]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0xe]
mov byte [rdx + 7], al
lea rax, [rcx + 0x10]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0x10]
mov byte [rdx + 8], al
lea rax, [rcx + 0x12]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0x12]
mov byte [rdx + 9], al
lea rax, [rcx + 0x14]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0x14]
mov byte [rdx + 0xa], al
lea rax, [rcx + 0x16]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0x16]
mov byte [rdx + 0xb], al
lea rax, [rcx + 0x18]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0x18]
mov byte [rdx + 0xc], al
lea rax, [rcx + 0x1a]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0x1a]
mov byte [rdx + 0xd], al
lea rax, [rcx + 0x1c]
cmp r14, rax
je 0x8001d48
movzx eax, word [rcx + 0x1c]
mov byte [rdx + 0xe], al
nop dword [rax]
mov rax, qword [var_30h]
mov rdx, qword [var_40h]
mov qword [var_48h], rax
mov rsi, r15
mov rdi, r12
mov byte [rdx + rax], 0
mov r8, qword [var_48h]
xor edx, edx
mov rcx, qword [var_40h]
sub rsi, qword [r12]
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
mov rdi, qword [var_40h]
cmp rdi, rbp
je 0x8001d8e
mov rax, qword [var_50h]
lea rsi, [rax + 1]
call _ZdlPvm
add rbx, qword [var_18h]
mov rax, rbx
sub rax, qword [var_10h]
sar rax, 1
add rsp, 0x168
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
movzx eax, word [r13]
add r13, 2
add rdx, 1
mov byte [rdx - 1], al
cmp r14, r13
jne 0x8001db0
jmp 0x8001d48
nop word [rax + rax]
test eax, eax
je 0x8001e40
lea rdx, [0x08001ddb]
mov esi, 0x8b
lea rdi, [0x08001de7]
call _ZN5boost3log12v2s_mt_posix16conversion_error6throw_EPKcmS4_
nop dword [rax]
mov r8, qword [var_28h]
cmp r8, r13
je 0x8001eaf
mov rsi, qword [r12 + 8]
xor edx, edx
sub r8, r13
mov rcx, r13
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
mov rax, r13
sub rax, qword [var_28h]
mov r10, qword [var_18h]
lea rdx, [rax + rbp]
cmp rdx, 0x100
ja 0x8001e50
cmp r10, rbx
je 0x8001e98
test rdx, rdx
je 0x8001e98
mov rbp, rdx
jmp 0x8001b25
nop
mov rsi, qword [r12 + 8]
mov r8, qword [var_28h]
jmp 0x8001e03
nop dword [rax]
cmp rbx, r10
je 0x8001d93
mov rbp, rdx
mov edx, 0x100
jmp 0x8001b25
nop word cs:[rax + rax]
xor edx, edx
lea rsi, [var_30h]
lea rdi, [var_40h]
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_40h], rax
mov rdx, rax
mov rax, qword [var_30h]
mov qword [var_50h], rax
jmp 0x8001bb2
mov rax, r10
sub rax, qword [var_10h]
sar rax, 1
jmp 0x8001d9e
xor eax, eax
jmp 0x8001d9e
cmp qword [var_18h], rbx
je 0x8001d93
jmp .LC7
lea rdi, [0x08001ec6]
call _ZSt19__throw_logic_errorPKc
mov r12, rax
mov rdi, qword [var_40h]
cmp rdi, rbp
je 0x8001ee6
mov rax, qword [var_50h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, r12
call _Unwind_Resume
