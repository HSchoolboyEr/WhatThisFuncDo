push r15
push r14
push r13
push r12
lea r12, [0x0800083f]
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x48
mov rax, qword [rdi]
mov r15, qword [rdi + 8]
mov r13, rax
lea rsi, [r13 + r15*4]
nop word [rax + rax]
cmp rax, rsi
je 0x8000933
mov rcx, rsi
sub rcx, rax
mov rdx, rcx
mov rdi, rcx
sar rdx, 4
sar rdi, 2
test rdx, rdx
jle 0x8000915
shl rdx, 4
add rdx, rax
jmp 0x80008b7
nop
cmp dword [rax + 4], 0x5c
je 0x8000948
cmp dword [rax + 8], 0x5c
je 0x8000960
cmp dword [rax + 0xc], 0x5c
je 0x8000970
add rax, 0x10
cmp rdx, rax
je 0x8000908
cmp dword [rax], 0x5c
jne 0x8000890
mov rcx, rsi
sub rcx, rax
cmp rcx, 4
jle 0x8000860
sub rax, r13
mov edx, 1
mov rdi, rbp
mov rsi, rax
mov rbx, rax
sar rsi, 2
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_eraseEmm
mov r13, qword [rbp]
lea rax, [r13 + rbx]
mov edx, dword [rax]
lea ecx, [rdx - 0x55]
cmp ecx, 0x23
ja 0x80009a3
movsxd rcx, dword [r12 + rcx*4]
add rcx, r12
jmp rcx
nop word [rax + rax]
mov rcx, rsi
sub rcx, rax
mov rdi, rcx
sar rdi, 2
cmp rdi, 2
je 0x800098c
cmp rdi, 3
je 0x800097f
cmp rdi, 1
je 0x8000999
mov rax, rsi
cmp rax, rsi
jne 0x8000869
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
add rax, 4
mov rcx, rsi
sub rcx, rax
jmp 0x80008c2
nop word [rax + rax]
add rax, 8
mov rcx, rsi
sub rcx, rax
jmp 0x80008c2
nop
add rax, 0xc
mov rcx, rsi
sub rcx, rax
jmp 0x80008c2
cmp dword [rax], 0x5c
je 0x80008c2
add rax, 4
cmp dword [rax], 0x5c
je 0x80008bc
add rax, 4
cmp dword [rax], 0x5c
jne 0x8000927
jmp 0x80008bc
sub edx, 0x30
cmp edx, 7
jbe 0x8000f37
mov r15, qword [arg_8h]
jmp 0x8000852
mov r15, qword [rbp + 8]
lea rbx, [rax + 4]
mov qword [rsp + 8], rbx
lea rdx, [r13 + r15*4]
sub rdx, rbx
cmp rdx, 0x1c
jle 0x8000852
mov r11d, dword [rax + 4]
lea edx, [r11 - 0x61]
lea ebx, [r11 - 0x30]
cmp edx, 5
mov dword [rsp + 0x20], ebx
setbe cl
cmp ebx, 9
setbe dl
or cl, dl
mov byte [rsp + 0x16], cl
jne 0x8000a08
lea edx, [r11 - 0x41]
cmp edx, 5
ja 0x8000852
mov r9d, dword [rax + 8]
lea edx, [r9 - 0x61]
lea ebx, [r9 - 0x30]
cmp edx, 5
mov dword [rsp + 0x24], ebx
setbe cl
cmp ebx, 9
setbe dl
or cl, dl
mov byte [rsp + 0x17], cl
jne 0x8000a39
lea edx, [r9 - 0x41]
cmp edx, 5
ja 0x8000852
mov r8d, dword [rax + 0xc]
lea edx, [r8 - 0x61]
lea ebx, [r8 - 0x30]
cmp edx, 5
mov dword [rsp + 0x28], ebx
setbe cl
cmp ebx, 9
setbe dl
or cl, dl
mov byte [rsp + 0x18], cl
jne 0x8000a6a
lea edx, [r8 - 0x41]
cmp edx, 5
ja 0x8000852
mov edi, dword [rax + 0x10]
lea edx, [rdi - 0x61]
lea ebx, [rdi - 0x30]
cmp edx, 5
mov dword [rsp + 0x2c], ebx
setbe cl
cmp ebx, 9
setbe dl
or cl, dl
mov byte [rsp + 0x1c], cl
jne 0x8000a97
lea edx, [rdi - 0x41]
cmp edx, 5
ja 0x8000852
mov esi, dword [rax + 0x14]
lea edx, [rsi - 0x61]
lea ebx, [rsi - 0x30]
cmp edx, 5
mov dword [rsp + 0x30], ebx
setbe cl
cmp ebx, 9
setbe dl
or cl, dl
mov byte [rsp + 0x1d], cl
jne 0x8000ac4
lea edx, [rsi - 0x41]
cmp edx, 5
ja 0x8000852
mov ecx, dword [rax + 0x18]
lea edx, [rcx - 0x61]
lea ebx, [rcx - 0x30]
cmp edx, 5
mov dword [rsp + 0x34], ebx
setbe r10b
cmp ebx, 9
setbe dl
or r10b, dl
mov byte [rsp + 0x1e], r10b
jne 0x8000af4
lea edx, [rcx - 0x41]
cmp edx, 5
ja 0x8000852
mov edx, dword [rax + 0x1c]
lea r10d, [rdx - 0x61]
lea r14d, [rdx - 0x30]
cmp r10d, 5
mov dword [rsp + 0x38], r14d
setbe bl
cmp r14d, 9
setbe r10b
or bl, r10b
mov byte [rsp + 0x1f], bl
jne 0x8000b2a
lea r10d, [rdx - 0x41]
cmp r10d, 5
ja 0x8000852
mov r10d, dword [rax + 0x20]
lea ebx, [r10 - 0x30]
mov dword [rsp + 0x3c], ebx
lea ebx, [r10 - 0x61]
cmp ebx, 5
setbe r14b
cmp dword [rsp + 0x3c], 9
setbe bl
or r14b, bl
jne 0x8000b5b
lea ebx, [r10 - 0x41]
cmp ebx, 5
ja 0x8000852
mov ebx, dword [rsp + 0x20]
cmp ebx, 9
ja 0x8001160
mov r11d, ebx
mov ebx, r11d
mov r11d, dword [rsp + 0x24]
shl ebx, 0x1c
cmp r11d, 9
ja 0x8001150
mov r9d, r11d
shl r9d, 0x18
or r9d, ebx
mov ebx, dword [rsp + 0x28]
mov r11d, r9d
cmp ebx, 9
ja 0x800110b
mov r8d, ebx
shl r8d, 0x14
mov ebx, dword [rsp + 0x2c]
mov r9d, r8d
or r9d, r11d
cmp ebx, 9
ja 0x80010fc
mov edi, ebx
shl edi, 0x10
mov ebx, dword [rsp + 0x30]
or edi, r9d
mov r8d, edi
cmp ebx, 9
ja 0x80010c1
mov esi, ebx
shl esi, 0xc
mov ebx, dword [rsp + 0x34]
or esi, r8d
mov edi, esi
cmp ebx, 9
ja 0x80010b2
mov ecx, ebx
mov ebx, dword [rsp + 0x38]
shl ecx, 8
or ecx, edi
cmp ebx, 9
ja 0x8001074
mov edx, ebx
shl edx, 4
lea ebx, [r10 - 0x30]
or edx, ecx
cmp ebx, 9
ja 0x8001066
mov r10d, ebx
or edx, r10d
mov rbx, qword [rsp + 8]
lea rcx, [rax + 0x24]
mov dword [rax], edx
mov rdx, qword [rbp]
mov rdi, qword [rbp + 8]
sub rbx, rdx
mov rsi, rbx
lea rdx, [rdx + rdi*4]
sar rsi, 2
cmp rcx, rdx
je 0x8000f16
sub rcx, qword [rsp + 8]
mov rdi, rbp
mov rdx, rcx
sar rdx, 2
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_eraseEmm
jmp 0x8000ecd
nop dword [rax]
mov r15, qword [rbp + 8]
add rax, 4
jmp 0x8000852
mov dword [rax], 7
mov r13, qword [rbp]
mov r15, qword [rbp + 8]
jmp 0x8000852
mov dword [rax], 8
mov r13, qword [rbp]
mov r15, qword [rbp + 8]
jmp 0x8000852
mov dword [rax], 0xa
mov r13, qword [rbp]
mov r15, qword [rbp + 8]
jmp 0x8000852
mov dword [rax], 0xd
mov r13, qword [rbp]
mov r15, qword [rbp + 8]
jmp 0x8000852
mov dword [rax], 9
mov r13, qword [rbp]
mov r15, qword [rbp + 8]
jmp 0x8000852
mov r15, qword [rbp + 8]
lea r10, [rax + 4]
lea rdx, [r13 + r15*4]
sub rdx, r10
cmp rdx, 0xc
jle 0x8000852
mov edx, dword [rax + 4]
lea ecx, [rdx - 0x61]
lea r11d, [rdx - 0x30]
cmp ecx, 5
setbe sil
cmp r11d, 9
setbe cl
or sil, cl
mov byte [rsp + 8], sil
jne 0x8000d0c
lea ecx, [rdx - 0x41]
cmp ecx, 5
ja 0x8000852
mov esi, dword [rax + 8]
lea ecx, [rsi - 0x61]
lea r9d, [rsi - 0x30]
cmp ecx, 5
setbe dil
cmp r9d, 9
setbe cl
or dil, cl
mov byte [rsp + 0x16], dil
jne 0x8000d3a
lea ecx, [rsi - 0x41]
cmp ecx, 5
ja 0x8000852
mov ecx, dword [rax + 0xc]
lea edi, [rcx - 0x61]
lea r8d, [rcx - 0x30]
cmp edi, 5
setbe bl
cmp r8d, 9
setbe dil
or bl, dil
mov byte [rsp + 0x17], bl
jne 0x8000d67
lea edi, [rcx - 0x41]
cmp edi, 5
ja 0x8000852
mov edi, dword [rax + 0x10]
lea ebx, [rdi - 0x30]
mov dword [rsp + 0x18], ebx
lea ebx, [rdi - 0x61]
cmp ebx, 5
setbe r14b
cmp dword [rsp + 0x18], 9
setbe bl
or r14b, bl
jne 0x8000d94
lea ebx, [rdi - 0x41]
cmp ebx, 5
ja 0x8000852
cmp r11d, 9
jbe 0x8000da9
cmp byte [rsp + 8], 0
je 0x8000fb4
lea r11d, [rdx - 0x57]
shl r11d, 0xc
cmp r9d, 9
ja 0x8000fe5
shl r9d, 8
or r11d, r9d
cmp r8d, 9
ja 0x8000fd0
shl r8d, 4
or r11d, r8d
lea ebx, [rdi - 0x30]
cmp ebx, 9
ja 0x800102e
or r11d, ebx
mov dword [rax], r11d
mov rcx, qword [rbp]
mov rbx, r10
lea rdx, [rax + 0x14]
mov rdi, qword [rbp + 8]
sub rbx, rcx
mov rsi, rbx
lea rcx, [rcx + rdi*4]
sar rsi, 2
cmp rdx, rcx
je 0x8000f16
sub rdx, r10
mov rdi, rbp
sar rdx, 2
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_eraseEmm
jmp 0x8000ecd
nop dword [rax + rax]
mov r15, qword [rbp + 8]
lea rdi, [rax + 4]
lea rdx, [r13 + r15*4]
sub rdx, rdi
cmp rdx, 4
jle 0x8000852
mov edx, dword [rax + 4]
mov ecx, dword [rax + 8]
lea esi, [rdx - 0x61]
lea r9d, [rdx - 0x30]
cmp esi, 5
jbe 0x8000edb
cmp r9d, 9
jbe 0x8000edb
lea esi, [rdx - 0x41]
cmp esi, 5
ja 0x8000852
lea esi, [rcx - 0x30]
lea r8d, [rcx - 0x61]
cmp esi, 9
jbe 0x8000e86
cmp r8d, 5
jbe 0x8000e86
lea r9d, [rcx - 0x41]
cmp r9d, 5
ja 0x8000852
sub edx, 0x37
shl edx, 4
cmp esi, 9
ja 0x8000f23
or edx, esi
mov dword [rax], edx
mov rdx, qword [rbp]
mov rbx, rdi
lea rcx, [rax + 0xc]
mov r8, qword [rbp + 8]
sub rbx, rdx
mov rsi, rbx
lea rdx, [rdx + r8*4]
sar rsi, 2
cmp rcx, rdx
je 0x8000f16
sub rcx, rdi
mov rdi, rbp
mov rdx, rcx
sar rdx, 2
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_eraseEmm
mov r13, qword [rbp]
lea rax, [r13 + rbx]
jmp 0x80009af
lea esi, [rcx - 0x30]
lea r8d, [rcx - 0x61]
cmp esi, 9
jbe 0x8000efc
mov r10d, ecx
and r10d, 0xffffffdf
sub r10d, 0x41
cmp r10d, 5
ja 0x8000852
sub edx, 0x57
mov r10d, r9d
shl r10d, 4
shl edx, 4
cmp r9d, 9
cmovbe edx, r10d
jmp 0x8000e8c
mov qword [rbp + 8], rsi
mov dword [rax + 4], 0
jmp 0x8000ecd
cmp r8d, 5
ja 0x800103e
sub ecx, 0x57
or edx, ecx
jmp 0x8000e97
mov edi, dword [rax + 4]
lea rsi, [rax + 4]
mov rcx, rsi
lea r8d, [rdi - 0x30]
cmp r8d, 7
jbe 0x8000f95
mov dword [rax], edx
mov rdx, qword [rbp]
mov rbx, rsi
mov rdi, qword [arg_8h]
sub rbx, rdx
mov r8, rbx
lea rdx, [rdx + rdi*4]
sar r8, 2
cmp rcx, rdx
je 0x8000f85
sub rcx, rsi
mov rdi, rbp
mov rsi, r8
mov rdx, rcx
sar rdx, 2
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_eraseEmm
jmp 0x8000ecd
mov qword [arg_8h], r8
mov dword [rax + 4], 0
jmp 0x8000ecd
lea edx, [rdi + rdx*8 - 0x30]
mov edi, dword [rax + 8]
lea rcx, [rax + 8]
lea r8d, [rdi - 0x30]
cmp r8d, 7
ja 0x8000f4b
lea rcx, [rax + 0xc]
lea edx, [rdi + rdx*8 - 0x30]
jmp 0x8000f4b
