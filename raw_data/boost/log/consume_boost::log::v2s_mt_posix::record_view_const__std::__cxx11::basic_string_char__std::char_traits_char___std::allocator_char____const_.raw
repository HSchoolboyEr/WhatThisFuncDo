push r15
push r14
push r13
push r12
xor r12d, r12d
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x18
mov rax, qword [rdi]
mov r15, qword [rdx]
mov r14, qword [rdx + 8]
mov rsi, qword [rax + 8]
mov rcx, qword [rax]
mov eax, dword [rax + 0x18]
mov qword [var_8h], rsi
test eax, eax
je 0x8000557
cmp eax, 1
sete r12b
test r14, r14
sete al
or r12b, al
je 0x80005e0
cmp rcx, qword [var_8h]
je 0x80005cc
mov r13, rcx
jmp 0x800057c
nop dword [rax + rax]
mov rax, qword [rbx]
cmp byte [rax + 0x1c], 0
jne 0x80005b9
add r13, 0x10
cmp qword [var_8h], r13
je 0x80005cc
mov rbp, qword [r13]
mov rax, qword [rbp]
mov rax, qword [rax - 0x18]
mov eax, dword [rbp + rax + 0x20]
test eax, eax
jne 0x8000571
mov rdx, r14
mov rsi, r15
mov rdi, rbp
call _ZNSo5writeEPKcl
add byte [rax], al
add byte [rax], al
test r12b, r12b
je 0x8000568
mov esi, 0xa
mov rdi, rbp
call _ZNSo3putEc
add byte [rax], al
add byte [rax], al
mov rax, qword [rbx]
cmp byte [rax + 0x1c], 0
je 0x8000571
mov rdi, rbp
add r13, 0x10
call _ZNSo5flushEv
add byte [rax], al
add byte [rax], al
cmp qword [var_8h], r13
jne 0x800057c
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
cmp byte [r15 + r14 - 1], 0xa
setne r12b
jmp 0x8000557
