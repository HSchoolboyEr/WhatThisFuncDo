push r15
mov r15, rdx
mov rax, rsi
push r14
mov r14, rdi
push r13
push r12
movzx r12d, sil
push rbp
push rbx
sub rsp, 0x308
mov rdx, qword [rdx]
mov rdx, qword [rdx - 0x18]
mov r13d, dword [r15 + rdx + 0x18]
lea rdx, [0x08000131]
shr r13d, 0xe
and r13d, 1
shl r13, 4
add r13, rdx
shr rax, 8
je 0x8000229
mov rbx, rax
lea r8, [var_1h]
mov rbp, rsp
shl rbx, 8
add rbx, rdi
mov rsi, r14
mov rax, rbp
nop word [rax + rax]
movzx edx, byte [rsi]
mov byte [rax], 0x20
add rax, 3
add rsi, 1
lea rdi, [var_300h]
mov rcx, rdx
and edx, 0xf
shr rcx, 4
movzx edx, byte [r13 + rdx]
and ecx, 0xf
movzx ecx, byte [r13 + rcx]
mov byte [rax - 1], dl
mov byte [rax - 2], cl
cmp rax, rdi
jne 0x8000168
mov rdx, rdi
mov rsi, r8
mov rdi, r15
add r14, 0x100
sub rdx, r8
call _ZNSo5writeEPKcl
add byte [rax], al
add byte [rax], al
mov r8, rbp
cmp rbx, r14
jne 0x800015c
mov rsi, rbp
test r12, r12
je 0x8000217
mov edi, 1
mov rax, rsp
sub edi, ebx
movzx edx, byte [rbx]
mov byte [rax], 0x20
add rax, 3
mov rcx, rdx
and edx, 0xf
shr rcx, 4
movzx edx, byte [r13 + rdx]
and ecx, 0xf
movzx ecx, byte [r13 + rcx]
mov byte [rax - 1], dl
lea edx, [rdi + rbx]
add rbx, 1
mov byte [rax - 2], cl
cmp rdx, r12
jb 0x80001d4
sub rax, rsi
mov rdi, r15
mov rdx, rax
call _ZNSo5writeEPKcl
add rsp, 0x308
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rbx, rdi
lea rsi, [var_1h]
jmp 0x80001c5
