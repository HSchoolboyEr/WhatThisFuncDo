push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x58
lea r12, [var_28h]
mov qword [var_10h], rdi
mov rdi, r12
call _ZN5boost3log12v2s_mt_posix6record4lockEv
add byte [rax], al
add byte [rax], al
mov rbp, qword [var_28h]
pxor xmm0, xmm0
movaps xmmword [var_30h], xmm0
mov eax, dword [var_10h]
mov qword [var_40h], 0
mov rbx, rax
shl rbx, 4
test rax, rax
je 0x8001e8a
mov rdi, rbx
call _Znwm
lea rdx, [rax + rbx]
mov qword [var_30h], rax
mov r15, rax
pxor xmm0, xmm0
mov qword [var_40h], rdx
nop word [rax + rax]
movups xmmword [rax], xmm0
add rax, 0x10
cmp rdx, rax
jne 0x8001b30
mov ecx, dword [var_10h]
lea rbx, [var_20h]
mov qword [var_38h], rdx
mov rbp, r15
shl rcx, 4
lea r13, [rbx + rcx]
cmp r13, rbx
jne 0x8001bb6
jmp 0x8001f09
nop dword [rax]
mov eax, dword [rdx + 8]
lea rsi, [rdx + 8]
test eax, eax
je 0x8001bbf
lea edi, [rax + 1]
lock cmpxchg dword [rsi], edi
jne 0x8001b67
test eax, eax
je 0x8001bbf
mov rax, qword [rbx]
mov r14, qword [var_8h]
movq xmm1, rdx
movq xmm0, rax
punpcklqdq xmm0, xmm1
movups xmmword [rbp], xmm0
test r14, r14
je 0x8001ba2
lock sub dword [r14 + 8], 1
je 0x8001bd8
mov rax, qword [rbp]
lea rdx, [var_10h]
test rax, rax
cmovne rbp, rdx
add rbx, 0x10
cmp r13, rbx
je 0x8001c10
mov rdx, qword [rbx + 8]
test rdx, rdx
jne 0x8001b60
mov r14, qword [var_8h]
pxor xmm0, xmm0
movups xmmword [rbp], xmm0
test r14, r14
jne 0x8001b96
jmp 0x8001bad
nop word [rax + rax]
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x8001b9e
mov rax, qword [r14]
lea rcx, [0x08001bf3]
mov rdi, r14
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x8001f13
call qword [rax + 8]
mov rax, qword [rbp]
jmp 0x8001ba2
nop dword [rax]
mov rax, rbp
sub rax, r15
cmp rax, 0x10
setle byte [var_fh]
mov rbx, r15
lea r14, [0x08001c29]
add byte [rax], al
add byte [rax], al
cmp rbp, rbx
je 0x8001ca4
nop
mov r13d, 1
jmp 0x8001c6d
nop dword [rax + rax]
call qword [rax + 0x18]
mov rax, qword [var_bp_10h]
mov rdx, qword [rbx]
sub rbp, 0x10
xor r13d, r13d
mov qword [rbp], rdx
mov qword [rbx], rax
mov rax, qword [rbx + 8]
mov rdx, qword [var_8h]
mov qword [rbx + 8], rdx
mov qword [var_8h], rax
cmp rbx, rbp
je 0x8001c8e
mov rdi, qword [rbx]
mov rsi, r12
mov rax, qword [rdi]
mov rdx, qword [rax + 0x20]
cmp rdx, r14
je 0x8001c40
call rdx
test al, al
jne 0x8001c43
add rbx, 0x10
cmp rbx, rbp
jne 0x8001c6d
cmp rbx, r15
je 0x8001de0
test r13b, r13b
jne 0x8001cb0
mov rbx, r15
cmp rbp, rbx
jne 0x8001c30
cmp rbx, r15
je 0x8001de0
nop dword [rax]
cmp byte [var_fh], 0
je 0x8001d00
mov rdi, qword [r15]
mov rsi, r12
mov rax, qword [rdi]
call qword [rax + 0x18]
mov rax, qword [rbx - 0x10]
mov rdx, qword [r15]
lea rbp, [rbx - 0x10]
mov qword [rbx - 0x10], rdx
mov qword [r15], rax
mov rax, qword [r15 + 8]
mov rdx, qword [rbx - 8]
mov qword [r15 + 8], rdx
mov qword [rbx - 8], rax
cmp rbp, r15
je 0x8001de0
mov byte [var_fh], 1
mov rbx, r15
jmp 0x8001c30
nop dword [rax + rax]
mov rax, qword [var_10h]
mov rdi, qword [rax]
call _ZN5boost3log12v2s_mt_posix4core14implementation15get_thread_dataEv
lea r8, [r15 + 0x10]
mov r9, rax
cmp r8, rbx
jne 0x8001d4a
jmp 0x8001cb7
nop dword [rax + rax]
mov rcx, qword [r8]
mov rax, qword [rdx]
add r8, 0x10
mov qword [rdx], rcx
mov qword [r8 - 0x10], rax
mov rcx, qword [rdx + 8]
mov rax, qword [r8 - 8]
mov qword [r8 - 8], rcx
mov qword [rdx + 8], rax
cmp rbx, r8
je 0x8001cb7
mov edi, dword [r9 + 8]
mov esi, dword [r9 + 0xc]
mov ecx, dword [r9 + 0x10]
mov eax, edi
mov r10, r8
shl eax, 0xd
sub r10, r15
xor eax, edi
shl edi, 0xc
shr eax, 0x13
and edi, 0xffffe000
sar r10, 4
xor edi, eax
lea eax, [rsi*4]
add r10, 1
xor eax, esi
shl esi, 4
mov dword [r9 + 8], edi
shr eax, 0x19
and esi, 0xffffff80
xor esi, eax
lea eax, [rcx*8]
xor eax, ecx
shl ecx, 0x11
mov dword [r9 + 0xc], esi
shr eax, 0xb
and ecx, 0xffe00000
xor ecx, eax
mov eax, edi
xor eax, esi
mov dword [r9 + 0x10], ecx
xor eax, ecx
cqo
idiv r10
shl rdx, 4
add rdx, r15
cmp rdx, r8
jne 0x8001d20
add r8, 0x10
cmp r8, rbx
jne 0x8001d56
jmp 0x8001cb7
nop dword [rax]
mov rbx, qword [var_38h]
mov rbp, qword [var_30h]
cmp rbx, rbp
je 0x8001e55
lea r13, [0x08001df6]
jmp 0x8001e09
nop dword [rax + rax]
add rbp, 0x10
cmp rbx, rbp
je 0x8001e50
mov r12, qword [var_8h]
test r12, r12
je 0x8001e00
lock sub dword [r12 + 8], 1
jne 0x8001e00
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
lock sub dword [r12 + 0xc], 1
jne 0x8001e00
mov rax, qword [r12]
mov rdi, r12
mov rdx, qword [rax + 0x18]
cmp rdx, r13
jne 0x8001f1a
call qword [rax + 8]
add rbp, 0x10
cmp rbx, rbp
jne 0x8001e09
nop
mov rbp, qword [var_30h]
test rbp, rbp
je 0x8001e6a
mov rsi, qword [var_40h]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
mov rbp, qword [var_28h]
test rbp, rbp
je 0x8001e7b
lock sub dword [rbp], 1
je 0x8001e94
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
xor r15d, r15d
xor edx, edx
jmp 0x8001b3c
mov eax, dword [var_10h]
test eax, eax
je 0x8001ee9
sub eax, 1
lea rbx, [var_20h]
lea r13, [0x08001ea9]
shl rax, 4
lea r12, [rbp + rax + 0x30]
jmp 0x8001ec1
nop dword [rax]
add rbx, 0x10
cmp r12, rbx
je 0x8001ee9
mov rdi, qword [rbx + 8]
test rdi, rdi
je 0x8001eb8
lock sub dword [rdi + 0xc], 1
jne 0x8001eb8
mov rax, qword [rdi]
mov rdx, qword [rax + 0x18]
cmp rdx, r13
jne 0x8001f21
call qword [rax + 8]
add rbx, 0x10
cmp r12, rbx
jne 0x8001ec1
lea rdi, [var_8h]
call _ZN5boost3log12v2s_mt_posix19attribute_value_setD1Ev
mov rdi, rbp
call free
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov byte [var_fh], 1
jmp 0x8001c1f
call rdx
jmp 0x8001b9e
call rdx
jmp 0x8001e00
call rdx
jmp 0x8001eb8
