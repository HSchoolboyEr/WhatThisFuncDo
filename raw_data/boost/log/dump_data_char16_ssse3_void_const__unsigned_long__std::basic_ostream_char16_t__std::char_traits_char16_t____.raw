push r15
mov r15, rdx
push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0xcb8
mov qword [var_68h], rsi
cmp rsi, 0xf
jbe 0x800216e
lea rax, [var_cb0h]
and rax, 0xfffffffffffffff0
lea r12, [rax - 0xc10]
lea rsi, [rax - 0xc0e]
lea r14, [rax - 0x10]
mov rax, qword [rdx]
mov rax, qword [rax - 0x18]
mov ebx, dword [rdx + rax + 0x18]
lea rax, [0x08001f76]
shr ebx, 0xe
and ebx, 1
shl rbx, 4
add rax, rbx
movdqa xmm6, xmmword [rax]
mov qword [var_80h], rax
mov rax, rdi
neg rax
and eax, 0xf
movaps xmmword [var_70h], xmm6
mov r13, rax
jne 0x8002336
mov rax, qword [var_68h]
mov rcx, rax
and ecx, 0x1ff
shr rax, 9
mov qword [var_60h], rcx
je 0x8002154
shl rax, 9
lea rdx, [arg_200h]
movdqa xmm5, xmmword [var_70h]
movdqa xmm4, xmmword [0x08001fdc]
mov qword [var_88h], rax
lea r13, [rdx + rax]
pxor xmm2, xmm2
movdqa xmm8, xmmword [0x08001ff5]
movdqa xmm7, xmmword [0x08001ffd]
movdqa xmm6, xmmword [0x08002005]
movdqa xmm3, xmmword [0x0800200d]
nop dword [rax]
lea rbx, [rdx - 0x200]
mov rax, r12
nop word [rax + rax]
movdqa xmm1, xmmword [rbx]
movdqa xmm0, xmm5
add rbx, 0x10
add rax, 0x60
movdqa xmm9, xmm1
pand xmm1, xmm4
psrlw xmm9, 4
pand xmm9, xmm4
pshufb xmm0, xmm9
movdqa xmm9, xmm5
pshufb xmm9, xmm1
movdqa xmm10, xmm0
punpcklbw xmm10, xmm9
punpckhbw xmm0, xmm9
movdqa xmm1, xmm0
movdqa xmm9, xmm10
pshufb xmm0, xmm6
palignr xmm1, xmm10, 0xa
pshufb xmm9, xmm8
pmaxub xmm0, xmm3
pmaxub xmm9, xmm3
pshufb xmm1, xmm7
pmaxub xmm1, xmm3
movdqa xmm10, xmm9
punpckhbw xmm9, xmm2
movaps xmmword [rax - 0x50], xmm9
movdqa xmm9, xmm1
punpckhbw xmm1, xmm2
punpcklbw xmm10, xmm2
movaps xmmword [rax - 0x30], xmm1
movdqa xmm1, xmm0
punpcklbw xmm9, xmm2
punpckhbw xmm0, xmm2
punpcklbw xmm1, xmm2
movaps xmmword [rax - 0x60], xmm10
movaps xmmword [rax - 0x40], xmm9
movaps xmmword [rax - 0x20], xmm1
movaps xmmword [rax - 0x10], xmm0
cmp rbx, rdx
jne 0x8002020
mov rdx, r14
mov rdi, r15
movaps xmmword [var_50h], xmm3
sub rdx, rsi
movaps xmmword [var_40h], xmm6
sar rdx, 1
movaps xmmword [var_30h], xmm7
movaps xmmword [var_20h], xmm8
movaps xmmword [var_10h], xmm4
movaps xmmword [rsp], xmm5
call method std::basic_ostream<char16_t, std::char_traits<char16_t> >::write(char16_t const*, long) [clone .isra.0]
lea rdx, [rbx + 0x200]
pxor xmm2, xmm2
movdqa xmm5, xmmword [rsp]
cmp r13, rdx
movdqa xmm4, xmmword [var_10h]
movdqa xmm8, xmmword [var_20h]
movdqa xmm7, xmmword [var_30h]
movdqa xmm6, xmmword [var_40h]
movdqa xmm3, xmmword [var_50h]
je 0x8002149
mov rsi, r12
jmp 0x8002010
add rbp, qword [var_88h]
mov rsi, r12
cmp qword [var_60h], 0
jne 0x8002184
add rsp, 0xcb8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
add rsp, 0xcb8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp _ZN5boost3log12v2s_mt_posix3aux17dump_data_genericIDsEEvPKvmRSt13basic_ostreamIT_St11char_traitsIS7_EE
test qword [arg_68h], 0x1f0
je 0x80022cd
mov rcx, qword [arg_60h]
mov rax, r12
mov rdx, rbp
movdqa xmm5, xmmword [arg_70h]
movdqa xmm4, xmmword [0x080021ac]
movdqa xmm7, xmmword [0x080021b4]
pxor xmm2, xmm2
movdqa xmm8, xmmword [0x080021c1]
movdqa xmm6, xmmword [0x080021c9]
lea rdi, [rbp + rcx]
movdqa xmm3, xmmword [0x080021d6]
movdqa xmm1, xmmword [rdx]
movdqa xmm0, xmm5
add rdx, 0x10
mov rcx, rdi
sub rcx, rdx
add rax, 0x60
movdqa xmm9, xmm1
pand xmm1, xmm4
psrlw xmm9, 4
pand xmm9, xmm4
pshufb xmm0, xmm9
movdqa xmm9, xmm5
pshufb xmm9, xmm1
movdqa xmm10, xmm0
punpcklbw xmm10, xmm9
punpckhbw xmm0, xmm9
movdqa xmm1, xmm0
movdqa xmm9, xmm10
pshufb xmm0, xmm6
palignr xmm1, xmm10, 0xa
pshufb xmm9, xmm8
pmaxub xmm0, xmm3
pmaxub xmm9, xmm3
pshufb xmm1, xmm7
pmaxub xmm1, xmm3
movdqa xmm10, xmm9
punpckhbw xmm9, xmm2
movaps xmmword [rax - 0x50], xmm9
movdqa xmm9, xmm1
punpckhbw xmm1, xmm2
punpcklbw xmm10, xmm2
movaps xmmword [rax - 0x30], xmm1
movdqa xmm1, xmm0
punpcklbw xmm9, xmm2
punpckhbw xmm0, xmm2
punpcklbw xmm1, xmm2
movaps xmmword [rax - 0x60], xmm10
movaps xmmword [rax - 0x40], xmm9
movaps xmmword [rax - 0x20], xmm1
movaps xmmword [rax - 0x10], xmm0
cmp rcx, 0xf
ja 0x80021d6
mov rax, qword [arg_60h]
sub rax, 0x10
shr rax, 4
add rax, 1
lea rdx, [rax + rax*2]
shl rax, 4
add rbp, rax
mov rax, qword [arg_68h]
shl rdx, 5
add r12, rdx
and eax, 0xf
mov qword [arg_60h], rax
je 0x8002320
mov ecx, 1
sub ecx, ebp
movzx eax, byte [rbp]
mov edx, 0x20
mov rdi, qword [arg_80h]
add r12, 6
mov word [r12 - 6], dx
mov rdx, rax
and eax, 0xf
shr rdx, 4
movsx ax, byte [rdi + rax]
and edx, 0xf
movsx dx, byte [rdi + rdx]
mov word [r12 - 2], ax
lea eax, [rcx + rbp]
add rbp, 1
mov word [r12 - 4], dx
cmp qword [arg_60h], rax
ja 0x80022d4
mov rdx, r12
mov rdi, r15
sub rdx, rsi
sar rdx, 1
call method std::basic_ostream<char16_t, std::char_traits<char16_t> >::write(char16_t const*, long) [clone .isra.0]
jmp 0x800215c
lddqu xmm1, xmmword [rdi]
movdqa xmm0, xmm6
lea rdx, [rax + rax*2 - 1]
mov rdi, r15
movdqa xmm4, xmmword [0x0800234e]
add rbp, r13
movdqa xmm2, xmm1
psrlw xmm2, 4
pand xmm1, xmm4
pand xmm2, xmm4
pshufb xmm0, xmm2
movdqa xmm2, xmm6
pshufb xmm2, xmm1
movdqa xmm3, xmm0
punpckhbw xmm0, xmm2
punpcklbw xmm3, xmm2
movdqa xmm1, xmm0
movdqa xmm2, xmm3
pshufb xmm0, xmmword [0x0800238d]
pshufb xmm2, xmmword [0x08002396]
palignr xmm1, xmm3, 0xa
movdqa xmm3, xmmword [0x080023a4]
pshufb xmm1, xmmword [0x080023ad]
pmaxub xmm2, xmm3
pmaxub xmm1, xmm3
pmaxub xmm3, xmm0
pxor xmm0, xmm0
movdqa xmm4, xmm2
punpckhbw xmm2, xmm0
punpcklbw xmm4, xmm0
movaps xmmword [r12 + 0x10], xmm2
movdqa xmm2, xmm1
punpckhbw xmm1, xmm0
movaps xmmword [r12 + 0x30], xmm1
movdqa xmm1, xmm3
punpcklbw xmm2, xmm0
punpckhbw xmm3, xmm0
punpcklbw xmm1, xmm0
movaps xmmword [r12], xmm4
movaps xmmword [r12 + 0x20], xmm2
movaps xmmword [r12 + 0x40], xmm1
movaps xmmword [r12 + 0x50], xmm3
call method std::basic_ostream<char16_t, std::char_traits<char16_t> >::write(char16_t const*, long) [clone .isra.0]
sub qword [var_68h], r13
mov rsi, r12
jmp 0x8001fa6
