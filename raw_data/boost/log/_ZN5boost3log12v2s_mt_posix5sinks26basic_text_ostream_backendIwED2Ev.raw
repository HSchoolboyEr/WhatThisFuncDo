push r14
push r13
push r12
push rbp
push rbx
mov r13, qword [rdi]
test r13, r13
je 0x8000750
mov rbx, qword [r13 + 8]
mov r12, qword [r13]
cmp rbx, r12
je 0x8000724
lea r14, [0x080006c8]
jmp 0x80006d9
nop word [rax + rax]
add r12, 0x10
cmp rbx, r12
je 0x8000720
mov rbp, qword [r12 + 8]
test rbp, rbp
je 0x80006d0
lock sub dword [arg_8h], 1
jne 0x80006d0
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x80006d0
mov rax, qword [rbp]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r14
jne 0x8000760
call qword [rax + 8]
add r12, 0x10
cmp rbx, r12
jne 0x80006d9
nop word [rax + rax]
mov r12, qword [r13]
test r12, r12
je 0x8000738
mov rsi, qword [r13 + 0x10]
mov rdi, r12
sub rsi, r12
call _ZdlPvm
pop rbx
mov rdi, r13
pop rbp
mov esi, 0x20
pop r12
pop r13
pop r14
jmp _ZdlPvm
nop dword [rax]
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
call rdx
jmp 0x80006d0
