push r13
lea rax, [0x08000e49]
lea r13, [0x08000e50]
push r12
movq xmm0, rax
movq xmm1, r13
push rbp
punpcklqdq xmm0, xmm1
push rbx
mov rbx, rdi
mov edi, 0x48
sub rsp, 0x28
movaps xmmword [rsp], xmm0
call _Znwm
movdqa xmm0, xmmword [rsp]
movdqu xmm2, xmmword [rbx + 0x10]
mov rbp, qword [rbx + 0x28]
mov r12, rax
movups xmmword [rax], xmm0
movups xmmword [rax + 0x10], xmm2
lea rax, [0x08000e96]
mov qword [r12 + 0x20], rax
mov qword [r12 + 0x28], rbp
test rbp, rbp
je 0x8000eb3
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
mov rbp, qword [rbx + 0x28]
mov rdi, qword [rbx + 0x40]
movdqu xmm3, xmmword [rbx + 0x30]
mov rdx, qword [rbx + 0x30]
mov rsi, qword [rbx + 0x38]
mov eax, dword [rbx + 0x40]
mov ecx, dword [rbx + 0x44]
mov qword [r12 + 0x40], rdi
lea rdi, [0x08000ed6]
lea r8, [rdi - 0x30]
movq xmm4, rdi
add rdi, 0x28
movups xmmword [r12 + 0x30], xmm3
movq xmm0, r8
mov qword [r12 + 0x20], rdi
punpcklqdq xmm0, xmm4
movups xmmword [r12], xmm0
test rbp, rbp
je 0x8000f42
mov rax, qword [rbp]
lea rdi, [var_18h]
mov rsi, rbp
call qword [rax + 0x28]
mov rbp, qword [var_18h]
test rbp, rbp
je 0x8000f34
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
mov rdi, qword [var_18h]
test rdi, rdi
je 0x8000f34
mov rax, qword [rdi]
call qword [rax + 0x20]
mov rsi, qword [rbx + 0x38]
mov eax, dword [rbx + 0x40]
mov rdx, qword [rbx + 0x30]
mov ecx, dword [rbx + 0x44]
movq xmm0, rdx
movq xmm5, rsi
movd xmm6, ecx
mov rdi, qword [r12 + 0x28]
punpcklqdq xmm0, xmm5
movups xmmword [r12 + 0x30], xmm0
movd xmm0, eax
punpckldq xmm0, xmm6
movq qword [r12 + 0x40], xmm0
test rdi, rdi
je 0x8000f79
mov rax, qword [rdi]
call qword [rax + 0x20]
mov qword [r12 + 0x28], rbp
test rbp, rbp
je 0x8000f97
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x20]
add rsp, 0x28
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
ret
