push r15
push r14
push r13
push r12
mov r12, rsi
push rbp
push rbx
sub rsp, 0x18
mov rbp, qword [rdi + 0x48]
mov rsi, qword [rdi + 0x28]
mov rax, qword [rdi + 0x30]
sub rax, qword [rdi + 0x38]
mov r13, rbp
sar rax, 6
sub r13, rsi
lea rdx, [r13 + rax - 8]
mov rax, qword [rdi + 0x20]
sub rax, qword [rdi + 0x10]
sar rax, 6
add rax, rdx
movabs rdx, 0x1ffffffffffffff
cmp rax, rdx
je .LC9
mov rcx, qword [rdi]
mov rdx, qword [rdi + 8]
mov rax, rbp
mov rbx, rdi
sub rax, rcx
mov rdi, rdx
sar rax, 3
sub rdi, rax
cmp rdi, 1
jbe 0x8004390
mov edi, 0x200
call _Znwm
mov qword [arg_8h], rax
mov rbp, qword [rbx + 0x30]
and qword [rbp], 1
lea rdi, [arg_30h]
mov qword [arg_8h], 0
mov qword [arg_10h], 0
mov eax, dword [r12 + 0x18]
mov qword [arg_20h], rdi
mov dword [arg_18h], eax
mov r13, qword [r12 + 0x20]
mov r12, qword [r12 + 0x28]
mov rax, r13
add rax, r12
je 0x8004328
test r13, r13
je .LC3
mov qword [var_8h], r12
cmp r12, 0xf
ja 0x8004460
cmp r12, 1
jne 0x8004380
movzx eax, byte [r13]
mov byte [arg_30h], al
mov qword [arg_28h], r12
mov byte [rdi + r12], 0
mov rax, qword [rbx + 0x48]
lea rdx, [rax + 8]
mov qword [rbx + 0x48], rdx
mov rax, qword [rax + 8]
lea rdx, [rax + 0x200]
mov qword [rbx + 0x38], rax
mov qword [rbx + 0x40], rdx
mov qword [rbx + 0x30], rax
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
test r12, r12
je 0x8004345
jmp 0x8004480
nop word [rax + rax]
mov r14, r13
sar r14, 3
add r14, 2
lea rax, [r14 + r14]
cmp rdx, rax
ja 0x80044a0
test rdx, rdx
mov eax, 1
cmovne rax, rdx
lea rbp, [rdx + rax + 2]
movabs rax, 0xfffffffffffffff
cmp rbp, rax
ja _ZSt17__throw_bad_allocv
lea rdi, [rbp*8]
call _Znwm
mov rsi, qword [rbx + 0x28]
mov r15, rax
mov rax, rbp
sub rax, r14
shr rax, 1
lea r14, [r15 + rax*8]
mov rax, qword [rbx + 0x48]
lea rdx, [rax + 8]
cmp rdx, rsi
je 0x8004405
sub rdx, rsi
mov rdi, r14
call memmove
mov rax, qword [rbx + 8]
mov rdi, qword [rbx]
lea rsi, [rax*8]
call _ZdlPvm
mov qword [rbx], r15
mov qword [rbx + 8], rbp
mov qword [rbx + 0x28], r14
mov rax, qword [r14]
lea rbp, [r14 + r13]
movq xmm0, qword [r14]
mov qword [rbx + 0x48], rbp
add rax, 0x200
movq xmm1, rax
punpcklqdq xmm0, xmm1
movups xmmword [rbx + 0x18], xmm0
mov rax, qword [rbp]
mov qword [rbx + 0x38], rax
add rax, 0x200
mov qword [rbx + 0x40], rax
jmp 0x80042d6
nop
lea rsi, [var_8h]
lea rdi, [arg_20h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [arg_20h], rax
mov rdi, rax
mov rax, qword [var_8h]
mov qword [arg_30h], rax
mov rdx, r12
mov rsi, r13
call memcpy
mov r12, qword [var_8h]
mov rdi, qword [arg_20h]
jmp 0x8004345
nop dword [rax]
sub rdx, r14
add rbp, 8
shr rdx, 1
lea r14, [rcx + rdx*8]
mov rdx, rbp
sub rdx, rsi
cmp rsi, r14
jbe 0x80044d0
cmp rsi, rbp
je 0x8004420
mov rdi, r14
call memmove
jmp 0x8004420
nop
cmp rsi, rbp
je 0x8004420
lea rdi, [r13 + 8]
sub rdi, rdx
add rdi, r14
call memmove
jmp 0x8004420
lea rdi, [0x080044f4]
call _ZSt19__throw_logic_errorPKc
lea rdi, [0x08004500]
call _ZSt20__throw_length_errorPKc
add byte [rax], al
add byte [rax], al
call _ZSt17__throw_bad_allocv
mov rdi, rax
call __cxa_begin_catch
mov rax, qword [rbx + 0x48]
mov esi, 0x200
mov rdi, qword [rax + 8]
call _ZdlPvm
call __cxa_rethrow
mov rbp, rax
call __cxa_end_catch
mov rdi, rbp
call _Unwind_Resume
