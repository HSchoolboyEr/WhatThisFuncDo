push r12
push rbp
push rbx
mov rbx, qword [rdi + 0x20]
mov r12, qword [rdi + 0x28]
cmp rbx, r12
je 0x800146f
cmp byte [rdi + 0x50], 0
mov rbp, rdi
je 0x8001480
mov rax, r12
sub rbx, r12
sar rbx, 2
movsxd rbx, ebx
lea rax, [rax + rbx*4]
mov qword [arg_28h], rax
pop rbx
xor eax, eax
pop rbp
pop r12
ret
nop word cs:[rax + rax]
mov rdi, qword [rdi + 0x40]
mov rdx, r12
mov rax, qword [arg_48h]
sub rdx, rbx
mov rcx, qword [rdi + 8]
sar rdx, 2
cmp rcx, rax
jae 0x80014c8
movabs rsi, 0xfffffffffffffff
sub rax, rcx
sub rsi, rcx
cmp rdx, rax
ja 0x80014e0
cmp rdx, rsi
jbe 0x80014cf
lea rdi, [0x080014bc]
call _ZSt20__throw_length_errorPKc
add byte [rax], al
add byte [rax], al
nop dword [rax]
xor eax, eax
test rdx, rdx
jne 0x80014e5
mov rsi, rbx
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwm
mov rax, qword [arg_28h]
jmp 0x800145d
nop dword [rax]
cmp rax, rsi
ja 0x80014b5
mov rdx, rax
mov rsi, rbx
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwm
mov byte [arg_50h], 1
mov rax, qword [arg_28h]
jmp 0x800145d
