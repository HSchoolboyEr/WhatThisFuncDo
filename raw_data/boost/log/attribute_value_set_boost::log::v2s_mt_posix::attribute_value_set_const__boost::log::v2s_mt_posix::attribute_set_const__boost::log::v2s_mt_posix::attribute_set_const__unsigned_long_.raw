push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x58
mov rax, qword [rcx]
mov rbp, qword [rsi]
mov qword [var_18h], rdi
mov qword [var_8h], rax
mov rax, qword [rdx]
mov qword [var_20h], rsi
mov qword [var_10h], rax
mov rax, qword [rbp]
mov qword [var_28h], rdx
mov qword [var_30h], rcx
mov qword [var_38h], r8
test rax, rax
je 0x8001a18
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [rsp], rax
cmp r14, rax
jne 0x8001ce6
nop dword [rax + rax]
mov qword [rbp], 0
mov rax, qword [arg_8h]
test rax, rax
je 0x8001a48
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [rsp], rax
cmp r14, rax
jne 0x8001df6
nop word cs:[rax + rax]
mov qword [arg_8h], 0
mov rax, qword [arg_10h]
test rax, rax
je 0x8001a78
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [rsp], rax
cmp r14, rax
jne 0x8001f06
nop word cs:[rax + rax]
mov qword [arg_10h], 0
mov rax, qword [var_30h]
mov r8, qword [var_38h]
mov rax, qword [rax]
add r8, qword [rax]
mov rax, qword [var_28h]
mov rax, qword [rax]
add r8, qword [rax]
add r8, qword [arg_18h]
lea rax, [r8 + r8*4]
lea rbx, [rax*8]
lea rdi, [rbx + 0x140]
call malloc
mov rdx, rax
test rax, rax
je .text.unlikely
lea rax, [rax + 0x140]
lea r9, [rdx + 0x20]
mov rsi, qword [var_10h]
mov rdi, qword [var_8h]
mov qword [rdx + 0x30], rax
add rax, rbx
movq xmm0, r9
mov qword [rdx + 0x38], rax
mov rax, qword [var_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rdx + 0x20], xmm0
pxor xmm0, xmm0
mov r8, qword [rax]
mov qword [rdx], 0
mov qword [rdx + 8], rsi
mov qword [rdx + 0x10], rdi
add r8, 0x20
mov qword [rdx + 0x18], 0
movups xmmword [rdx + 0x40], xmm0
movups xmmword [rdx + 0x50], xmm0
movups xmmword [rdx + 0x60], xmm0
movups xmmword [rdx + 0x70], xmm0
movups xmmword [rdx + 0x80], xmm0
movups xmmword [rdx + 0x90], xmm0
movups xmmword [rdx + 0xa0], xmm0
movups xmmword [rdx + 0xb0], xmm0
movups xmmword [rdx + 0xc0], xmm0
movups xmmword [rdx + 0xd0], xmm0
movups xmmword [rdx + 0xe0], xmm0
movups xmmword [rdx + 0xf0], xmm0
movups xmmword [rdx + 0x100], xmm0
movups xmmword [rdx + 0x110], xmm0
movups xmmword [rdx + 0x120], xmm0
movups xmmword [rdx + 0x130], xmm0
mov rsi, qword [r8 + 8]
cmp rsi, r8
je 0x8001be8
nop dword [rax]
mov rax, qword [rdx + 0x30]
lea rcx, [rax + 0x28]
mov qword [rdx + 0x30], rcx
mov rcx, qword [rsi + 0x18]
test rcx, rcx
je 0x8001b9a
lock add dword [rcx + 8], 1
movups xmmword [rax], xmm0
mov edi, dword [rsi + 0x10]
mov byte [rax + 0x20], 0
mov dword [rax + 0x10], edi
mov qword [rax + 0x18], rcx
mov rcx, qword [rdx + 0x20]
mov qword [rax + 8], r9
mov qword [rax], rcx
mov qword [rdx + 0x20], rax
mov qword [rcx + 8], rax
add qword [rdx + 0x18], 1
mov ecx, dword [rax + 0x10]
and ecx, 0xf
shl rcx, 4
add rcx, rdx
cmp qword [rcx + 0x40], 0
je 0x8001f30
mov qword [rcx + 0x48], rax
mov rsi, qword [rsi + 8]
cmp r8, rsi
jne 0x8001b80
mov rax, qword [var_18h]
mov qword [rax], rdx
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
jne 0x8001c1c
jmp 0x8001c21
nop
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
je 0x8001c21
cmp r12d, eax
ja 0x8001c10
cmp r12d, eax
je 0x8001cd8
mov rsi, qword [r14 + 0x18]
lea rdi, [0x08001c35]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rdi
jne 0x8002060
lock add dword [rsi + 8], 1
mov qword [var_48h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x8002078
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_48h]
mov qword [rax + 0x18], rdx
mov qword [var_48h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x8001f90
cmp rbx, qword [r13 + 0x48]
je 0x8001ff0
cmp rbx, rdx
je 0x8002110
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_48h]
test rdi, rdi
je 0x8001cd8
lock sub dword [rdi + 8], 1
jne 0x8001cd8
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax + rax]
mov r14, qword [r14 + 8]
cmp qword [rsp], r14
je 0x8001a10
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x8001c2a
jmp 0x8001c00
nop dword [rax]
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rdx, rbx
jne 0x8001d2c
jmp 0x8001d31
nop
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rdx, rbx
je 0x8001d31
cmp r12d, eax
ja 0x8001d20
cmp r12d, eax
je 0x8001de8
mov rsi, qword [r14 + 0x18]
lea rdi, [0x08001d45]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rdi
jne 0x80020b0
lock add dword [rsi + 8], 1
mov qword [var_48h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x80020c8
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_48h]
mov qword [rax + 0x18], rdx
mov qword [var_48h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x8001f70
cmp rbx, qword [r13 + 0x48]
je 0x8001fd0
cmp rbx, rdx
je 0x8002100
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_48h]
test rdi, rdi
je 0x8001de8
lock sub dword [rdi + 8], 1
jne 0x8001de8
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax + rax]
mov r14, qword [r14 + 8]
cmp qword [rsp], r14
je 0x8001a40
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x8001d3a
jmp 0x8001d10
nop dword [rax]
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
jne 0x8001e3c
jmp 0x8001e41
nop
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
je 0x8001e41
cmp eax, r12d
jb 0x8001e30
cmp r12d, eax
je 0x8001ef8
mov rsi, qword [r14 + 0x18]
lea rdi, [0x08001e55]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rdi
jne 0x8002010
lock add dword [rsi + 8], 1
mov qword [var_48h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x8002028
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_48h]
mov qword [rax + 0x18], rdx
mov qword [var_48h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x8001f50
cmp rbx, qword [r13 + 0x48]
je 0x8001fb0
cmp rbx, rdx
je 0x8002120
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_48h]
test rdi, rdi
je 0x8001ef8
lock sub dword [rdi + 8], 1
jne 0x8001ef8
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax + rax]
mov r14, qword [r14 + 8]
cmp qword [rsp], r14
je 0x8001a70
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x8001e4a
jmp 0x8001e20
nop dword [rax]
mov qword [rcx + 0x40], rax
mov qword [rcx + 0x48], rax
mov rsi, qword [rsi + 8]
cmp rsi, r8
jne 0x8001b80
jmp 0x8001be8
nop word [rax + rax]
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x8001ec6
nop dword [rax]
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x8001db6
nop dword [rax]
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x8001ca6
nop dword [rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x8001ebd
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x8001ec6
nop word [rax + rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x8001dad
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x8001db6
nop word [rax + rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x8001c9d
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x8001ca6
nop word [rax + rax]
lea rdi, [var_48h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x8001e7d
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_48h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_48h], 0
jmp 0x8001ea6
nop dword [rax + rax]
lea rdi, [var_48h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x8001c5d
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_48h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_48h], 0
jmp 0x8001c86
nop dword [rax + rax]
lea rdi, [var_48h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x8001d6d
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_48h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_48h], 0
jmp 0x8001d96
nop dword [rax + rax]
mov qword [r13 + 0x40], rax
jmp 0x8001db6
nop dword [rax]
mov qword [r13 + 0x40], rax
jmp 0x8001ca6
nop dword [rax]
mov qword [r13 + 0x40], rax
jmp 0x8001ec6
