push r14
mov rdx, rsi
mov r8, rdi
push r13
push r12
push rbp
push rbx
mov rax, qword [rdi]
mov rsi, qword [rax + 8]
mov rdi, qword [rax]
call .text
mov r13, qword [r8]
mov rdx, qword [r13 + 8]
cmp rdx, rax
je 0x800083c
lea rbx, [rax + 0x10]
cmp rdx, rbx
je 0x8000824
mov rax, rdx
sub rax, rbx
mov r12, rax
sar r12, 4
test rax, rax
jle 0x8000880
lea r14, [0x080007c3]
jmp 0x80007d2
nop dword [rax]
add rbx, 0x10
sub r12, 1
je 0x8000820
movdqu xmm0, xmmword [rbx]
mov rbp, qword [rbx - 8]
pxor xmm1, xmm1
movups xmmword [rbx], xmm1
movups xmmword [rbx - 0x10], xmm0
test rbp, rbp
je 0x80007c8
lock sub dword [arg_8h], 1
jne 0x80007c8
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x80007c8
mov rax, qword [rbp]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r14
jne 0x8000888
call qword [rax + 8]
add rbx, 0x10
sub r12, 1
jne 0x80007d2
nop
mov rbx, qword [r13 + 8]
lea rax, [rbx - 0x10]
mov qword [r13 + 8], rax
mov rbp, qword [rbx - 8]
test rbp, rbp
je 0x800083c
lock sub dword [arg_8h], 1
je 0x8000848
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x800083c
mov rax, qword [rbp]
lea rcx, [0x08000864]
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x800088f
pop rbx
mov rdi, rbp
mov rax, qword [rax + 8]
pop rbp
pop r12
pop r13
pop r14
jmp rax
nop
mov rbx, rdx
jmp 0x8000824
nop dword [rax]
call rdx
jmp 0x80007c8
mov rdi, rbp
call rdx
jmp 0x800083c
