push r12
pxor xmm0, xmm0
push rbp
push rbx
mov rbp, qword [rdi + 0x10]
mov rbx, rdi
movups xmmword [rdi + 8], xmm0
test rbp, rbp
je 0x800f006
mov r12, qword [0x0800efef]
test r12, r12
jne 0x800f0a0
mov eax, dword [arg_8h]
lea edx, [rax - 1]
mov dword [arg_8h], edx
cmp eax, 1
je 0x800f040
mov rax, qword [rbx + 0x30]
lea rdi, [rbx + 0x18]
call qword [rax]
mov rbp, qword [rbx + 0x10]
test rbp, rbp
je 0x800f037
mov r12, qword [0x0800f020]
test r12, r12
jne 0x800f0b0
mov eax, dword [arg_8h]
lea edx, [rax - 1]
mov dword [arg_8h], edx
cmp eax, 1
je 0x800f070
pop rbx
pop rbp
pop r12
ret
nop dword [rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
test r12, r12
jne 0x800f0c0
mov eax, dword [arg_ch]
lea edx, [rax - 1]
mov dword [arg_ch], edx
cmp eax, 1
jne 0x800f006
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
jmp 0x800f006
nop dword [rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
test r12, r12
jne 0x800f0d0
mov eax, dword [arg_ch]
lea edx, [rax - 1]
mov dword [arg_ch], edx
cmp eax, 1
jne 0x800f037
mov rax, qword [rbp]
pop rbx
mov rdi, rbp
pop rbp
pop r12
mov rax, qword [rax + 0x18]
jmp rax
nop
mov eax, 0xffffffff
lock xadd dword [arg_8h], eax
jmp 0x800f001
nop
mov eax, 0xffffffff
lock xadd dword [arg_8h], eax
jmp 0x800f032
nop
mov eax, 0xffffffff
lock xadd dword [arg_ch], eax
jmp 0x800f058
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [arg_ch], eax
jmp 0x800f088
