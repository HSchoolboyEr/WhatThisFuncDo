push r13
mov r13d, esi
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 8
mov rbp, qword [rdi + 0x20]
mov r12, qword [rdi + 0x28]
cmp rbp, r12
je 0x800153c
cmp byte [rdi + 0x50], 0
je 0x80015a8
mov rax, r12
sub rbp, r12
sar rbp, 2
movsxd rbp, ebp
lea rax, [rax + rbp*4]
mov qword [rbx + 0x28], rax
xor eax, eax
cmp r13d, 0xffffffff
je 0x800159a
cmp byte [rbx + 0x50], 0
mov eax, r13d
jne 0x800159a
mov rbp, qword [rbx + 0x40]
mov r12, qword [arg_8h]
cmp r12, qword [rbx + 0x48]
jae 0x8001660
mov rax, qword [rbp]
lea rdx, [arg_10h]
lea rbx, [r12 + 1]
cmp rax, rdx
je 0x8001630
mov rdx, qword [arg_10h]
cmp rbx, rdx
ja 0x8001610
mov dword [rax + r12*4], r13d
mov rax, qword [rbp]
mov qword [arg_8h], rbx
mov dword [rax + r12*4 + 4], 0
mov eax, r13d
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rdi, qword [rdi + 0x40]
mov rdx, r12
mov rax, qword [rbx + 0x48]
sub rdx, rbp
mov rcx, qword [rdi + 8]
sar rdx, 2
cmp rcx, rax
jae 0x80015f0
movabs rsi, 0xfffffffffffffff
sub rax, rcx
sub rsi, rcx
cmp rdx, rax
ja 0x8001640
cmp rdx, rsi
jbe 0x80015f7
lea rdi, [0x080015e4]
call _ZSt20__throw_length_errorPKc
nop dword [rax]
xor eax, eax
test rdx, rdx
jne 0x8001645
mov rsi, rbp
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwm
mov rax, qword [rbx + 0x28]
jmp 0x800152a
nop dword [rax + rax]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r12
mov rdi, rbp
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEmmPKwm
mov rax, qword [rbp]
jmp 0x8001582
nop
mov edx, 3
jmp 0x8001579
nop word [rax + rax]
cmp rax, rsi
ja 0x80015dd
mov rdx, rax
mov rsi, rbp
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwm
mov byte [rbx + 0x50], 1
mov rax, qword [rbx + 0x28]
jmp 0x800152a
nop dword [rax]
mov byte [rbx + 0x50], 1
jmp 0x800159a
