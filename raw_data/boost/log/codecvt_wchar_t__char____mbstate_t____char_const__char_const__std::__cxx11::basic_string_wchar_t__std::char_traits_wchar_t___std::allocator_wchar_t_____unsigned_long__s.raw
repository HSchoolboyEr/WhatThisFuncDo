push r15
push r14
push r13
push r12
mov r12, rdx
mov edx, 0x100
push rbp
push rbx
sub rsp, 0x468
cmp rcx, 0x100
mov qword [var_10h], rdi
cmovbe rdx, rcx
mov qword [var_18h], rdi
mov qword [var_38h], 0
cmp rsi, rdi
je 0x8001a2c
mov rbp, rcx
test rcx, rcx
je 0x8001a2c
mov rax, rdi
lea rdi, [var_38h]
mov rbx, rsi
mov r14, r8
mov qword [var_8h], rdi
lea rdi, [var_28h]
lea r13, [var_60h]
mov r10, rax
mov qword [rsp], rdi
lea r15, [var_18h]
mov rax, qword [r14]
lea rdx, [r13 + rdx*4]
mov qword [var_28h], r13
mov rcx, rbx
push qword [rsp]
mov r9, r13
mov r8, r15
mov rdi, r14
push rdx
mov rdx, r10
mov rsi, qword [var_8h]
call qword [rax + 0x20]
pop rdx
pop rcx
cmp eax, 1
je 0x80018f0
cmp eax, 3
jne 0x80018d0
mov r13, qword [var_18h]
mov rdx, qword [r12 + 8]
mov rax, qword [r12]
sub rbx, r13
cmp rbx, rbp
lea r15, [rax + rdx*4]
cmova rbx, rbp
lea rbp, [var_50h]
mov qword [var_40h], rbp
lea r14, [r13 + rbx]
test r13, r13
jne 0x800166a
test r14, r14
jne .LC3
mov qword [var_30h], rbx
mov rax, rbx
mov rcx, rbp
cmp rbx, 3
ja 0x80019d0
cmp r13, r14
je 0x8001862
lea rax, [rcx + rbx*4]
mov rdx, r13
cmp r13, rax
setae sil
cmp r14, rcx
setbe al
or sil, al
je 0x8001a00
mov rax, r13
not rax
add rax, r14
cmp rax, 0xe
jbe 0x8001a00
mov rsi, rbx
pxor xmm5, xmm5
pxor xmm3, xmm3
mov rax, rcx
and rsi, 0xfffffffffffffff0
add rsi, r13
nop dword [rax]
movdqu xmm0, xmmword [rdx]
movdqa xmm2, xmm5
add rdx, 0x10
add rax, 0x40
pcmpgtb xmm2, xmm0
movdqa xmm1, xmm0
punpcklbw xmm1, xmm2
punpckhbw xmm0, xmm2
movdqa xmm2, xmm3
pcmpgtw xmm2, xmm1
movdqa xmm4, xmm1
punpckhwd xmm1, xmm2
punpcklwd xmm4, xmm2
movdqa xmm2, xmm0
movups xmmword [rax - 0x30], xmm1
movdqa xmm1, xmm3
pcmpgtw xmm1, xmm0
movups xmmword [rax - 0x40], xmm4
punpcklwd xmm2, xmm1
punpckhwd xmm0, xmm1
movups xmmword [rax - 0x20], xmm2
movups xmmword [rax - 0x10], xmm0
cmp rdx, rsi
jne 0x80016d0
mov rdx, rbx
and rdx, 0xfffffffffffffff0
add r13, rdx
lea rax, [rcx + rdx*4]
cmp rbx, rdx
je 0x8001858
movsx edx, byte [r13]
mov dword [rax], edx
lea rdx, [r13 + 1]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 1]
mov dword [rax + 4], edx
lea rdx, [r13 + 2]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 2]
mov dword [rax + 8], edx
lea rdx, [r13 + 3]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 3]
mov dword [rax + 0xc], edx
lea rdx, [r13 + 4]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 4]
mov dword [rax + 0x10], edx
lea rdx, [r13 + 5]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 5]
mov dword [rax + 0x14], edx
lea rdx, [r13 + 6]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 6]
mov dword [rax + 0x18], edx
lea rdx, [r13 + 7]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 7]
mov dword [rax + 0x1c], edx
lea rdx, [r13 + 8]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 8]
mov dword [rax + 0x20], edx
lea rdx, [r13 + 9]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 9]
mov dword [rax + 0x24], edx
lea rdx, [r13 + 0xa]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 0xa]
mov dword [rax + 0x28], edx
lea rdx, [r13 + 0xb]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 0xb]
mov dword [rax + 0x2c], edx
lea rdx, [r13 + 0xc]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 0xc]
mov dword [rax + 0x30], edx
lea rdx, [r13 + 0xd]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 0xd]
mov dword [rax + 0x34], edx
lea rdx, [r13 + 0xe]
cmp r14, rdx
je 0x8001858
movsx edx, byte [r13 + 0xe]
mov dword [rax + 0x38], edx
nop dword [rax]
mov rax, qword [var_30h]
mov rcx, qword [var_40h]
mov qword [var_48h], rax
mov rsi, r15
xor edx, edx
mov rdi, r12
mov dword [rcx + rax*4], 0
sub rsi, qword [r12]
mov r8, qword [var_48h]
mov rcx, qword [var_40h]
sar rsi, 2
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEmmPKwm
mov rdi, qword [var_40h]
cmp rdi, rbp
je 0x80018a9
mov rax, qword [var_50h]
lea rsi, [rax*4 + 4]
call _ZdlPvm
add rbx, qword [var_18h]
mov rax, rbx
sub rax, qword [var_10h]
add rsp, 0x468
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
test eax, eax
je 0x8001970
lea rdx, [0x080018df]
mov esi, 0x8b
lea rdi, [0x080018eb]
call _ZN5boost3log12v2s_mt_posix16conversion_error6throw_EPKcmS4_
mov r8, qword [var_28h]
cmp r8, r13
je 0x8001a33
mov rcx, qword [r12 + 8]
sub r8, r13
sar r8, 2
lea rsi, [rcx*4]
sar rsi, 2
cmp rcx, rsi
jb 0x8001a43
xor edx, edx
mov rcx, r13
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEmmPKwm
mov rax, qword [var_28h]
mov rdx, rbp
mov r10, qword [var_18h]
sub rax, r13
sar rax, 2
sub rdx, rax
cmp rdx, 0x100
ja 0x80019b0
cmp r10, rbx
je 0x8001a1f
test rdx, rdx
je 0x8001a1f
mov rbp, rdx
jmp 0x80015f5
nop word cs:[rax + rax]
mov rcx, qword [r12 + 8]
mov r8, qword [var_28h]
lea rsi, [rcx*4]
sub r8, r13
sar rsi, 2
sar r8, 2
cmp rcx, rsi
jae 0x800191f
mov rdx, rsi
lea rdi, [0x0800199c]
lea rsi, [0x080019a3]
call _ZSt24__throw_out_of_range_fmtPKcz
add byte [rax], al
add byte [rax], al
nop dword [rax + rax]
cmp rbx, r10
je 0x80018ae
mov rbp, rdx
mov edx, 0x100
jmp 0x80015f5
nop word cs:[rax + rax]
lea rsi, [var_30h]
lea rdi, [var_40h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm
mov qword [var_40h], rax
mov rcx, rax
mov rax, qword [var_30h]
mov qword [var_50h], rax
jmp 0x800167f
nop dword [rax + rax]
xor eax, eax
nop word [rax + rax]
movsx edx, byte [r13 + rax]
mov dword [rcx + rax*4], edx
add rax, 1
cmp rbx, rax
jne 0x8001a08
jmp 0x8001858
mov rax, r10
sub rax, qword [var_10h]
jmp 0x80018b6
xor eax, eax
jmp 0x80018b6
cmp qword [var_18h], rbx
je 0x80018ae
jmp .LC7
mov rdx, rsi
lea rdi, [0x08001a4d]
xor eax, eax
lea rsi, [0x08001a56]
call _ZSt24__throw_out_of_range_fmtPKcz
lea rdi, [0x08001a62]
call _ZSt19__throw_logic_errorPKc
mov r12, rax
mov rdi, qword [var_40h]
cmp rdi, rbp
je 0x8001a86
mov rax, qword [var_50h]
lea rsi, [rax*4 + 4]
call _ZdlPvm
mov rdi, r12
call _Unwind_Resume
