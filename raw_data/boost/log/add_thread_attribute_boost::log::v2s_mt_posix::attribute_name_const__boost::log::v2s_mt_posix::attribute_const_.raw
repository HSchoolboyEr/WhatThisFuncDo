push r15
push r14
push r13
push r12
mov r12, rdx
push rbp
push rbx
mov rbx, rsi
sub rsp, 0xb8
mov r13, qword [rdi]
lea rbp, [r13 + 0x68]
mov rdi, rbp
call _ZN5boost6detail12get_tss_dataEPKv
mov rdi, rax
test rax, rax
je 0x8002870
mov esi, dword [rbx]
add rsp, 0xb8
mov rdx, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp _ZN5boost3log12v2s_mt_posix13attribute_set6insertENS1_14attribute_nameERKNS1_9attributeE
nop dword [rax]
mov rdi, r13
call pthread_rwlock_wrlock
mov rdi, rbp
call _ZN5boost6detail12get_tss_dataEPKv
test rax, rax
je 0x80028a0
mov rdi, r13
call pthread_rwlock_unlock
mov rdi, rbp
call _ZN5boost6detail12get_tss_dataEPKv
mov rdi, rax
jmp 0x800284e
nop word [rax + rax]
mov edi, 0x18
call _Znwm
mov rdi, rax
mov r15, rax
call _ZN5boost3log12v2s_mt_posix13attribute_setC1Ev
lea rdi, [arg_30h]
xor esi, esi
call gettimeofday
mov rax, qword [arg_30h]
lea rdi, [arg_28h]
mov r14, qword [arg_38h]
mov qword [arg_28h], rax
lea rax, [arg_70h]
mov rsi, rax
mov qword [arg_10h], rax
call gmtime_r
mov rsi, rax
test rax, rax
je 0x8002c49
mov ecx, dword [rax + 0xc]
test cx, cx
je 0x8002c44
cmp cx, 0x1f
ja 0x8002c3f
mov r8d, dword [rax + 0x10]
mov edx, r8d
add dx, 1
je .text.unlikely
cmp dx, 0xc
ja .text.unlikely
mov eax, dword [rax + 0x14]
lea edi, [rax + 0x76c]
cmp di, 0x577
jbe .text.unlikely
cmp di, 0x270f
ja .text.unlikely
cmp dx, 0xb
ja 0x80029f0
lea r11, [0x08002954]
movzx r10d, dx
movsxd r9, dword [r11 + r10*4]
add r9, r11
jmp r9
nop word [rax + rax]
mov r9d, 0x1e
cmp cx, r9w
jbe 0x80029f0
lea rbp, [rsp + 0x50]
lea r12, [rsp + 0x40]
xor edx, edx
mov qword [rsp + 0x40], 0x22
lea rbx, [rsp + 0x60]
mov rsi, r12
mov rdi, rbp
mov qword [rsp + 0x50], rbx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov rdx, qword [rsp + 0x40]
mov qword [rsp + 0x50], rax
mov rsi, rbp
mov rdi, r12
movdqa xmm0, xmmword [0x080029b6]
mov qword [rsp + 0x60], rdx
mov edx, 0x7261
movups xmmword [rax], xmm0
movdqa xmm0, xmmword [0x080029cb]
mov word [rax + 0x20], dx
movups xmmword [rax + 0x10], xmm0
mov rax, qword [rsp + 0x40]
mov rdx, qword [rsp + 0x50]
mov qword [rsp + 0x58], rax
mov byte [rdx + rax], 0
call _ZNSt12out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
jmp .text.unlikely
movsxd r10, dword [rsi + 8]
movsxd r11, dword [rsi + 4]
mov edi, r14d
mov qword [rsp], rdi
movsxd rdi, dword [rsi]
mov qword [arg_18h], r10
mov rsi, r10
shr r10, 0x3f
mov r9, r10
mov r10, r11
mov qword [arg_8h], rdi
mov r14, rdi
shr r10, 0x3f
mov rdi, r11
or r9b, r10b
jne 0x8002a34
cmp qword [arg_8h], 0
jns 0x8002c13
mov r9d, esi
sar r9d, 0x1f
xor esi, r9d
sub esi, r9d
mov r9d, edi
sar r9d, 0x1f
imul rsi, rsi, 0xe10
xor edi, r9d
sub edi, r9d
mov r9, rdi
shl r9, 4
sub r9, rdi
mov edi, r14d
sar edi, 0x1f
lea rsi, [rsi + r9*4]
xor r14d, edi
sub r14d, edi
add rsi, r14
imul rsi, rsi, 0xfffffffffff0bdc0
sub rsi, qword [rsp]
movzx edi, dx
mov edx, 0xe
add ax, 0x1a2c
movzx ecx, cx
sub edx, edi
mov edi, 0xaaaaaaab
imul rdx, rdi
shr rdx, 0x23
sub eax, edx
mov edi, eax
shr di, 4
movzx edi, di
imul edi, edi, 0xa3e
shr edi, 0x10
movzx edi, di
lea rcx, [rdi + rcx - 0x7d2d]
mov edi, eax
movzx eax, ax
shr di, 2
imul rax, rax, 0x16d
movzx r9d, di
add rcx, r9
add rcx, rax
movzx eax, di
movabs rdi, 0x141dd76000
imul eax, eax, 0x147b
shr eax, 0x11
movzx eax, ax
sub rcx, rax
lea eax, [rdx + rdx*2]
mov edx, 0xcccccccd
lea eax, [r8 + rax*4 - 2]
movzx eax, ax
imul eax, eax, 0x99
add eax, 2
imul rax, rdx
movabs rdx, 0x32e73fb956a1b897
shr rax, 0x22
lea r14, [rcx + rax]
mov rax, r14
imul rax, rdi
lea r14, [rax + rsi]
mov rax, r14
imul rdx
mov rax, r14
sar rax, 0x3f
sar rdx, 0x22
sub rdx, rax
imul rdx, rdi
sub r14, rdx
call _ZN5boost3log12v2s_mt_posix3aux11this_thread6get_idEv
add r14d, dword [rax]
mov dword [r15 + 8], r14d
cmp r14d, 1
jbe 0x8002bf6
mov dword [r15 + 0xc], r14d
cmp r14d, 7
jbe 0x8002bfe
mov dword [r15 + 0x10], r14d
cmp r14d, 0xf
jbe 0x8002c06
mov rdi, rbp
mov qword [arg_70h], r15
call _ZN5boost6detail12get_tss_dataEPKv
cmp r15, rax
je pthread_rwlock_unlock
mov rdx, qword [r13 + 0x68]
mov r8d, 1
mov rcx, r15
mov rdi, rbp
lea rsi, [0x08002ba4]
call _ZN5boost6detail12set_tss_dataEPKvPFvPFvPvES3_ES5_S3_b
jmp pthread_rwlock_unlock
mov r9d, 0x1c
test dil, 3
jne 0x800296e
imul di, di, 0x5c29
mov r9d, 0x1d
mov r10d, edi
ror r10w, 2
cmp r10w, 0x28f
ja 0x800296e
ror di, 4
xor r9d, r9d
cmp di, 0xa4
setb r9b
add r9d, 0x1c
jmp 0x800296e
lea eax, [r14 + 2]
mov dword [r15 + 8], eax
lea eax, [r14 + 8]
mov dword [r15 + 0xc], eax
add r14d, 0x10
mov dword [r15 + 0x10], r14d
jmp 0x8002b77
imul r9, qword [arg_18h], 0xe10
mov rsi, r11
shl rsi, 4
sub rsi, r11
lea rsi, [r9 + rsi*4]
add rsi, qword [arg_8h]
imul rsi, rsi, 0xf4240
add rsi, qword [rsp]
jmp 0x8002a7d
call method boost::CV::simple_exception_policy<unsigned short, (unsigned short)1, (unsigned short)31, boost::gregorian::bad_day_of_month>::on_error(unsigned short, unsigned short, boost::CV::violation_enum) [clone .isra.0]
call method boost::CV::simple_exception_policy<unsigned short, (unsigned short)1, (unsigned short)31, boost::gregorian::bad_day_of_month>::on_error(unsigned short, unsigned short, boost::CV::violation_enum) [clone .isra.0]
lea rbp, [arg_50h]
lea rsi, [0x08002c55]
mov rdi, rbp
call _ZNSt13runtime_errorC1EPKc
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
nop
nop dword [rax + rax]
