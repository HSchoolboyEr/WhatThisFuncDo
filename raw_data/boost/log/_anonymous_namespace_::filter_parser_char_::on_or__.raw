push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x48
mov rax, qword [rdi + 0x90]
cmp qword [rdi + 0x70], rax
je .LC6
mov rbx, rdi
cmp rax, qword [rdi + 0x98]
je 0x8000838
mov r15, qword [rax - 8]
mov qword [rax - 8], 0
mov rdi, qword [rbx + 0x90]
cmp rdi, qword [rbx + 0x98]
je 0x80008e0
lea rax, [rdi - 8]
mov qword [rbx + 0x90], rax
mov rax, qword [rdi - 8]
test rax, rax
je 0x8000569
mov rdi, rax
call qword [rax + 0x10]
mov r12, qword [rbx + 0x90]
cmp r12, qword [rbx + 0x70]
je 0x800093e
cmp r12, qword [rbx + 0x98]
je 0x80008c0
mov edi, 0x20
call _Znwm
mov r13, rax
lea rsi, [0x0800059b]
lea rax, [0x080005a2]
movq xmm0, rsi
movq xmm1, rax
lea rdx, [0x080005b3]
punpcklqdq xmm0, xmm1
mov qword [r13 + 0x10], rdx
movups xmmword [r13], xmm0
test r15, r15
je 0x80008b0
mov rdi, r15
call qword [r15 + 8]
mov qword [r13 + 0x18], rax
mov rax, qword [r13 + 8]
mov rdi, r13
call rax
mov r14, rax
test rax, rax
je 0x80007e0
mov rdi, r14
call qword [r14 + 8]
mov rbp, rax
mov rdi, r14
call qword [r14 + 0x10]
test rbp, rbp
je 0x80007e0
mov rdi, rbp
call qword [arg_8h]
mov r14, rax
mov rdi, rbp
call qword [arg_10h]
mov rax, qword [r12 - 8]
test rax, rax
je 0x80007f1
mov rdi, rax
call qword [rax + 8]
mov qword [arg_18h], rax
test rax, rax
je 0x80007f1
mov rdi, rax
call qword [rax + 8]
mov rbp, rax
test rax, rax
je 0x80007fa
mov rdi, rax
call qword [rax + 8]
mov r12, rax
mov rdi, rbp
call qword [arg_10h]
test r12, r12
je 0x80007fa
mov rdi, r12
call qword [r12 + 8]
mov rbp, rax
mov qword [arg_8h], rax
mov rdi, r12
call qword [r12 + 0x10]
test rbp, rbp
je 0x80007fa
mov rax, qword [arg_8h]
mov rdi, rax
call qword [rax + 8]
mov qword [arg_20h], rax
test r14, r14
je 0x8000815
mov rdi, r14
call qword [r14 + 8]
mov r12, qword [arg_20h]
mov qword [arg_30h], rax
mov rbp, rax
test r12, r12
je 0x80006c1
mov rdi, r12
call qword [r12 + 8]
mov rbp, qword [arg_30h]
mov r12, rax
test rbp, rbp
je 0x80006df
mov rdi, rbp
call qword [arg_8h]
mov rbp, rax
mov rax, qword [arg_30h]
test rax, rax
je 0x80006df
mov rdi, rax
call qword [rax + 0x10]
mov rax, qword [arg_20h]
test rax, rax
je 0x80006ef
mov rdi, rax
call qword [rax + 0x10]
mov rax, qword [rbx + 0x90]
mov qword [arg_10h], rax
cmp rax, qword [rbx + 0x98]
je 0x8000850
mov edi, 0x38
call _Znwm
mov rbx, rax
lea rsi, [0x0800071c]
lea rax, [0x08000723]
movq xmm2, rax
movq xmm0, rsi
lea rax, [0x08000734]
punpcklqdq xmm0, xmm2
mov qword [rbx + 0x10], rax
movups xmmword [rbx], xmm0
test r12, r12
je 0x80008a0
mov rdi, r12
call qword [r12 + 8]
mov qword [rbx + 0x18], rax
test rbp, rbp
je 0x8000870
mov rdi, rbp
call qword [arg_8h]
mov rcx, qword [arg_10h]
mov qword [rbx + 0x28], rax
mov rax, qword [rcx - 8]
mov qword [rcx - 8], rbx
test rax, rax
je 0x800077f
mov rdi, rax
call qword [rax + 0x10]
mov rdi, rbp
call qword [arg_10h]
test r12, r12
je 0x8000792
mov rdi, r12
call qword [r12 + 0x10]
mov rax, qword [arg_8h]
test rax, rax
je 0x80007a2
mov rdi, rax
call qword [rax + 0x10]
mov rax, qword [arg_18h]
test rax, rax
je 0x80007b2
mov rdi, rax
call qword [rax + 0x10]
test r14, r14
je 0x80007be
mov rdi, r14
call qword [r14 + 0x10]
mov rdi, r13
call qword [r13 + 0x10]
test r15, r15
je 0x80007d1
mov rdi, r15
call qword [r15 + 0x10]
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rax, qword [r12 - 8]
xor r14d, r14d
test rax, rax
jne 0x8000620
mov qword [arg_18h], 0
mov qword [arg_20h], 0
mov qword [arg_8h], 0
test r14, r14
jne 0x8000698
mov qword [arg_30h], 0
mov r12, qword [arg_20h]
xor ebp, ebp
test r12, r12
jne 0x80006b1
jmp 0x80006df
nop dword [rax + rax]
mov rax, qword [rdi + 0xa8]
mov rax, qword [rax - 8]
add rax, 0x200
jmp 0x800052f
nop
mov rax, qword [rbx + 0xa8]
mov rax, qword [rax - 8]
add rax, 0x200
mov qword [arg_10h], rax
jmp 0x8000708
nop dword [rax + rax]
mov rdx, qword [arg_10h]
mov qword [rbx + 0x28], 0
mov rax, qword [rdx - 8]
mov qword [rdx - 8], rbx
test rax, rax
je 0x8000785
mov rdi, rax
call qword [rax + 0x10]
jmp 0x8000785
nop dword [rax]
mov qword [rbx + 0x18], 0
jmp 0x8000754
nop dword [rax]
mov qword [r13 + 0x18], 0
jmp 0x80005d8
nop dword [rax]
mov rax, qword [rbx + 0xa8]
mov r12, qword [rax - 8]
add r12, 0x200
jmp 0x8000587
nop word [rax + rax]
mov esi, 0x200
call _ZdlPvm
mov rax, qword [rbx + 0xa8]
lea rdx, [rax - 8]
mov qword [rbx + 0xa8], rdx
mov rax, qword [rax - 8]
lea rdx, [rax + 0x200]
mov qword [rbx + 0x98], rax
mov qword [rbx + 0xa0], rdx
lea rdx, [rax + 0x1f8]
mov qword [rbx + 0x90], rdx
mov rax, qword [rax + 0x1f8]
test rax, rax
je 0x8000569
mov rdi, rax
call qword [rax + 0x10]
jmp 0x8000569
test r15, r15
je 0x800094a
mov rdi, r15
call qword [r15 + 0x10]
lea rdx, [0x08000951]
mov esi, 0x1d3
lea rdi, [0x0800095d]
call _ZN5boost3log12v2s_mt_posix11parse_error6throw_EPKcmS4_
add byte [rax], al
add byte [rax], al
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov qword [arg_10h], rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
nop
nop word cs:[rax + rax]
nop dword [rax]
