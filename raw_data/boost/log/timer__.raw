push r15
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
mov edi, 0x18
sub rsp, 0x98
call _ZN5boost3log12v2s_mt_posix9attribute4implnwEm
add byte [rax], al
add byte [rax], al
xor esi, esi
lea rdi, [var_10h]
mov dword [rax + 8], 0
mov rbp, rax
lea rax, [0x08000526]
mov qword [rbp], rax
call gettimeofday
mov rax, qword [var_10h]
lea rsi, [var_50h]
lea rdi, [var_8h]
mov r12, qword [var_18h]
mov qword [var_8h], rax
call gmtime_r
test rax, rax
je 0x8000807
mov edi, dword [rax + 0xc]
mov r10, rax
test di, di
je 0x8000825
cmp di, 0x1f
ja 0x8000820
mov esi, dword [rax + 0x10]
mov edx, esi
add dx, 1
je .text.unlikely
cmp dx, 0xc
ja .text.unlikely
mov r8d, dword [rax + 0x14]
lea eax, [r8 + 0x76c]
cmp ax, 0x577
jbe .text.unlikely
cmp ax, 0x270f
ja .text.unlikely
cmp dx, 0xb
ja 0x80005d6
lea r11, [0x080005b4]
movzx r9d, dx
movsxd rcx, dword [r11 + r9*4]
add rcx, r11
jmp rcx
nop dword [rax]
mov ecx, 0x1e
cmp di, cx
ja 0x8000718
movsxd r11, dword [r10 + 4]
movsxd r13, dword [r10]
mov r12d, r12d
movsxd r10, dword [r10 + 8]
mov r14, r11
mov rcx, r13
mov r9, r11
mov r15, r10
shr r14, 0x3f
mov rax, r10
shr r15, 0x3f
or r15b, r14b
jne 0x8000609
test r13, r13
jns 0x80007e0
mov r10d, eax
sar r10d, 0x1f
xor eax, r10d
sub eax, r10d
mov r10d, r9d
sar r10d, 0x1f
imul rax, rax, 0xe10
xor r9d, r10d
sub r9d, r10d
mov r10, r9
shl r10, 4
sub r10, r9
mov r9d, ecx
sar r9d, 0x1f
lea rax, [rax + r10*4]
xor ecx, r9d
sub ecx, r9d
add rcx, rax
imul rcx, rcx, 0xfffffffffff0bdc0
sub rcx, r12
movzx edx, dx
mov eax, 0xe
add r8w, 0x1a2c
movzx edi, di
sub eax, edx
mov edx, 0xaaaaaaab
imul rax, rdx
shr rax, 0x23
sub r8d, eax
lea eax, [rax + rax*2]
mov edx, r8d
lea eax, [rsi + rax*4 - 2]
shr dx, 4
movzx eax, ax
movzx edx, dx
imul eax, eax, 0x99
imul edx, edx, 0xa3e
add eax, 2
shr edx, 0x10
movzx edx, dx
lea rdi, [rdx + rdi - 0x7d2d]
mov edx, r8d
movzx r8d, r8w
shr dx, 2
imul r8, r8, 0x16d
movzx r9d, dx
movzx edx, dx
imul edx, edx, 0x147b
add rdi, r9
add rdi, r8
shr edx, 0x11
movzx edx, dx
sub rdi, rdx
mov edx, 0xcccccccd
imul rax, rdx
movabs rdx, 0x141dd76000
shr rax, 0x22
add rax, rdi
imul rax, rdx
add rcx, rax
mov qword [arg_10h], rcx
lock add dword [arg_8h], 1
mov qword [rbx], rbp
add rsp, 0x98
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
lea r12, [rsp + 0x30]
lea r13, [rsp + 0x20]
xor edx, edx
mov qword [rsp + 0x20], 0x22
lea rbx, [rsp + 0x40]
mov rsi, r13
mov rdi, r12
mov qword [rsp + 0x30], rbx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
add byte [rax], al
add byte [rax], al
mov rdx, qword [rsp + 0x20]
mov qword [rsp + 0x30], rax
mov rsi, r12
mov rdi, r13
movdqa xmm0, xmmword [0x0800075a]
mov qword [rsp + 0x40], rdx
mov edx, 0x7261
movups xmmword [rax], xmm0
movdqa xmm0, xmmword [0x0800076f]
mov word [rax + 0x20], dx
movups xmmword [rax + 0x10], xmm0
mov rax, qword [rsp + 0x20]
mov rdx, qword [rsp + 0x30]
mov qword [rsp + 0x38], rax
mov byte [rdx + rax], 0
call _ZNSt12out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
add byte [rax], al
add byte [rax], al
jmp .text.unlikely
nop dword [rax]
mov ecx, 0x1c
test al, 3
jne 0x80005cd
imul ax, ax, 0x5c29
mov ecx, 0x1d
mov r9d, eax
ror r9w, 2
cmp r9w, 0x28f
ja 0x80005cd
ror ax, 4
xor ecx, ecx
cmp ax, 0xa4
setb cl
add ecx, 0x1c
jmp 0x80005cd
nop dword [rax + rax]
imul r10, r10, 0xe10
mov rax, r11
shl rax, 4
sub rax, r11
lea rcx, [r10 + rax*4]
add rcx, r13
imul rcx, rcx, 0xf4240
add rcx, r12
jmp 0x8000652
lea r12, [arg_30h]
lea rsi, [0x08000813]
mov rdi, r12
call _ZNSt13runtime_errorC1EPKc
add byte [rax], al
add byte [rax], al
jmp .text.unlikely
call method boost::CV::simple_exception_policy<unsigned short, (unsigned short)1, (unsigned short)31, boost::gregorian::bad_day_of_month>::on_error(unsigned short, unsigned short, boost::CV::violation_enum) [clone .isra.0]
call method boost::CV::simple_exception_policy<unsigned short, (unsigned short)1, (unsigned short)31, boost::gregorian::bad_day_of_month>::on_error(unsigned short, unsigned short, boost::CV::violation_enum) [clone .isra.0]
jmp .text.unlikely
mov r12, rax
jmp .text.unlikely
