push r13
push r12
push rbp
push rbx
sub rsp, 0x18
cmp dword [rdi], 0xffffffff
je .LC12
lea rax, [0x08004b8a]
cmp byte [0x08004b91], 2
mov rbx, rdi
mov qword [var_8h], rax
jne 0x8004d40
movzx eax, byte [0x08004ba6]
test al, al
je .bss
mov rax, qword [0x08004bb5]
lea r9, [0x08004bbc]
test rax, rax
je 0x8004c18
lea r8, [r9 - 0x28]
mov esi, dword [rbx]
mov rdi, r8
nop word [rax + rax]
mov rcx, qword [rax + 0x10]
mov rdx, qword [rax + 0x18]
cmp esi, dword [rax + 0x20]
ja 0x8004bf5
test rcx, rcx
je 0x8004c03
mov rdi, rax
mov rax, rcx
mov rcx, qword [rax + 0x10]
mov rdx, qword [rax + 0x18]
cmp esi, dword [rax + 0x20]
jbe 0x8004bdd
test rdx, rdx
je 0x8004c00
mov rax, rdx
jmp 0x8004bd0
nop
mov rax, rdi
lea r9, [0x08004c0a]
cmp rax, r8
je 0x8004c18
cmp esi, dword [rax + 0x20]
jb 0x8004c18
mov r9, qword [rax + 0x28]
cmp byte [rbx + 8], 0
jne 0x8004cb8
mov rax, qword [r9]
lea rdx, [0x08004c2c]
add byte [rax], al
add byte [rax], al
mov rax, qword [rax + 0x10]
cmp rax, rdx
jne 0x8004eb0
mov eax, dword [rbx]
mov edi, 0x20
lea rbp, [var_8h]
mov dword [var_4h], eax
call _Znwm
lea rdx, [0x08004c55]
lea rsi, [0x08004c5c]
movq xmm1, rdx
mov edx, dword [var_4h]
movq xmm0, rsi
lea rsi, [0x08004c71]
mov qword [rax + 0x10], rsi
punpcklqdq xmm0, xmm1
mov dword [rax + 0x18], edx
mov qword [var_8h], rax
movups xmmword [rax], xmm0
lea rdi, [rbx + 0x60]
mov rsi, rbp
call _ZNSt5dequeIN5boost3log12v2s_mt_posix6filterESaIS3_EE12emplace_backIJS3_EEEvDpOT_
mov rax, qword [var_8h]
test rax, rax
je 0x8004ca0
mov rdi, rax
call qword [rax + 0x10]
mov dword [rbx], 0xffffffff
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rax, qword [rbx + 0x30]
test rax, rax
je 0x8004e50
mov rsi, qword [rbx + 0x38]
add rsi, r9
test al, 1
jne 0x8004e40
lea rbp, [var_8h]
lea rcx, [rbx + 0x10]
mov rdx, rbx
mov rdi, rbp
call rax
lea rdi, [rbx + 0x60]
mov rsi, rbp
call _ZNSt5dequeIN5boost3log12v2s_mt_posix6filterESaIS3_EE12emplace_backIJS3_EEEvDpOT_
mov rax, qword [var_8h]
test rax, rax
je 0x8004d01
mov rdi, rax
call qword [rax + 0x10]
mov qword [rbx + 0x30], 0
mov qword [rbx + 0x38], 0
cmp byte [rbx + 8], 0
je 0x8004ca0
mov rdi, qword [rbx + 0x10]
lea rax, [rbx + 0x20]
cmp rdi, rax
je 0x8004d35
mov rax, qword [rbx + 0x20]
lea rsi, [rax*4 + 4]
call _ZdlPvm
mov byte [rbx + 8], 0
jmp 0x8004ca0
nop
lea rbp, [var_8h]
lea r12, [0x08004d4c]
lea r13, [0x08004d53]
mov rdi, rbp
call _ZNK5boost3log12v2s_mt_posix3aux17once_block_sentry16enter_once_blockEv
test al, al
jne 0x8004e20
movzx eax, byte [0x08004d6a]
test al, al
je .bss
mov rdi, rbp
call _ZN5boost3log12v2s_mt_posix3aux17once_block_sentry6commitEv
mov rax, qword [var_8h]
cmp byte [rax], 2
je .bss
jmp 0x8004d53
nop word [rax + rax]
lea rdi, [0x08004d97]
call __cxa_guard_acquire
test eax, eax
je .bss
xor esi, esi
lea rdi, [0x08004dad]
call pthread_rwlock_init
lea rax, [0x08004db9]
lea rdi, [0x08004dc0]
mov dword [0x08004dca], 0
mov qword [0x08004dd1], rax
mov qword [0x08004dd8], rax
lea rax, [0x08004ddf]
mov qword [0x08004dea], 0
mov qword [0x08004df5], 0
mov qword [0x08004dfc], rax
call __cxa_guard_release
lea rdx, [0x08004e08]
lea rsi, [0x08004e0f]
lea rdi, [0x08004e16]
call __cxa_atexit
jmp .bss
mov rax, qword [var_8h]
cmp byte [rax], 2
je .bss
mov rdi, rbp
call _ZN5boost3log12v2s_mt_posix3aux17once_block_sentry8rollbackEv
jmp .bss
nop dword [rax + rax]
mov rdx, qword [rsi]
mov rax, qword [rdx + rax - 1]
jmp 0x8004cd4
nop dword [rax]
cmp qword [rbx + 0x48], 0
je .LC11
mov rax, qword [r9]
lea rbp, [var_8h]
mov rsi, r9
lea rcx, [rbx + 0x40]
mov rdi, rbp
lea r8, [rbx + 0x10]
mov rdx, rbx
call qword [rax + 0x48]
lea rdi, [rbx + 0x60]
mov rsi, rbp
call _ZNSt5dequeIN5boost3log12v2s_mt_posix6filterESaIS3_EE12emplace_backIJS3_EEEvDpOT_
mov rax, qword [var_8h]
test rax, rax
je 0x8004e93
mov rdi, rax
call qword [rax + 0x10]
mov rax, qword [rbx + 0x40]
mov qword [rbx + 0x48], 0
mov dword [rax], 0
jmp 0x8004d11
nop word [rax + rax]
lea rbp, [var_8h]
mov rdx, rbx
mov rsi, r9
mov rdi, rbp
call rax
jmp 0x8004c84
lea rdi, [0x08004ecc]
call __cxa_guard_acquire
test eax, eax
je _ZN5boost3log12v2s_mt_posix3aux17once_block_sentry6commitEv
xor esi, esi
lea rdi, [0x08004ee2]
call pthread_rwlock_init
lea rdi, [0x08004eee]
mov qword [0x08004ef5], r12
mov qword [0x08004efc], r12
mov qword [0x08004f03], r13
mov dword [0x08004f0d], 0
mov qword [0x08004f18], 0
mov qword [0x08004f23], 0
call __cxa_guard_release
lea rdx, [0x08004f2f]
lea rsi, [0x08004f36]
lea rdi, [0x08004f3d]
call __cxa_atexit
jmp _ZN5boost3log12v2s_mt_posix3aux17once_block_sentry6commitEv
lea rdx, [0x08004f4e]
mov esi, 0x19e
lea rdi, [0x08004f5a]
call _ZN5boost3log12v2s_mt_posix11parse_error6throw_EPKcmS4_
lea rdx, [0x08004f66]
mov esi, 0x18c
lea rdi, [0x08004f72]
call _ZN5boost3log12v2s_mt_posix11parse_error6throw_EPKcmS4_
mov rbp, rax
jmp 0x8004f86
mov rbp, rax
jmp 0x8004f98
mov rbp, rax
jmp 0x8004fb0
mov rax, qword [var_8h]
test rax, rax
je 0x8004fa8
mov rdi, rax
call qword [rax + 0x10]
jmp 0x8004fa8
mov rax, qword [rsp + 8]
test rax, rax
je 0x8004fa8
mov rdi, rax
call qword [rax + 0x10]
mov rdi, rbp
call _Unwind_Resume
mov rax, qword [var_8h]
test rax, rax
je 0x8004fa8
mov rdi, rax
call qword [rax + 0x10]
jmp 0x8004fa8
