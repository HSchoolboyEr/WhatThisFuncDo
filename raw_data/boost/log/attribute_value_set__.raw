push r13
push r12
push rbp
push rbx
sub rsp, 8
mov r13, qword [rdi]
test r13, r13
je 0x80002f0
mov rbx, qword [r13 + 0x28]
lea r12, [r13 + 0x20]
cmp rbx, r12
jne 0x80002b5
add rsp, 8
mov rdi, r13
pop rbx
pop rbp
pop r12
pop r13
jmp free
nop dword [rax]
test rdi, rdi
je 0x80002b0
lock sub dword [rdi + 8], 1
jne 0x80002b0
mov rax, qword [rdi]
call qword [rax + 8]
nop word [rax + rax]
cmp r12, rbx
je 0x800027f
mov rbp, rbx
mov rbx, qword [rbx + 8]
cmp byte [arg_20h], 0
mov rdi, qword [arg_18h]
je 0x8000298
test rdi, rdi
je 0x80002d8
lock sub dword [rdi + 8], 1
jne 0x80002d8
mov rax, qword [rdi]
call qword [rax + 8]
mov esi, 0x28
mov rdi, rbp
call _ZdlPvm
jmp 0x80002b0
nop word [rax + rax]
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
