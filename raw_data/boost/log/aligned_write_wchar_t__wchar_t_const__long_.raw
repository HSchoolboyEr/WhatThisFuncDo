push r15
push r14
mov r14, rsi
push r13
push r12
push rbp
mov rbp, rdx
push rbx
mov rbx, rdi
sub rsp, 0x28
mov r12d, dword [rdi + 0x88]
mov r13, qword [rdi + 0x80]
mov r9, qword [rdi + 0x40]
and r12d, 0xb0
sub r13, rdx
cmp r12d, 0x20
je 0x8005680
cmp byte [rdi + 0x151], 0
je 0x8005648
movsx r8d, byte [rdi + 0x150]
cmp byte [rbx + 0x50], 0
mov qword [arg_8h], r9
jne 0x8005633
mov rdi, qword [rbx + 0x40]
mov rax, qword [rbx + 0x48]
mov rsi, qword [rdi + 8]
mov rcx, rax
sub rcx, rsi
cmp rsi, rax
mov eax, 0
cmovae rcx, rax
cmp r13, rcx
ja _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
xor edx, edx
mov rcx, r13
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
cmp byte [rbx + 0x50], 0
mov r9, qword [arg_8h]
jne 0x8005633
lea r15, [arg_18h]
lea rsi, [rbx + 0x140]
mov qword [arg_8h], r9
mov rdi, r15
call _ZNSt6localeC1ERKS_
mov r9, qword [arg_8h]
mov r8, r15
mov rsi, rbp
mov rcx, qword [rbx + 0x48]
mov rdi, r14
mov rdx, r9
call _ZN5boost3log12v2s_mt_posix3aux17code_convert_implEPKwmRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmRKSt6locale
mov ebp, eax
mov rdi, r15
call _ZNSt6localeD1Ev
test bpl, bpl
jne 0x8005633
mov byte [rbx + 0x50], 1
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov r12, qword [rdi + 0x160]
test r12, r12
je _ZSt16__throw_bad_castv
cmp byte [r12 + 0x38], 0
je 0x8005710
movsx r8d, byte [r12 + 0x59]
mov eax, r8d
mov byte [rbx + 0x150], al
mov byte [rbx + 0x151], 1
jmp 0x80055a2
nop
cmp byte [rdi + 0x50], 0
je 0x8005760
cmp byte [rbx + 0x151], 0
jne 0x8005633
mov rbp, qword [rbx + 0x160]
test rbp, rbp
je _ZSt16__throw_bad_castv
cmp byte [arg_38h], 0
je _ZNKSt5ctypeIcE13_M_widen_initEv
movsx r12d, byte [arg_59h]
mov eax, r12d
mov byte [rbx + 0x150], al
mov byte [rbx + 0x151], 1
cmp byte [rbx + 0x50], 0
jne 0x8005633
mov rdi, qword [rbx + 0x40]
mov rax, qword [rbx + 0x48]
mov r8d, r12d
mov rsi, qword [rdi + 8]
mov rcx, rax
sub rcx, rsi
cmp rsi, rax
mov eax, 0
cmovae rcx, rax
cmp r13, rcx
ja _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
add rsp, 0x28
mov rcx, r13
xor edx, edx
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
nop
mov rdi, r12
mov qword [arg_8h], r9
call _ZNKSt5ctypeIcE13_M_widen_initEv
mov rax, qword [r12]
mov r9, qword [arg_8h]
lea rcx, [0x0800572d]
mov r8d, 0x20
mov rdx, qword [rax + 0x30]
mov eax, 0x20
cmp rdx, rcx
je 0x800566d
mov esi, 0x20
mov rdi, r12
call rdx
mov r9, qword [arg_8h]
movsx r8d, al
jmp 0x800566d
nop dword [rax]
lea r15, [var_18h]
lea rsi, [rdi + 0x140]
mov qword [var_8h], r9
mov rdi, r15
call _ZNSt6localeC1ERKS_
mov r9, qword [var_8h]
mov r8, r15
mov rsi, rbp
mov rcx, qword [rbx + 0x48]
mov rdi, r14
mov rdx, r9
call _ZN5boost3log12v2s_mt_posix3aux17code_convert_implEPKwmRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmRKSt6locale
mov ebp, eax
mov rdi, r15
call _ZNSt6localeD1Ev
test bpl, bpl
jne 0x80057b0
mov byte [rbx + 0x50], 1
jmp 0x800568a
nop dword [rax + rax]
cmp byte [rbx + 0x151], 0
je 0x8005693
movsx r12d, byte [rbx + 0x150]
jmp 0x80056c2
nop word [rax + rax]
mov rdi, rbp
call _ZNKSt5ctypeIcE13_M_widen_initEv
mov rax, qword [rbp]
lea rcx, [0x080057e3]
mov rdx, qword [rax + 0x30]
mov eax, 0x20
cmp rdx, rcx
je 0x80056b5
mov esi, 0x20
mov rdi, rbp
call rdx
movsx r12d, al
jmp 0x80056b5
nop dword [rax + rax]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
mov byte [rbx + 0x50], 1
jmp 0x8005633
call _ZSt16__throw_bad_castv
mov rbp, rax
jmp 0x800582c
jmp 0x8005825
mov rdi, r15
call _ZNSt6localeD1Ev
mov rdi, rbp
call _Unwind_Resume
