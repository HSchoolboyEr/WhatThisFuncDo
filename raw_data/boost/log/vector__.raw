push r14
push r13
mov r13, rdi
push r12
push rbp
push rbx
mov rbx, qword [rdi + 8]
mov r12, qword [rdi]
cmp rbx, r12
je 0x8006d64
lea r14, [0x08006d0e]
jmp 0x8006d19
add r12, 0x10
cmp rbx, r12
je 0x8006d60
mov rbp, qword [r12 + 8]
test rbp, rbp
je 0x8006d10
lock sub dword [arg_8h], 1
jne 0x8006d10
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x8006d10
mov rax, qword [rbp]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r14
jne 0x8006d90
call qword [rax + 8]
add r12, 0x10
cmp rbx, r12
jne 0x8006d19
nop word [rax + rax]
mov r12, qword [r13]
test r12, r12
je 0x8006d80
mov rsi, qword [r13 + 0x10]
pop rbx
mov rdi, r12
pop rbp
sub rsi, r12
pop r12
pop r13
pop r14
jmp _ZdlPvm
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
call rdx
jmp 0x8006d10
