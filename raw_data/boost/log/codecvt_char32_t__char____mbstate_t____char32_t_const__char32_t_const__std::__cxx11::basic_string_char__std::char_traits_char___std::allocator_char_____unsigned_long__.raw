push r15
push r14
push r13
push r12
mov r12, rdx
mov edx, 0x100
push rbp
push rbx
sub rsp, 0x168
cmp rcx, 0x100
mov qword [var_10h], rdi
cmovbe rdx, rcx
mov qword [var_18h], rdi
mov qword [var_38h], 0
cmp rsi, rdi
je 0x80024a9
mov rbp, rcx
test rcx, rcx
je 0x80024a9
mov rax, rdi
lea rdi, [var_38h]
mov rbx, rsi
mov r14, r8
mov qword [var_8h], rdi
lea rdi, [var_28h]
lea r13, [var_60h]
mov r10, rax
mov qword [rsp], rdi
lea r15, [var_18h]
mov rax, qword [r14]
add rdx, r13
mov qword [var_28h], r13
mov rcx, rbx
push qword [rsp]
mov r9, r13
mov r8, r15
mov rdi, r14
push rdx
mov rdx, r10
mov rsi, qword [var_8h]
call qword [rax + 0x10]
pop rdx
pop rcx
cmp eax, 1
je 0x80023f0
cmp eax, 3
jne 0x80023d0
mov r13, qword [var_18h]
mov r15, qword [r12 + 8]
sub rbx, r13
sar rbx, 2
cmp rbx, rbp
cmova rbx, rbp
lea rbp, [var_50h]
add r15, qword [r12]
mov qword [var_40h], rbp
shl rbx, 2
lea r14, [r13 + rbx]
test r13, r13
jne 0x800214c
test r14, r14
jne .LC3
mov rax, rbx
mov rdx, rbp
sar rax, 2
mov qword [var_30h], rax
cmp rbx, 0x3c
ja 0x8002470
cmp r13, r14
je 0x800234a
mov rcx, r14
mov rax, r13
sub rcx, r13
sub rcx, 4
mov rdi, rcx
shr rdi, 2
add rdi, 1
lea rsi, [rdx + rdi]
cmp r13, rsi
setae r8b
cmp r14, rdx
setbe sil
or r8b, sil
je 0x80023b0
cmp rcx, 0x38
jbe 0x80023b0
mov rsi, rdi
movdqa xmm3, xmmword [0x080021b6]
mov rcx, rdx
shr rsi, 4
shl rsi, 6
add rsi, r13
nop dword [rax]
movdqu xmm0, xmmword [rax]
movdqu xmm5, xmmword [rax + 0x10]
add rax, 0x40
add rcx, 0x10
movdqu xmm7, xmmword [rax - 0x10]
movdqa xmm1, xmm0
punpcklwd xmm0, xmm5
punpckhwd xmm1, xmm5
movdqa xmm2, xmm0
punpckhwd xmm2, xmm1
punpcklwd xmm0, xmm1
movdqu xmm1, xmmword [rax - 0x20]
punpcklwd xmm0, xmm2
movdqa xmm2, xmm1
punpcklwd xmm1, xmm7
pand xmm0, xmm3
punpckhwd xmm2, xmm7
movdqa xmm4, xmm1
punpckhwd xmm4, xmm2
punpcklwd xmm1, xmm2
punpcklwd xmm1, xmm4
pand xmm1, xmm3
packuswb xmm0, xmm1
movups xmmword [rcx - 0x10], xmm0
cmp rax, rsi
jne 0x80021c8
mov rax, rdi
and rax, 0xfffffffffffffff0
lea rcx, [r13 + rax*4]
add rdx, rax
cmp rdi, rax
je 0x8002340
mov eax, dword [rcx]
mov byte [rdx], al
lea rax, [rcx + 4]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 4]
mov byte [rdx + 1], al
lea rax, [rcx + 8]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 8]
mov byte [rdx + 2], al
lea rax, [rcx + 0xc]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0xc]
mov byte [rdx + 3], al
lea rax, [rcx + 0x10]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x10]
mov byte [rdx + 4], al
lea rax, [rcx + 0x14]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x14]
mov byte [rdx + 5], al
lea rax, [rcx + 0x18]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x18]
mov byte [rdx + 6], al
lea rax, [rcx + 0x1c]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x1c]
mov byte [rdx + 7], al
lea rax, [rcx + 0x20]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x20]
mov byte [rdx + 8], al
lea rax, [rcx + 0x24]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x24]
mov byte [rdx + 9], al
lea rax, [rcx + 0x28]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x28]
mov byte [rdx + 0xa], al
lea rax, [rcx + 0x2c]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x2c]
mov byte [rdx + 0xb], al
lea rax, [rcx + 0x30]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x30]
mov byte [rdx + 0xc], al
lea rax, [rcx + 0x34]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x34]
mov byte [rdx + 0xd], al
lea rax, [rcx + 0x38]
cmp r14, rax
je 0x8002340
mov eax, dword [rcx + 0x38]
mov byte [rdx + 0xe], al
nop word cs:[rax + rax]
mov rax, qword [var_30h]
mov rdx, qword [var_40h]
mov qword [var_48h], rax
mov rsi, r15
mov rdi, r12
mov byte [rdx + rax], 0
mov r8, qword [var_48h]
xor edx, edx
mov rcx, qword [var_40h]
sub rsi, qword [r12]
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
mov rdi, qword [var_40h]
cmp rdi, rbp
je 0x8002386
mov rax, qword [var_50h]
lea rsi, [rax + 1]
call _ZdlPvm
add rbx, qword [var_18h]
mov rax, rbx
sub rax, qword [var_10h]
sar rax, 2
add rsp, 0x168
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov eax, dword [r13]
add r13, 4
add rdx, 1
mov byte [rdx - 1], al
cmp r14, r13
jne 0x80023b0
jmp 0x8002340
nop dword [rax]
test eax, eax
je 0x8002440
lea rdx, [0x080023db]
mov esi, 0x8b
lea rdi, [0x080023e7]
call _ZN5boost3log12v2s_mt_posix16conversion_error6throw_EPKcmS4_
nop dword [rax]
mov r8, qword [var_28h]
cmp r8, r13
je 0x80024b0
mov rsi, qword [r12 + 8]
xor edx, edx
sub r8, r13
mov rcx, r13
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
mov rax, r13
sub rax, qword [var_28h]
mov r10, qword [var_18h]
lea rdx, [rax + rbp]
cmp rdx, 0x100
ja 0x8002450
cmp r10, rbx
je 0x8002498
test rdx, rdx
je 0x8002498
mov rbp, rdx
jmp 0x80020d5
nop
mov rsi, qword [r12 + 8]
mov r8, qword [var_28h]
jmp 0x8002403
nop dword [rax]
cmp rbx, r10
je 0x800238b
mov rbp, rdx
mov edx, 0x100
jmp 0x80020d5
nop word cs:[rax + rax]
xor edx, edx
lea rsi, [var_30h]
lea rdi, [var_40h]
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_40h], rax
mov rdx, rax
mov rax, qword [var_30h]
mov qword [var_50h], rax
jmp 0x8002165
mov rax, r10
sub rax, qword [var_10h]
sar rax, 2
jmp 0x8002397
xor eax, eax
jmp 0x8002397
cmp qword [var_18h], rbx
je 0x800238b
jmp .LC7
lea rdi, [0x080024c7]
call _ZSt19__throw_logic_errorPKc
mov r12, rax
mov rdi, qword [var_40h]
cmp rdi, rbp
je 0x80024e7
mov rax, qword [var_50h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, r12
call _Unwind_Resume
