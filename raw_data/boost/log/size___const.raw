push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov rbp, qword [rdi]
mov rax, qword [rbp]
test rax, rax
je 0x8000e38
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [var_8h], rax
cmp r14, rax
jne 0x8000f97
mov qword [rbp], 0
mov rax, qword [arg_8h]
test rax, rax
je 0x8000e68
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [var_8h], rax
cmp r14, rax
jne 0x80010a7
nop word [rax + rax]
mov qword [arg_8h], 0
mov rax, qword [arg_10h]
test rax, rax
je 0x8000e98
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [var_8h], rax
cmp r14, rax
jne 0x80011b7
nop word [rax + rax]
mov qword [arg_10h], 0
mov rax, qword [arg_18h]
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
jne 0x8000ecc
jmp 0x8000ed1
nop
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
je 0x8000ed1
cmp r12d, eax
ja 0x8000ec0
cmp r12d, eax
je 0x8000f88
mov rsi, qword [r14 + 0x18]
lea rcx, [0x08000ee5]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rcx
jne 0x80012f0
lock add dword [rsi + 8], 1
mov qword [var_18h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x8001308
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_18h]
mov qword [rax + 0x18], rdx
mov qword [var_18h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x8001220
cmp rbx, qword [r13 + 0x48]
je 0x8001280
cmp rbx, rdx
je 0x80013a0
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_18h]
test rdi, rdi
je 0x8000f88
lock sub dword [rdi + 8], 1
jne 0x8000f88
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax + rax]
mov r14, qword [r14 + 8]
cmp qword [var_8h], r14
je 0x8000e30
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x8000eda
jmp 0x8000eb0
nop
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
jne 0x8000fdc
jmp 0x8000fe1
nop
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
je 0x8000fe1
cmp r12d, eax
ja 0x8000fd0
cmp r12d, eax
je 0x8001098
mov rsi, qword [r14 + 0x18]
lea rcx, [0x08000ff5]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rcx
jne 0x8001340
lock add dword [rsi + 8], 1
mov qword [var_18h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x8001358
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_18h]
mov qword [rax + 0x18], rdx
mov qword [var_18h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x8001200
cmp rbx, qword [r13 + 0x48]
je 0x8001260
cmp rbx, rdx
je 0x8001390
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_18h]
test rdi, rdi
je 0x8001098
lock sub dword [rdi + 8], 1
jne 0x8001098
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax + rax]
mov r14, qword [r14 + 8]
cmp qword [var_8h], r14
je 0x8000e60
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x8000fea
jmp 0x8000fc0
nop
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rdx, rbx
jne 0x80010ec
jmp 0x80010f1
nop
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rdx, rbx
je 0x80010f1
cmp r12d, eax
ja 0x80010e0
cmp r12d, eax
je 0x80011a8
mov rsi, qword [r14 + 0x18]
lea rcx, [0x08001105]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rcx
jne 0x80012a0
lock add dword [rsi + 8], 1
mov qword [var_18h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x80012b8
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_18h]
mov qword [rax + 0x18], rdx
mov qword [var_18h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x80011e0
cmp rbx, qword [r13 + 0x48]
je 0x8001240
cmp rbx, rdx
je 0x80013b0
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_18h]
test rdi, rdi
je 0x80011a8
lock sub dword [rdi + 8], 1
jne 0x80011a8
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax + rax]
mov r14, qword [r14 + 8]
cmp qword [var_8h], r14
je 0x8000e90
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x80010fa
jmp 0x80010d0
nop
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x8001176
nop dword [rax]
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x8001066
nop dword [rax]
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x8000f56
nop dword [rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x800116d
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x8001176
nop word [rax + rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x800105d
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x8001066
nop word [rax + rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x8000f4d
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x8000f56
nop word [rax + rax]
lea rdi, [var_18h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x800112d
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_18h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_18h], 0
jmp 0x8001156
nop dword [rax + rax]
lea rdi, [var_18h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x8000f0d
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_18h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_18h], 0
jmp 0x8000f36
nop dword [rax + rax]
lea rdi, [var_18h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x800101d
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_18h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_18h], 0
jmp 0x8001046
nop dword [rax + rax]
mov qword [r13 + 0x40], rax
jmp 0x8001066
nop dword [rax]
mov qword [r13 + 0x40], rax
jmp 0x8000f56
nop dword [rax]
mov qword [r13 + 0x40], rax
jmp 0x8001176
