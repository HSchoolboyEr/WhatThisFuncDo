push r15
mov eax, edx
push r14
and eax, 0xf
mov r14, rdi
push r13
push r12
mov r12, rax
push rbp
shl r12, 4
mov ebp, edx
push rbx
sub rsp, 0x18
mov r13, qword [rsi]
mov qword [rsp], rsi
add r12, r13
mov qword [var_8h], rax
mov rbx, qword [r12 + 0x40]
mov rdx, qword [r12 + 0x48]
cmp rbx, rdx
jne 0x8000365
jmp 0x8000410
nop word [rax + rax]
mov rbx, qword [rbx + 8]
cmp rbx, rdx
je 0x8000410
mov eax, dword [rbx + 0x10]
cmp eax, ebp
jb 0x8000358
cmp ebp, eax
je 0x8000429
mov r15, qword [rcx]
test r15, r15
je 0x8000382
lock add dword [r15 + 8], 1
mov rax, qword [r13 + 0x30]
cmp rax, qword [r13 + 0x38]
je 0x8000480
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [r13 + 0x30], rdx
mov dword [rax + 0x10], ebp
mov byte [rax + 0x20], 0
mov qword [rax + 0x18], r15
movups xmmword [rax], xmm0
mov rdx, qword [r12 + 0x40]
test rdx, rdx
je 0x8000430
cmp qword [r12 + 0x48], rbx
je 0x8000458
cmp rdx, rbx
je 0x8000470
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
mov edx, 1
add qword [r13 + 0x18], 1
movq xmm0, rax
mov byte [r14 + 0x10], dl
mov rax, r14
movhps xmm0, qword [rsp]
movups xmmword [r14], xmm0
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
xor ebx, ebx
test rdx, rdx
je 0x8000374
mov eax, dword [rdx + 0x10]
mov rbx, rdx
cmp ebp, eax
jne 0x8000374
mov rax, rbx
xor edx, edx
jmp 0x80003e3
mov rdx, qword [var_8h]
movq xmm0, rax
lea rbx, [r13 + 0x20]
punpcklqdq xmm0, xmm0
shl rdx, 4
movups xmmword [r13 + rdx + 0x40], xmm0
jmp 0x80003c8
nop dword [rax]
cmp dword [rbx + 0x10], ebp
jae 0x80003bf
mov rbx, qword [rbx + 8]
mov qword [r12 + 0x48], rax
jmp 0x80003c8
nop
mov qword [r12 + 0x40], rax
jmp 0x80003c8
nop word [rax + rax]
mov edi, 0x28
call _Znwm
pxor xmm0, xmm0
mov dword [rax + 0x10], ebp
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], r15
movups xmmword [rax], xmm0
jmp 0x80003aa
