push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov rbp, qword [rsi]
mov qword [var_8h], rdi
test rbp, rbp
je 0x8002710
mov rax, qword [rbp]
test rax, rax
je 0x80022b8
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [rsp], rax
cmp r14, rax
jne 0x800225a
jmp 0x80022b0
nop word cs:[rax + rax]
mov rsi, qword [r14 + 0x18]
lea rdi, [0x080021ab]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rdi
jne 0x80027e0
lock add dword [rsi + 8], 1
mov qword [var_18h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x80027f8
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_18h]
mov qword [rax + 0x18], rdx
mov qword [var_18h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x80026b0
cmp rbx, qword [r13 + 0x48]
je 0x8002750
cmp rbx, rdx
je 0x8002880
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_18h]
test rdi, rdi
je 0x8002250
lock sub dword [rdi + 8], 1
jne 0x8002250
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax]
mov r14, qword [r14 + 8]
cmp qword [rsp], r14
je 0x80022b0
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x80021a0
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
jne 0x800229c
jmp 0x80022a1
nop word [rax + rax]
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
je 0x80022a1
cmp r12d, eax
ja 0x8002290
cmp r12d, eax
jne 0x80021a0
jmp 0x8002250
nop dword [rax]
mov qword [rbp], 0
mov rax, qword [arg_8h]
test rax, rax
je 0x80023f8
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [rsp], rax
cmp r14, rax
jne 0x800239a
jmp 0x80023f0
nop
mov rsi, qword [r14 + 0x18]
lea rdi, [0x080022eb]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rdi
jne 0x8002830
lock add dword [rsi + 8], 1
mov qword [var_18h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x8002848
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_18h]
mov qword [rax + 0x18], rdx
mov qword [var_18h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x80026d0
cmp rbx, qword [r13 + 0x48]
je 0x8002770
cmp rbx, rdx
je 0x8002890
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_18h]
test rdi, rdi
je 0x8002390
lock sub dword [rdi + 8], 1
jne 0x8002390
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax]
mov r14, qword [r14 + 8]
cmp qword [rsp], r14
je 0x80023f0
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x80022e0
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rdx, rbx
jne 0x80023dc
jmp 0x80023e1
nop word [rax + rax]
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rdx, rbx
je 0x80023e1
cmp r12d, eax
ja 0x80023d0
cmp r12d, eax
jne 0x80022e0
jmp 0x8002390
nop dword [rax]
mov qword [arg_8h], 0
mov rax, qword [arg_10h]
test rax, rax
je 0x8002538
mov r14, qword [rax + 0x10]
add rax, 8
mov qword [rsp], rax
cmp r14, rax
jne 0x80024da
jmp 0x8002530
nop
mov rsi, qword [r14 + 0x18]
lea rdi, [0x0800242b]
mov rax, qword [rsi]
mov rax, qword [rax + 0x10]
cmp rax, rdi
jne 0x8002790
lock add dword [rsi + 8], 1
mov qword [var_18h], rsi
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
je 0x80027a8
lea rdx, [rax + 0x28]
pxor xmm0, xmm0
mov qword [arg_30h], rdx
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 0
movups xmmword [rax], xmm0
mov rdx, qword [var_18h]
mov qword [rax + 0x18], rdx
mov qword [var_18h], 0
mov rdx, qword [r13 + 0x40]
test rdx, rdx
je 0x80026f0
cmp rbx, qword [r13 + 0x48]
je 0x8002730
cmp rbx, rdx
je 0x80028a0
mov rdx, qword [rbx]
mov qword [rax + 8], rbx
mov qword [rax], rdx
mov qword [rbx], rax
mov qword [rdx + 8], rax
add qword [arg_18h], 1
mov rdi, qword [var_18h]
test rdi, rdi
je 0x80024d0
lock sub dword [rdi + 8], 1
jne 0x80024d0
mov rax, qword [rdi]
call qword [rax + 8]
nop dword [rax]
mov r14, qword [r14 + 8]
cmp qword [rsp], r14
je 0x8002530
mov r12d, dword [r14 + 0x10]
mov r15d, r12d
and r15d, 0xf
mov r13, r15
shl r13, 4
add r13, rbp
mov rbx, qword [r13 + 0x40]
test rbx, rbx
je 0x8002420
mov rdx, qword [r13 + 0x48]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
jne 0x800251c
jmp 0x8002521
nop word [rax + rax]
mov rbx, qword [rbx + 8]
mov eax, dword [rbx + 0x10]
cmp rbx, rdx
je 0x8002521
cmp r12d, eax
ja 0x8002510
cmp eax, r12d
jne 0x8002420
jmp 0x80024d0
nop dword [rax]
mov qword [arg_10h], 0
mov rax, qword [arg_18h]
lea rax, [rax + rax*4]
lea rbx, [rax*8]
lea rdi, [rbx + 0x140]
call malloc
mov rdx, rax
test rax, rax
je .text.unlikely
lea r8, [rdx + 0x20]
pxor xmm0, xmm0
lea rax, [rax + 0x140]
mov qword [rdx + 0x10], 0
movq xmm1, r8
mov qword [rdx + 0x30], rax
add rax, rbx
add rbp, 0x20
punpcklqdq xmm1, xmm1
mov qword [rdx + 0x18], 0
mov qword [rdx + 0x38], rax
movups xmmword [rdx], xmm0
movups xmmword [rdx + 0x20], xmm1
movups xmmword [rdx + 0x40], xmm0
movups xmmword [rdx + 0x50], xmm0
movups xmmword [rdx + 0x60], xmm0
movups xmmword [rdx + 0x70], xmm0
movups xmmword [rdx + 0x80], xmm0
movups xmmword [rdx + 0x90], xmm0
movups xmmword [rdx + 0xa0], xmm0
movups xmmword [rdx + 0xb0], xmm0
movups xmmword [rdx + 0xc0], xmm0
movups xmmword [rdx + 0xd0], xmm0
movups xmmword [rdx + 0xe0], xmm0
movups xmmword [rdx + 0xf0], xmm0
movups xmmword [rdx + 0x100], xmm0
movups xmmword [rdx + 0x110], xmm0
movups xmmword [rdx + 0x120], xmm0
movups xmmword [rdx + 0x130], xmm0
mov rsi, qword [arg_8h]
cmp rsi, rbp
je 0x8002674
nop dword [rax + rax]
mov rax, qword [rdx + 0x30]
lea rcx, [rax + 0x28]
mov qword [rdx + 0x30], rcx
mov rcx, qword [rsi + 0x18]
test rcx, rcx
je 0x800262a
lock add dword [rcx + 8], 1
movups xmmword [rax], xmm0
mov edi, dword [rsi + 0x10]
mov byte [rax + 0x20], 0
mov dword [rax + 0x10], edi
mov qword [rax + 0x18], rcx
mov rcx, qword [rdx + 0x20]
mov qword [rax + 8], r8
mov qword [rax], rcx
mov qword [rdx + 0x20], rax
mov qword [rcx + 8], rax
add qword [rdx + 0x18], 1
mov ecx, dword [rax + 0x10]
and ecx, 0xf
shl rcx, 4
add rcx, rdx
cmp qword [rcx + 0x40], 0
je 0x8002690
mov qword [rcx + 0x48], rax
mov rsi, qword [rsi + 8]
cmp rbp, rsi
jne 0x8002610
mov rax, qword [var_8h]
mov qword [rax], rdx
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov qword [rcx + 0x40], rax
mov qword [rcx + 0x48], rax
mov rsi, qword [rsi + 8]
cmp rbp, rsi
jne 0x8002610
jmp 0x8002674
nop word [rax + rax]
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x800221c
nop dword [rax]
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x800235c
nop dword [rax]
movq xmm0, rax
shl r15, 4
lea rbx, [arg_20h]
punpcklqdq xmm0, xmm0
movups xmmword [rbp + r15 + 0x40], xmm0
jmp 0x800249c
nop dword [rax]
mov qword [rdi], 0
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x8002493
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x800249c
nop word [rax + rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x8002213
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x800221c
nop word [rax + rax]
cmp r12d, dword [rbx + 0x10]
jbe 0x8002353
mov rbx, qword [rbx + 8]
mov qword [r13 + 0x48], rax
jmp 0x800235c
nop word [rax + rax]
lea rdi, [var_18h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x8002453
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_18h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_18h], 0
jmp 0x800247c
nop dword [rax + rax]
lea rdi, [var_18h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x80021d3
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_18h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_18h], 0
jmp 0x80021fc
nop dword [rax + rax]
lea rdi, [var_18h]
call rax
mov rax, qword [arg_30h]
cmp rax, qword [arg_38h]
jne 0x8002313
nop dword [rax]
mov edi, 0x28
call _Znwm
mov rdx, qword [var_18h]
pxor xmm0, xmm0
mov dword [rax + 0x10], r12d
mov byte [rax + 0x20], 1
mov qword [rax + 0x18], rdx
movups xmmword [rax], xmm0
mov qword [var_18h], 0
jmp 0x800233c
nop dword [rax + rax]
mov qword [r13 + 0x40], rax
jmp 0x800221c
nop dword [rax]
mov qword [r13 + 0x40], rax
jmp 0x800235c
nop dword [rax]
mov qword [r13 + 0x40], rax
jmp 0x800249c
