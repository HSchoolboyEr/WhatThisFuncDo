push r14
push rbp
mov rbp, rsi
push rbx
mov rbx, qword [rdi + 0x48]
mov r8, qword [rdi + 0x40]
mov r11, rbx
sub r11, r8
mov rax, r11
sar r11, 7
sar rax, 5
test r11, r11
jle 0x8000fd5
mov rcx, qword [rsi]
mov rax, qword [rsi + 8]
shl r11, 7
lea rsi, [r8 + 0x40]
lea r9, [r8 + 0x20]
lea r10, [r8 + 0x60]
add r11, r8
sub rax, rcx
jmp 0x8000e82
nop dword [rax + rax]
mov rdi, qword [rsi - 0x20]
cmp rax, qword [rsi - 0x18]
je 0x8000f08
mov rdi, qword [rsi]
cmp rax, qword [rsi + 8]
je 0x8000f88
mov rdi, qword [rsi + 0x20]
cmp rax, qword [rsi + 0x28]
je 0x8000f70
sub r8, 0xffffffffffffff80
sub rsi, 0xffffffffffffff80
sub r9, 0xffffffffffffff80
sub r10, 0xffffffffffffff80
cmp r8, r11
je 0x8000fcb
cmp rax, qword [rsi - 0x38]
jne 0x8000e40
test rax, rax
je 0x8000fc0
mov rdi, qword [rsi - 0x40]
xor edx, edx
jmp 0x8000ead
nop dword [rax]
add rdx, 1
cmp rax, rdx
je 0x8000fc0
movzx r14d, byte [rcx + rdx]
cmp byte [rdi + rdx], r14b
je 0x8000ea0
mov rdi, qword [rsi - 0x20]
cmp rax, qword [rsi - 0x18]
je 0x8000f11
mov rdi, qword [rsi]
cmp rax, qword [rsi + 8]
je 0x8000f40
mov rdi, qword [rsi + 0x20]
cmp rax, qword [rsi + 0x28]
jne 0x8000e69
xor edx, edx
nop word [rax + rax]
movzx r14d, byte [rcx + rdx]
cmp byte [rdi + rdx], r14b
jne 0x8000e69
add rdx, 1
cmp rax, rdx
jne 0x8000ee0
cmp rbx, r10
setne al
pop rbx
pop rbp
pop r14
ret
nop dword [rax + rax]
test rax, rax
je 0x8000ff8
xor edx, edx
jmp 0x8000f25
nop dword [rax]
add rdx, 1
cmp rax, rdx
je 0x8000ff8
movzx r14d, byte [rcx + rdx]
cmp byte [rdi + rdx], r14b
je 0x8000f18
mov rdi, qword [rsi]
cmp rax, qword [rsi + 8]
jne 0x8000e5b
nop dword [rax]
xor edx, edx
nop word [rax + rax]
movzx r14d, byte [rcx + rdx]
cmp byte [rdi + rdx], r14b
jne 0x8000ecb
add rdx, 1
cmp rax, rdx
jne 0x8000f48
cmp rbx, rsi
setne al
pop rbx
pop rbp
pop r14
ret
nop dword [rax + rax]
test rax, rax
jne 0x8000ed5
cmp rbx, r10
setne al
jmp 0x8000efe
nop dword [rax]
test rax, rax
jne 0x8000f40
cmp rbx, rsi
setne al
jmp 0x8000f66
test rdx, rdx
je 0x8000fc0
mov rsi, qword [r8]
xor eax, eax
movzx edi, byte [rcx + rax]
cmp byte [rsi + rax], dil
jne 0x800105e
add rax, 1
cmp rax, rdx
jne 0x8000f9f
nop word cs:[rax + rax]
cmp rbx, r8
setne al
pop rbx
pop rbp
pop r14
ret
mov rax, rbx
sub rax, r8
sar rax, 5
cmp rax, 2
je 0x8001064
cmp rax, 3
je 0x800103f
cmp rax, 1
je 0x8001003
xor eax, eax
pop rbx
pop rbp
pop r14
ret
nop word [rax + rax]
cmp rbx, r9
pop rbx
pop rbp
setne al
pop r14
ret
mov rcx, qword [rbp]
mov rdx, qword [arg_8h]
sub rdx, rcx
xor eax, eax
cmp rdx, qword [r8 + 8]
jne 0x8000fc6
test rdx, rdx
je 0x8000fc0
mov rsi, qword [r8]
xor eax, eax
jmp 0x8001031
nop word [rax + rax]
add rax, 1
cmp rdx, rax
je 0x8000fc0
movzx edi, byte [rcx + rax]
cmp byte [rsi + rax], dil
je 0x8001028
xor eax, eax
jmp 0x8000fed
mov rcx, qword [rbp]
mov rdx, qword [arg_8h]
sub rdx, rcx
cmp rdx, qword [r8 + 8]
je 0x8001071
add r8, 0x20
cmp qword [r8 + 8], rdx
je 0x8000f95
add r8, 0x20
jmp 0x800100e
mov rcx, qword [rbp]
mov rdx, qword [arg_8h]
sub rdx, rcx
jmp 0x8001054
test rdx, rdx
je 0x8000fc0
mov rsi, qword [r8]
xor eax, eax
movzx edi, byte [rcx + rax]
cmp byte [rsi + rax], dil
jne 0x8001050
add rax, 1
cmp rax, rdx
jne 0x800107f
jmp 0x8000fc0
