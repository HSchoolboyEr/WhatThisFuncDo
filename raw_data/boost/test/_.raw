push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x68
lea rax, [arg_a0h]
mov qword [var_8h], rdi
lea rdi, [var_30h]
mov qword [var_40h], rdx
mov edx, 2
mov qword [var_48h], rcx
lea rcx, [arg_a0h]
mov qword [var_20h], rax
mov eax, 8
mov qword [var_38h], rsi
mov qword [var_50h], r8
mov qword [var_58h], r9
mov dword [var_18h], 8
mov qword [var_28h], rdi
jmp 0x800076f
nop
mov esi, eax
add eax, 8
cmp qword [rdi + rsi], 0
je 0x8000782
add edx, 1
cmp eax, 0x2f
jbe 0x8000760
cmp qword [rcx], 0
lea rax, [rcx + 8]
jne .text.unlikely
lea rax, [0x08000789]
movsxd rdx, edx
lea rcx, [rax + rdx*8]
lea rbp, [rax + 0x640]
mov rax, qword [var_8h]
cmp rcx, rbp
cmova rcx, rbp
cmp byte [rax], 0
je 0x80009f6
nop dword [rax]
add rax, 1
cmp byte [rax], 0
jne 0x80007b0
sub rax, qword [var_8h]
lea rbx, [rax + 1]
mov rax, rbp
sub rax, rcx
cmp rax, rbx
jb .bss
mov r14, qword [var_8h]
mov rdx, rbx
mov rdi, rcx
lea r12, [0x080007e3]
mov rsi, r14
call memcpy
mov rsi, r14
lea rdi, [0x080007f5]
add rbx, rax
mov qword [0x080007ff], rax
cmp rbx, rbp
cmova rbx, rbp
xor eax, eax
call printf
lea rax, [arg_a0h]
mov dword [var_18h], 8
mov r13d, dword [var_18h]
mov qword [var_20h], rax
lea rax, [var_30h]
mov qword [var_28h], rax
cmp r13d, 0x2f
ja 0x80008dc
nop dword [rax + rax]
mov eax, r13d
add rax, qword [var_28h]
lea edx, [r13 + 8]
mov r15, qword [rax]
mov dword [var_18h], edx
test r15, r15
je 0x80008f6
xor eax, eax
mov rsi, r15
lea rdi, [0x08000868]
call printf
cmp byte [r15], 0
je 0x80009c0
mov rax, r15
nop word [rax + rax]
add rax, 1
cmp byte [rax], 0
jne 0x8000880
sub rax, r15
lea r14, [rax + 1]
mov rax, rbp
sub rax, rbx
cmp rax, r14
jb 0x80009a0
mov rdx, r14
mov rsi, r15
add r14, rbx
mov rdi, rbx
call memcpy
add r12, 8
cmp r14, rbp
mov qword [r12 - 8], rbx
cmova r14, rbp
cmp r13d, 0x2f
ja 0x800095e
mov r13d, dword [var_18h]
mov rbx, r14
cmp r13d, 0x2f
jbe 0x8000840
mov rax, qword [var_20h]
mov r15, qword [rax]
lea rdx, [rax + 8]
mov qword [var_20h], rdx
test r15, r15
jne 0x800085c
mov rdi, qword [var_8h]
lea rsi, [0x08000902]
mov qword [r12], 0
call execvp
cmp eax, 0xffffffff
setne al
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
sub rax, r15
lea rbx, [rax + 1]
mov rax, rbp
sub rax, r14
cmp rax, rbx
jb 0x80009a0
mov rdx, rbx
mov rdi, r14
add rbx, r14
mov rsi, r15
call memcpy
add r12, 8
cmp rbx, rbp
mov qword [r12 - 8], r14
cmova rbx, rbp
mov r14, rbx
mov rax, qword [var_20h]
mov r15, qword [rax]
lea rdx, [rax + 8]
mov qword [var_20h], rdx
test r15, r15
je 0x80008f6
xor eax, eax
mov rsi, r15
lea rdi, [0x08000980]
call printf
cmp byte [r15], 0
je 0x80009d0
mov rax, r15
nop
add rax, 1
cmp byte [rax], 0
jne 0x8000990
jmp 0x8000928
nop dword [rax + rax]
mov qword [r12], 0
add rsp, 0x68
xor eax, eax
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov r14d, 1
jmp 0x8000890
nop dword [rax + rax]
mov ebx, 1
jmp 0x800092f
mov qword [0x080009e5], 0
add rsp, 0x68
xor eax, eax
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov ebx, 1
jmp 0x80007c2
