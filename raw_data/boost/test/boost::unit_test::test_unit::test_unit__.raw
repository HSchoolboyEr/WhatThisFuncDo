push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
call _ZN5boost9unit_test9framework20deregister_test_unitEPNS0_9test_unitE
add byte [rax], al
add byte [rax], al
mov r13, qword [rbx + 0x108]
mov r12, qword [rbx + 0x100]
cmp r13, r12
je 0x8000a07
lea r14, [0x080009aa]
jmp 0x80009b9
nop dword [rax]
add r12, 0x10
cmp r13, r12
je 0x8000a00
mov rbp, qword [r12 + 8]
test rbp, rbp
je 0x80009b0
lock sub dword [arg_8h], 1
jne 0x80009b0
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x80009b0
mov rax, qword [rbp]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r14
jne 0x8000be0
call qword [rax + 8]
add r12, 0x10
cmp r13, r12
jne 0x80009b9
nop dword [rax + rax]
mov r12, qword [rbx + 0x100]
test r12, r12
je 0x8000a1e
mov rsi, qword [rbx + 0x110]
mov rdi, r12
sub rsi, r12
call _ZdlPvm
mov r13, qword [rbx + 0xf0]
mov r12, qword [rbx + 0xe8]
cmp r13, r12
je 0x8000a97
lea r14, [0x08000a38]
jmp 0x8000a49
nop word [rax + rax]
add r12, 0x10
cmp r13, r12
je 0x8000a90
mov rbp, qword [r12 + 8]
test rbp, rbp
je 0x8000a40
lock sub dword [arg_8h], 1
jne 0x8000a40
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x8000a40
mov rax, qword [rbp]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r14
jne 0x8000bf0
call qword [rax + 8]
add r12, 0x10
cmp r13, r12
jne 0x8000a49
nop dword [rax + rax]
mov r12, qword [rbx + 0xe8]
test r12, r12
je 0x8000aae
mov rsi, qword [rbx + 0xf8]
mov rdi, r12
sub rsi, r12
call _ZdlPvm
mov rdi, qword [rbx + 0xa8]
lea rax, [rbx + 0xb8]
cmp rdi, rax
je 0x8000ad1
mov rax, qword [rbx + 0xb8]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [rbx + 0x88]
lea rax, [rbx + 0x98]
cmp rdi, rax
je 0x8000af4
mov rax, qword [rbx + 0x98]
lea rsi, [rax + 1]
call _ZdlPvm
mov r12, qword [rbx + 0x78]
mov rbp, qword [rbx + 0x70]
cmp r12, rbp
je 0x8000b3c
nop dword [rax]
mov rax, qword [rbp]
test rax, rax
je 0x8000b2f
test al, 1
jne 0x8000b2f
and rax, 0xfffffffffffffffe
mov rax, qword [rax]
test rax, rax
je 0x8000b2f
lea rdi, [arg_8h]
mov edx, 2
mov rsi, rdi
call rax
add rbp, 0x20
cmp r12, rbp
jne 0x8000b08
mov rbp, qword [rbx + 0x70]
test rbp, rbp
je 0x8000b53
mov rsi, qword [rbx + 0x80]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
mov rdi, qword [rbx + 0x58]
test rdi, rdi
je 0x8000b68
mov rsi, qword [rbx + 0x68]
sub rsi, rdi
call _ZdlPvm
mov r12, qword [rbx + 0x48]
mov rbp, qword [rbx + 0x40]
cmp r12, rbp
je 0x8000b9f
nop dword [rax]
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8000bc0
mov rax, qword [arg_10h]
add rbp, 0x20
lea rsi, [rax + 1]
call _ZdlPvm
cmp r12, rbp
jne 0x8000b78
mov rbp, qword [rbx + 0x40]
test rbp, rbp
je 0x8000bd0
mov rsi, qword [rbx + 0x50]
mov rdi, rbp
pop rbx
sub rsi, rbp
pop rbp
pop r12
pop r13
pop r14
jmp _ZdlPvm
nop dword [rax + rax]
add rbp, 0x20
cmp r12, rbp
jne 0x8000b78
jmp 0x8000b9b
nop dword [rax + rax]
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
call rdx
jmp 0x80009b0
nop word [rax + rax]
call rdx
jmp 0x8000a40
