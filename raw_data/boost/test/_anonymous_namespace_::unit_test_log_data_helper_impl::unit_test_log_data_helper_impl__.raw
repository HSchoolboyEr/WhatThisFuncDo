push rbp
push rbx
mov rbx, rdi
push rcx
mov rbp, qword [rdi + 0x28]
test rbp, rbp
je 0x80030a1
lock dec dword [arg_8h]
jne 0x80030a1
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock dec dword [arg_ch]
jne 0x80030a1
mov rdx, qword [rbp]
lea rcx, [0x0800308e]
mov rdi, rbp
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x800309f
call qword [rdx + 8]
jmp 0x80030a1
call rax
mov rbp, qword [rbx + 0x18]
test rbp, rbp
je 0x80030e5
lock dec dword [arg_8h]
jne 0x80030e5
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock dec dword [arg_ch]
jne 0x80030e5
mov rdx, qword [rbp]
lea rcx, [0x080030cb]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x80030e0
mov rax, qword [rdx + 8]
mov rdi, rbp
pop rdx
pop rbx
pop rbp
jmp rax
mov rdi, rbp
call rax
pop rax
pop rbx
pop rbp
ret
