push r15
push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x28
mov rax, qword [rdi + 0x168]
mov rbx, qword [rdi + 0x170]
mov qword [rsp], rax
mov qword [var_18h], rbx
cmp rax, rbx
jae 0x8003e56
mov r13, rax
nop dword [rax]
mov rdi, qword [r13]
mov rax, qword [rdi]
call qword [rax]
mov r15, rax
test rax, rax
je 0x8003e30
mov r8, qword [r13 + 0x18]
mov r12, qword [r13 + 0x10]
mov r14, qword [rax + 0xf0]
cmp r12, r8
je 0x8003b8d
mov rax, qword [rax + 0xf8]
mov rcx, r8
sub rcx, r12
sub rax, r14
cmp rax, rcx
jb 0x8003c20
mov rax, r12
lea rsi, [r14 + rcx]
mov rdx, qword [rax]
mov qword [r14], rdx
mov rdx, qword [rax + 8]
mov qword [r14 + 8], rdx
test rdx, rdx
je 0x8003b79
lock add dword [rdx + 8], 1
add r14, 0x10
add rax, 0x10
cmp rsi, r14
jne 0x8003b61
add qword [r15 + 0xf0], rcx
mov dword [r15 + 0xc8], 0
mov rsi, qword [arg_128h]
cmp rsi, qword [arg_130h]
je 0x8003e18
mov rax, qword [r15 + 0x30]
add rsi, 8
mov qword [rsi - 8], rax
mov qword [arg_128h], rsi
mov rax, qword [arg_38h]
mov rbx, qword [r15 + 0xd0]
mov qword [r15 + 0x38], rax
test rbx, rbx
je 0x8003b18
mov rdi, qword [arg_40h]
mov r12d, 0xffffffff
add qword [arg_d8h], rbx
cmp rdi, r12
je 0x8003b18
nop dword [rax]
mov esi, 0x10
call _ZN5boost9unit_test9framework3getEmNS0_14test_unit_typeE
mov rdi, qword [rax + 0x38]
add qword [rax + 0xd0], rbx
cmp rdi, r12
jne 0x8003bf8
jmp 0x8003b18
nop word [rax + rax]
mov rsi, qword [r15 + 0xe8]
mov rax, r14
sar rcx, 4
movabs rdx, 0x7ffffffffffffff
sub rax, rsi
sar rax, 4
sub rdx, rax
cmp rcx, rdx
ja .LC31
cmp rcx, rax
cmovb rcx, rax
add rax, rcx
jb 0x8003fe4
mov qword [rsp], 0
xor ebx, ebx
test rax, rax
jne 0x8003f40
cmp r14, rsi
je 0x8003f8c
lea rdi, [r14 - 0x10]
xor eax, eax
pxor xmm0, xmm0
xor edx, edx
sub rdi, rsi
shr rdi, 4
add rdi, 1
nop
movdqu xmm1, xmmword [rsi + rax]
add rdx, 1
movups xmmword [rbx + rax], xmm1
movups xmmword [rsi + rax], xmm0
add rax, 0x10
cmp rdx, rdi
jb 0x8003c90
mov rax, r14
sub rax, rsi
add rax, rbx
sub r8, r12
mov rdx, r12
add r8, rax
nop dword [rax]
mov rcx, qword [rdx]
mov qword [rax], rcx
mov rcx, qword [rdx + 8]
mov qword [rax + 8], rcx
test rcx, rcx
je 0x8003cd8
lock add dword [rcx + 8], 1
add rax, 0x10
add rdx, 0x10
cmp r8, rax
jne 0x8003cc0
mov r9, qword [r15 + 0xf0]
cmp r14, r9
je 0x8003d36
lea rsi, [r9 - 0x10]
xor eax, eax
pxor xmm0, xmm0
xor edx, edx
sub rsi, r14
shr rsi, 4
add rsi, 1
nop dword [rax + rax]
movdqu xmm2, xmmword [r14 + rax]
add rdx, 1
movups xmmword [r8 + rax], xmm2
movups xmmword [r14 + rax], xmm0
add rax, 0x10
cmp rsi, rdx
ja 0x8003d10
mov rax, r9
sub rax, r14
add r8, rax
mov r14, qword [r15 + 0xe8]
cmp r9, r14
je 0x8003dcc
mov qword [arg_8h], rbx
mov rbx, r9
mov qword [arg_10h], rbp
mov rbp, r14
mov r14, r8
jmp 0x8003d69
nop dword [rax + rax]
add rbp, 0x10
cmp rbx, rbp
je 0x8003db8
mov r12, qword [arg_8h]
test r12, r12
je 0x8003d60
lock sub dword [r12 + 8], 1
jne 0x8003d60
mov rdx, qword [r12]
mov rdi, r12
call qword [rdx + 0x10]
lock sub dword [r12 + 0xc], 1
jne 0x8003d60
mov rdx, qword [r12]
lea rax, [0x08003d99]
mov rdi, r12
mov rcx, qword [rdx + 0x18]
cmp rcx, rax
jne 0x8003f94
call qword [rdx + 8]
add rbp, 0x10
cmp rbx, rbp
jne 0x8003d69
nop dword [rax]
mov r8, r14
mov rbx, qword [arg_8h]
mov rbp, qword [arg_10h]
mov r14, qword [r15 + 0xe8]
test r14, r14
je 0x8003ded
mov rsi, qword [r15 + 0xf8]
mov rdi, r14
mov qword [arg_8h], r8
sub rsi, r14
call _ZdlPvm
mov r8, qword [arg_8h]
mov rax, qword [rsp]
movq xmm0, rbx
movq xmm3, r8
punpcklqdq xmm0, xmm3
mov qword [r15 + 0xf8], rax
movups xmmword [r15 + 0xe8], xmm0
jmp 0x8003b8d
nop dword [rax + rax]
lea rdx, [r15 + 0x30]
lea rdi, [arg_120h]
call _ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_
jmp 0x8003bbf
nop dword [rax]
add r13, 0x28
cmp qword [arg_18h], r13
ja 0x8003b18
mov rax, qword [arg_168h]
mov qword [rsp], rax
mov rax, qword [arg_170h]
mov qword [arg_18h], rax
mov rax, qword [arg_18h]
mov rbx, qword [rsp]
cmp rax, rbx
je 0x8003f2b
mov qword [arg_8h], rbp
lea r15, [0x08003e74]
mov rbp, rbx
mov rbx, rax
nop word [rax + rax]
mov r14, qword [arg_18h]
mov r13, qword [arg_10h]
cmp r14, r13
jne 0x8003e99
jmp 0x8003ee4
nop
add r13, 0x10
cmp r14, r13
je 0x8003ee0
mov r12, qword [r13 + 8]
test r12, r12
je 0x8003e90
lock sub dword [r12 + 8], 1
jne 0x8003e90
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
lock sub dword [r12 + 0xc], 1
jne 0x8003e90
mov rax, qword [r12]
mov rdi, r12
mov rcx, qword [rax + 0x18]
cmp rcx, r15
jne 0x8003fca
call qword [rax + 8]
add r13, 0x10
cmp r14, r13
jne 0x8003e99
nop
mov r13, qword [arg_10h]
test r13, r13
je 0x8003ef8
mov rsi, qword [arg_20h]
mov rdi, r13
sub rsi, r13
call _ZdlPvm
mov r12, qword [arg_8h]
test r12, r12
je 0x8003f0e
lock sub dword [r12 + 8], 1
je 0x8003f9b
add rbp, 0x28
cmp rbp, rbx
jne 0x8003e80
mov rbp, qword [arg_8h]
mov rax, qword [rsp]
mov qword [arg_170h], rax
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
movabs rbx, 0x7ffffffffffffff
cmp rax, rbx
cmovbe rbx, rax
shl rbx, 4
mov rdx, rbx
mov rdi, rdx
mov qword [arg_8h], r8
mov qword [rsp], rdx
call _Znwm
mov rdx, qword [rsp]
mov r8, qword [arg_8h]
mov rsi, qword [r15 + 0xe8]
mov rbx, rax
add rax, rdx
mov qword [rsp], rax
cmp r14, rsi
jne 0x8003c77
mov rax, rbx
jmp 0x8003cb3
call rcx
jmp 0x8003d60
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
lock sub dword [r12 + 0xc], 1
jne 0x8003f0e
mov rcx, qword [r12]
mov rdi, r12
mov rax, qword [rcx + 0x18]
cmp rax, r15
jne 0x8003fd1
call qword [rcx + 8]
jmp 0x8003f0e
call rcx
jmp 0x8003e90
call rax
jmp 0x8003f0e
lea rdi, [0x08003fdf]
call _ZSt20__throw_length_errorPKc
movabs rdx, 0x7ffffffffffffff0
jmp 0x8003f58
