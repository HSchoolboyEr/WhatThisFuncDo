push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x168
mov rsi, qword [rdi + 0x128]
lea rax, [var_138h]
mov qword [var_38h], rdi
mov qword [var_20h], rax
mov qword [var_148h], rax
mov qword [var_150h], rax
mov rax, qword [rdi + 0x120]
mov dword [var_138h], 0
mov qword [var_140h], 0
mov qword [var_158h], 0
mov qword [var_28h], rsi
cmp rax, rsi
jae 0x80036f1
mov qword [var_8h], rax
lea rax, [var_50h]
mov qword [var_30h], rax
nop dword [rax]
mov rax, qword [var_8h]
mov esi, 0x11
mov rdi, qword [rax]
call _ZN5boost9unit_test9framework3getEmNS0_14test_unit_typeE
mov rbp, qword [rax + 0x88]
mov r12, qword [rax + 0x90]
lea rbx, [var_60h]
mov qword [var_10h], rbx
mov rax, rbp
mov qword [var_50h], rbx
add rax, r12
setne al
test rbp, rbp
sete dil
and al, dil
mov byte [var_18h], al
jne .LC0
mov qword [var_110h], r12
cmp r12, 0xf
ja 0x8003518
cmp r12, 1
jne 0x8003500
movzx eax, byte [rbp]
mov byte [var_60h], al
mov rax, qword [var_10h]
mov qword [var_58h], r12
mov byte [rax + r12], 0
mov r12, qword [var_140h]
test r12, r12
je 0x8003138
mov rbx, qword [var_50h]
mov r13, qword [var_58h]
jmp 0x8002faa
nop dword [rax]
mov rax, qword [r12 + 0x10]
mov edx, 1
test rax, rax
je 0x8003004
mov r12, rax
mov rbp, qword [r12 + 0x28]
mov r14, qword [r12 + 0x20]
cmp r13, rbp
mov r15, rbp
cmovbe r15, r13
test r15, r15
je 0x8002fd5
mov rdx, r15
mov rsi, r14
mov rdi, rbx
call memcmp
test eax, eax
jne 0x8002ff4
mov rax, r13
mov ecx, 0x80000000
sub rax, rbp
cmp rax, rcx
jge 0x8002ff8
movabs rcx, 0xffffffff7fffffff
cmp rax, rcx
jle 0x8002f98
test eax, eax
js 0x8002f98
mov rax, qword [r12 + 0x18]
xor edx, edx
test rax, rax
jne 0x8002fa7
test dl, dl
jne 0x800313d
test r15, r15
je 0x8003023
mov rdx, r15
mov rsi, rbx
mov rdi, r14
call memcmp
test eax, eax
jne 0x8003045
sub rbp, r13
mov eax, 0x80000000
cmp rbp, rax
jge 0x8003178
movabs rax, 0xffffffff7fffffff
cmp rbp, rax
jle 0x800304d
mov eax, ebp
test eax, eax
jns 0x8003178
test r12, r12
je 0x8003178
cmp r12, qword [var_20h]
jne 0x80035b8
mov byte [var_18h], 1
mov edi, 0x40
call _Znwm
mov r15, qword [var_50h]
lea rdi, [rax + 0x30]
mov r13, qword [var_58h]
mov rbp, rax
mov qword [rax + 0x20], rdi
mov rax, r15
add rax, r13
je 0x8003096
test r15, r15
je .LC0
mov qword [var_110h], r13
cmp r13, 0xf
ja 0x8003570
cmp r13, 1
jne 0x8003560
movzx eax, byte [r15]
mov byte [var_140h], al
mov qword [var_138h], r13
mov rcx, qword [var_20h]
mov rdx, r12
mov rsi, rbp
mov byte [rdi + r13], 0
movzx edi, byte [var_18h]
call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
add byte [rax], al
add byte [rax], al
mov rdi, qword [var_50h]
add qword [var_158h], 1
cmp rdi, qword [var_10h]
je 0x80034e0
mov rax, qword [var_60h]
lea rsi, [rax + 1]
call _ZdlPvm
add qword [var_8h], 8
mov rax, qword [var_8h]
cmp qword [var_28h], rax
ja 0x8002ef8
mov rdi, qword [var_140h]
call method std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase() [clone ]
add rsp, 0x168
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov r12, qword [var_20h]
cmp r12, qword [var_148h]
je 0x8003056
mov rdi, r12
call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
add byte [rax], al
add byte [rax], al
mov r13, qword [var_58h]
mov rbx, qword [var_50h]
mov rbp, qword [rax + 0x28]
mov r14, qword [rax + 0x20]
mov r15, r13
cmp rbp, r13
cmovbe r15, rbp
jmp 0x800300c
nop dword [rax]
lea r14, [var_90h]
lea rbp, [var_110h]
xor edx, edx
mov qword [var_110h], 0x2f
lea r12, [var_a0h]
mov rsi, rbp
mov rdi, r14
mov qword [var_90h], r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov rdx, qword [var_110h]
mov byte [rax + 0x2e], 0x27
movabs rsi, 0x2074736574206568
lea r13, [var_70h]
movdqa xmm0, xmmword [0x080031d4]
mov qword [rax + 0x20], rsi
lea rbx, [var_80h]
mov rdi, r13
mov qword [var_90h], rax
mov qword [var_a0h], rdx
mov edx, 0x2065
movups xmmword [rax], xmm0
movdqa xmm0, xmmword [0x08003203]
mov word [rax + 0x2c], dx
mov rdx, qword [var_90h]
movups xmmword [rax + 0x10], xmm0
mov dword [rax + 0x28], 0x74697573
mov rax, qword [var_110h]
mov qword [var_98h], rax
mov byte [rdx + rax], 0
mov rax, qword [var_58h]
mov qword [var_70h], rbx
lea rsi, [rax + 0x15]
mov byte [var_80h], 0
mov qword [var_78h], 0
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
add byte [rax], al
add byte [rax], al
movabs rax, 0x3fffffffffffffff
sub rax, qword [var_78h]
cmp rax, 0x14
jbe .LC1
mov edx, 0x15
lea rsi, [0x08003277]
mov rdi, r13
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
mov rdx, qword [var_58h]
mov rsi, qword [var_50h]
mov rdi, r13
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
mov r9, qword [var_70h]
mov r8, qword [var_78h]
mov eax, 0xf
mov rdx, qword [var_98h]
mov rdi, rax
mov rsi, qword [var_90h]
cmp r9, rbx
cmovne rdi, qword [var_80h]
lea rcx, [r8 + rdx]
cmp rcx, rdi
jbe 0x80032dd
cmp rsi, r12
cmovne rax, qword [var_a0h]
cmp rcx, rax
jbe 0x80036ab
mov rdi, r13
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
lea rsi, [var_c0h]
lea rdx, [rax + 0x10]
mov qword [var_b0h], rsi
mov rcx, qword [rax]
mov qword [var_28h], rsi
cmp rcx, rdx
je 0x8003699
mov qword [var_b0h], rcx
mov rcx, qword [rax + 0x10]
mov qword [var_c0h], rcx
mov rcx, qword [rax + 8]
lea rdi, [var_b0h]
mov qword [var_b8h], rcx
mov qword [rax], rdx
mov qword [rax + 8], 0
mov byte [rax + 0x10], 0
mov rax, qword [var_38h]
mov rdx, qword [rax + 0x98]
mov rsi, qword [rax + 0x90]
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
lea rsi, [var_e0h]
lea rdx, [rax + 0x10]
mov qword [var_d0h], rsi
mov rcx, qword [rax]
mov qword [var_18h], rsi
cmp rcx, rdx
je 0x8003687
mov qword [var_d0h], rcx
mov rcx, qword [rax + 0x10]
mov qword [var_e0h], rcx
mov rcx, qword [rax + 8]
mov byte [rax + 0x10], 0
mov qword [var_d8h], rcx
mov qword [rax], rdx
mov qword [rax + 8], 0
movabs rax, 0x3fffffffffffffff
cmp qword [var_d8h], rax
je .LC1
lea rdi, [var_d0h]
mov edx, 1
lea rsi, [0x080033d9]
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
lea rsi, [var_100h]
lea rdx, [rax + 0x10]
mov qword [var_f0h], rsi
mov rcx, qword [rax]
mov qword [var_20h], rsi
cmp rcx, rdx
je 0x8003675
mov qword [var_f0h], rcx
mov rcx, qword [rax + 0x10]
mov qword [var_100h], rcx
mov rcx, qword [rax + 8]
mov byte [rax + 0x10], 0
lea r14, [var_120h]
mov qword [var_f8h], rcx
mov qword [rax + 8], 0
mov r13, qword [var_f8h]
mov qword [rax], rdx
mov rax, qword [var_f0h]
mov qword [var_110h], r14
mov rsi, rax
mov qword [var_8h], rax
add rsi, r13
je 0x8003468
test rax, rax
je .LC0
mov qword [var_40h], r13
cmp r13, 0xf
ja 0x800362c
cmp r13, 1
jne 0x8003616
mov rax, qword [var_8h]
lea r15, [var_40h]
movzx eax, byte [rax]
mov byte [var_120h], al
mov rax, r14
mov qword [var_118h], r13
mov rsi, rbp
mov rdi, r15
mov byte [rax + r13], 0
call _ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
add byte [rax], al
add byte [rax], al
mov rdi, qword [var_110h]
cmp rdi, r14
je .text.unlikely
mov rax, qword [var_120h]
lea rsi, [rax + 1]
call _ZdlPvm
jmp .text.unlikely
nop word [rax + rax]
add qword [var_8h], 8
mov rax, qword [var_8h]
cmp qword [var_28h], rax
ja 0x8002ef8
jmp 0x8003114
nop dword [rax + rax]
test r12, r12
jne 0x8003729
mov rax, rbx
jmp 0x8002f6d
nop dword [rax]
mov rdi, qword [var_30h]
lea rsi, [var_110h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_50h], rax
mov rdi, rax
mov rax, qword [var_110h]
mov qword [var_60h], rax
mov rdx, r12
mov rsi, rbp
call memcpy
mov r12, qword [var_110h]
mov rax, qword [var_50h]
jmp 0x8002f6d
nop
test r13, r13
je 0x80030b9
jmp 0x8003596
nop dword [rax + rax]
lea rsi, [var_110h]
lea rdi, [var_bp_20h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_bp_20h], rax
mov rdi, rax
mov rax, qword [var_110h]
mov qword [var_140h], rax
mov rdx, r13
mov rsi, r15
call memcpy
mov r13, qword [var_110h]
mov rdi, qword [var_bp_20h]
jmp 0x80030b9
nop word [rax + rax]
mov rbp, qword [var_58h]
mov r13, qword [r12 + 0x28]
cmp rbp, r13
mov rdx, r13
cmovbe rdx, rbp
test rdx, rdx
je 0x80035e4
mov rsi, qword [r12 + 0x20]
mov rdi, qword [var_50h]
call memcmp
test eax, eax
jne 0x800360a
sub rbp, r13
mov eax, 0x80000000
cmp rbp, rax
jge 0x8003066
movabs rax, 0xffffffff7fffffff
cmp rbp, rax
jle 0x8003061
mov eax, ebp
shr eax, 0x1f
mov dword [var_18h], eax
jmp 0x8003066
test r13, r13
jne 0x80036f8
mov rax, r14
lea r15, [var_40h]
jmp 0x8003498
lea r15, [var_40h]
xor edx, edx
mov rdi, rbp
mov rsi, r15
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_110h], rax
mov rdi, rax
mov rax, qword [var_40h]
mov qword [var_120h], rax
mov rsi, qword [var_8h]
mov rdx, r13
call memcpy
mov r13, qword [var_40h]
mov rax, qword [var_110h]
jmp 0x8003498
movdqu xmm4, xmmword [rax + 0x10]
movaps xmmword [var_100h], xmm4
jmp 0x8003417
movdqu xmm3, xmmword [rax + 0x10]
movaps xmmword [var_e0h], xmm3
jmp 0x8003392
movdqu xmm2, xmmword [rax + 0x10]
movaps xmmword [var_c0h], xmm2
jmp 0x800331e
mov rcx, r9
xor edx, edx
xor esi, esi
mov rdi, r14
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
lea rsi, [var_c0h]
lea rdx, [rax + 0x10]
mov qword [var_b0h], rsi
mov rcx, qword [rax]
mov qword [var_28h], rsi
cmp rcx, rdx
jne 0x800330a
movdqu xmm1, xmmword [rax + 0x10]
movaps xmmword [var_c0h], xmm1
jmp 0x800331e
xor edi, edi
jmp 0x800311c
mov rdi, r14
lea r15, [var_40h]
jmp 0x8003656
lea rdi, [0x0800370c]
call _ZSt20__throw_length_errorPKc
lea rdi, [0x08003718]
call _ZSt19__throw_logic_errorPKc
lea rdi, [0x08003724]
call _ZSt19__throw_logic_errorPKc
mov rdi, qword [arg_10h]
jmp 0x8003541
lea rdi, [0x0800373a]
call _ZSt20__throw_length_errorPKc
lea rdi, [0x08003746]
call _ZSt19__throw_logic_errorPKc
mov rbx, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rdi, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
nop
nop word cs:[rax + rax]
nop
