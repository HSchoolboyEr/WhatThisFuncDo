push r13
lea rax, [0x080007d9]
push r12
mov r12, rsi
push rbp
push rbx
mov rbx, rdi
sub rsp, 8
mov byte [rdi], cl
mov dword [rdi + 4], edx
mov qword [rdi + 8], rax
mov edi, 0x20
call _Znwm
movdqu xmm1, xmmword [0x08000802]
mov edi, 0x18
mov qword [rbx + 0x18], 0
mov rbp, rax
lea rax, [0x08000819]
mov qword [rbp], rax
mov eax, dword [0x08000823]
mov qword [rbx + 0x10], rbp
mov dword [arg_8h], eax
movups xmmword [arg_10h], xmm1
call _Znwm
mov qword [rax + 0x10], rbp
mov r13, qword [0x0800083e]
lea rcx, [0x08000845]
mov rbp, qword [rbx + 0x18]
mov qword [rax], rcx
mov qword [rax + 8], r13
mov qword [rbx + 0x18], rax
test rbp, rbp
je 0x8000864
lock sub dword [arg_8h], 1
je 0x8000908
mov byte [rbx + 0x30], 0
pxor xmm0, xmm0
mov edi, 0x18
movups xmmword [rbx + 0x20], xmm0
call _Znwm
mov rbp, qword [rbx + 0x28]
movq xmm0, r12
movq xmm2, rax
lea rdx, [0x0800088f]
punpcklqdq xmm0, xmm2
mov qword [rax + 8], r13
mov qword [rax], rdx
mov qword [rax + 0x10], r12
movups xmmword [rbx + 0x20], xmm0
test rbp, rbp
je 0x80008b2
lock sub dword [arg_8h], 1
je 0x80008d0
mov r12, qword [rbx + 0x20]
mov rax, qword [r12]
mov esi, 4
mov rdi, r12
call qword [rax + 0xa0]
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
nop
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x80008ae
mov rax, qword [rbp]
lea rcx, [0x080008ec]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x8000940
call qword [rax + 8]
mov r12, qword [rbx + 0x20]
jmp 0x80008b2
nop dword [rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x8000864
mov rax, qword [rbp]
lea rcx, [0x08000928]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x8000950
call qword [rax + 8]
jmp 0x8000864
nop dword [rax]
call rdx
jmp 0x80008ae
nop word [rax + rax]
call rdx
jmp 0x8000864
