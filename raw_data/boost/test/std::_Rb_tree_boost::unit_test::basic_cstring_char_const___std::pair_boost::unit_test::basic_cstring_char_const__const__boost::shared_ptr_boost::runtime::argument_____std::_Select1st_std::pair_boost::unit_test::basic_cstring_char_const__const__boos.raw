mov rdx, qword [rdi + 0x10]
lea r10, [rdi + 8]
test rdx, rdx
je 0x8000a92
mov r8, qword [rsi]
mov r9, qword [rsi + 8]
mov rcx, r10
sub r9, r8
jmp 0x8000a35
mov rax, qword [rdx + 0x10]
mov rsi, qword [rdx + 0x18]
jae 0x8000a74
mov rax, rsi
test rax, rax
je 0x8000a79
mov rdx, rax
mov rdi, qword [rdx + 0x20]
mov rsi, qword [rdx + 0x28]
sub rsi, rdi
cmp rsi, r9
jne 0x8000a20
test r9, r9
je 0x8000a70
xor eax, eax
jmp 0x8000a59
nop
add rax, 1
cmp rsi, rax
je 0x8000a70
movzx r11d, byte [rdi + rax]
cmp byte [r8 + rax], r11b
je 0x8000a50
jle 0x8000a70
mov rax, qword [rdx + 0x18]
jmp 0x8000a2d
nop dword [rax]
mov rax, qword [rdx + 0x10]
mov rcx, rdx
jmp 0x8000a2d
cmp r10, rcx
je 0x8000a92
mov rdx, qword [rcx + 0x20]
mov rax, qword [rcx + 0x28]
sub rax, rdx
cmp r9, rax
je 0x8000a96
cmovae r10, rcx
mov rax, r10
ret
test r9, r9
je 0x8000abc
xor eax, eax
jmp 0x8000aa9
nop
add rax, 1
cmp r9, rax
je 0x8000abc
movzx edi, byte [r8 + rax]
cmp byte [rdx + rax], dil
je 0x8000aa0
cmovle r10, rcx
mov rax, r10
ret
mov r10, rcx
mov rax, r10
ret
