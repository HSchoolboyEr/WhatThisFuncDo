push r15
push r14
push r13
mov r13, rsi
push r12
push rbp
push rbx
sub rsp, 0x58
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rbx, qword [rax]
mov rdx, qword [rax + 8]
mov r12, rax
cmp rbx, rdx
jb 0x80024b9
jmp 0x8002608
nop word [rax + rax]
cmp rdx, rbx
jbe 0x8002608
mov eax, dword [rbx + 4]
mov rbp, rbx
add rbx, 0x38
cmp eax, 4
jne 0x80024b0
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rdx, qword [rax + 8]
mov r14, rax
cmp rdx, rbx
je 0x80025d4
movabs rax, 0x6db6db6db6db6db7
mov rcx, rdx
sub rcx, rbx
mov rsi, rcx
sar rsi, 3
imul rsi, rax
mov r15, rsi
test rcx, rcx
jle 0x80027b0
pxor xmm0, xmm0
jmp 0x800254a
nop word [rax + rax]
movdqu xmm1, xmmword [rbx + 0x20]
movups xmmword [rbx + 0x20], xmm0
mov rdi, qword [var_28h]
movups xmmword [var_20h], xmm1
test rdi, rdi
je 0x8002531
lock sub dword [rdi + 8], 1
je 0x8002680
movzx edx, byte [rbx + 0x30]
add rbp, 0x38
add rbx, 0x38
mov byte [var_8h_2], dl
sub r15, 1
je 0x80025d0
movzx edx, byte [rbx]
mov rcx, qword [rbx + 0x10]
mov byte [rbp], dl
mov edx, dword [rbx + 4]
mov dword [var_4h], edx
mov rdx, qword [rbx + 8]
mov qword [var_8h], rdx
mov rdx, qword [rbx + 0x18]
movups xmmword [rbx + 0x10], xmm0
mov rdi, qword [var_18h]
mov qword [var_10h], rcx
mov qword [var_18h], rdx
test rdi, rdi
je 0x8002510
lock sub dword [rdi + 8], 1
jne 0x8002510
mov rdx, qword [rdi]
mov qword [var_8h], rdi
call qword [rdx + 0x10]
mov rdi, qword [var_8h]
mov edx, 0xffffffff
lock xadd dword [rdi + 0xc], edx
pxor xmm0, xmm0
cmp edx, 1
jne 0x8002510
mov rdx, qword [rdi]
lea rax, [0x080025b3]
mov rcx, qword [rdx + 0x18]
cmp rcx, rax
jne 0x80027b8
call qword [rdx + 8]
pxor xmm0, xmm0
jmp 0x8002510
nop dword [rax]
mov rbx, qword [r14 + 8]
mov rbp, qword [rbx - 0x10]
lea rax, [rbx - 0x38]
mov qword [r14 + 8], rax
test rbp, rbp
je 0x80025f0
lock sub dword [var_8h], 1
je 0x800277c
mov rbp, qword [rbx - 0x20]
test rbp, rbp
je 0x8002608
lock sub dword [var_8h], 1
je 0x8002748
nop dword [rax]
test r13, r13
je 0x800266b
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rdx, qword [rax + 0x18]
cmp rdx, qword [rax + 0x20]
je 0x8002620
mov qword [rax + 0x20], rdx
lea rbp, [var_10h]
mov rsi, r13
mov ecx, 1
mov edx, 4
mov rdi, rbp
call method boost::unit_test::(anonymous namespace)::unit_test_log_data_helper_impl::unit_test_log_data_helper_impl(boost::unit_test::unit_test_log_formatter*, boost::unit_test::output_format, bool)
mov rsi, rbp
mov rdi, r12
call method void std::vector<boost::unit_test::(anonymous namespace)::unit_test_log_data_helper_impl, std::allocator<boost::unit_test::(anonymous namespace)::unit_test_log_data_helper_impl> >::emplace_back<boost::unit_test::(anonymous namespace)::unit_test_log_data_helper_impl>(boost::unit_test::(anonymous namespace)::unit_test_log_data_helper_impl&&)
mov rbp, qword [var_38h]
test rbp, rbp
je 0x8002656
lock sub dword [var_8h], 1
je 0x80026d0
mov rbp, qword [var_28h]
test rbp, rbp
je 0x800266b
lock sub dword [var_8h], 1
je 0x8002710
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov rdx, qword [rdi]
mov qword [var_8h], rdi
call qword [rdx + 0x10]
mov rdi, qword [var_8h]
mov edx, 0xffffffff
lock xadd dword [rdi + 0xc], edx
pxor xmm0, xmm0
cmp edx, 1
jne 0x8002531
mov rdx, qword [rdi]
lea rax, [0x080026b1]
mov rcx, qword [rdx + 0x18]
cmp rcx, rax
jne 0x80027c3
call qword [rdx + 8]
pxor xmm0, xmm0
jmp 0x8002531
nop word [rax + rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [var_ch], 1
jne 0x8002656
mov rax, qword [rbp]
lea rcx, [0x080026f0]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x80027d5
call qword [rax + 8]
jmp 0x8002656
nop dword [rax + rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [var_ch], 1
jne 0x800266b
mov rax, qword [rbp]
lea rcx, [0x08002730]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x80027ce
call qword [rax + 8]
jmp 0x800266b
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [var_ch], 1
jne 0x8002608
mov rax, qword [rbp]
lea rcx, [0x08002768]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x80027e3
call qword [rax + 8]
jmp 0x8002608
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [var_ch], 1
jne 0x80025f0
mov rax, qword [rbp]
lea rcx, [0x0800279c]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x80027dc
call qword [rax + 8]
jmp 0x80025f0
mov rbx, rdx
jmp 0x80025d4
call rcx
pxor xmm0, xmm0
jmp 0x8002510
call rcx
pxor xmm0, xmm0
jmp 0x8002531
call rdx
jmp 0x800266b
call rdx
jmp 0x8002656
call rdx
jmp 0x80025f0
call rdx
jmp 0x8002608
