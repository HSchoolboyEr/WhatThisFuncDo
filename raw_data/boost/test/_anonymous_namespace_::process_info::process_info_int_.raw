push r15
lea rax, [0x080001a9]
mov ecx, esi
lea rdx, [0x080001b2]
push r14
movq xmm0, rax
xor eax, eax
push r13
punpcklqdq xmm0, xmm0
mov r13d, esi
mov esi, 0x1e
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x28
mov dword [rdi], 0
mov r14, rsp
movups xmmword [rdi + 8], xmm0
movups xmmword [rdi + 0x18], xmm0
mov rdi, r14
call snprintf
xor esi, esi
xor eax, eax
mov rdi, r14
call open
cmp eax, 0xffffffff
je 0x80002d8
lea rbx, [arg_28h]
mov edx, 0x1f4
mov edi, eax
mov r12d, eax
mov rsi, rbx
call read
cmp rax, 0xffffffffffffffff
je close
mov byte [rbp + rax + 0x28], 0
movzx eax, byte [arg_28h]
test al, al
jne 0x8000300
nop dword [rax + rax]
movzx eax, byte [rbx + 1]
lea r15, [rbx + 1]
mov rbx, r15
cmp al, 0x29
je 0x8000260
test al, al
je 0x8000260
nop dword [rax + rax]
movzx eax, byte [rbx + 1]
add rbx, 1
test al, al
je 0x8000260
cmp al, 0x29
jne 0x8000250
lea rdi, [rbx + 1]
mov rdx, rbp
lea rsi, [0x0800026e]
xor eax, eax
call __isoc99_sscanf
movq xmm1, rbx
mov rdi, r14
xor eax, eax
movq xmm0, r15
lea rdx, [0x0800028b]
mov esi, 0x1e
mov ecx, r13d
punpcklqdq xmm0, xmm1
lea rbx, [arg_21dh]
movups xmmword [arg_8h], xmm0
call snprintf
mov edx, 0x1f4
mov rsi, rbx
mov rdi, r14
call readlink
cmp rax, 0xffffffffffffffff
je 0x8000320
mov byte [rbp + rax + 0x21d], 0
add rax, rbx
mov edi, r12d
mov qword [arg_18h], rbx
mov qword [arg_20h], rax
call close
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
movzx eax, byte [rbx + 1]
add rbx, 1
test al, al
je 0x8000238
cmp al, 0x28
jne 0x80002f0
movzx eax, byte [rbx + 1]
lea r15, [rbx + 1]
mov rbx, r15
cmp al, 0x29
jne 0x8000247
jmp 0x8000260
nop dword [rax]
mov edi, r12d
call close
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
