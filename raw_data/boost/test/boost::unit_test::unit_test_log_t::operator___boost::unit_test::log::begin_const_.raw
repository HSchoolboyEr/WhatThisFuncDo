push r13
push r12
mov r12, rdi
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x18
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rdx, rax
mov rax, qword [rax + 0x18]
mov rcx, qword [rdx + 0x20]
cmp rcx, rax
ja 0x8001aa9
jmp 0x8001abf
nop word [rax + rax]
add rax, 8
cmp rcx, rax
jbe 0x8001abf
mov rdx, qword [rax]
cmp byte [rdx + 0x30], 0
je 0x8001aa0
lea rsi, [var_fh]
mov rdi, r12
call _ZN5boost9unit_test15unit_test_log_tlsERKNS0_3log3endE
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rdx, rax
mov rax, qword [rax + 0x18]
mov rsi, qword [rdx + 0x20]
cmp rsi, rax
jbe 0x8001afa
nop dword [rax]
mov rdx, qword [rax]
add rax, 8
mov rdx, qword [rdx + 0x10]
mov rcx, qword [rdx]
movdqu xmm4, xmmword [rdx + 0x10]
mov edx, dword [rdx + 8]
movups xmmword [rcx + 8], xmm4
mov dword [rcx + 0x18], edx
cmp rsi, rax
ja 0x8001ad8
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rdx, qword [rax + 0x30]
mov qword [rax + 0x38], 0
mov byte [rdx], 0
mov rbp, qword [rbx + 8]
mov qword [rax + 0x50], 0
mov r13, qword [rbx]
mov dword [rax + 0x58], 8
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov r8, rbp
mov rcx, r13
xor esi, esi
mov rdx, qword [rax + 0x38]
sub r8, r13
lea rdi, [rax + 0x30]
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rbp, qword [rax + 0x30]
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov r13, qword [rax + 0x30]
add r13, qword [rax + 0x38]
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rdx, qword [rax + 0x30]
cmp rdx, r13
je 0x8001d5c
lea rcx, [rdx + 1]
mov rax, rbp
mov rsi, r13
sub rax, rcx
sub rsi, rdx
cmp rax, 0xe
jbe 0x8001d80
lea rax, [rsi - 1]
cmp rax, 0xe
jbe 0x8001d80
mov rcx, rsi
movdqa xmm3, xmmword [0x08001b9c]
movdqa xmm2, xmmword [0x08001ba4]
xor eax, eax
and rcx, 0xfffffffffffffff0
nop word [rax + rax]
movdqu xmm0, xmmword [rdx + rax]
movdqu xmm5, xmmword [rdx + rax]
movdqa xmm1, xmm2
pcmpeqb xmm0, xmm3
pand xmm1, xmm0
pandn xmm0, xmm5
por xmm0, xmm1
movups xmmword [rbp + rax], xmm0
add rax, 0x10
cmp rax, rcx
jne 0x8001bb0
mov rcx, rsi
and rcx, 0xfffffffffffffff0
lea rax, [rdx + rcx]
add rbp, rcx
cmp rsi, rcx
je 0x8001d5c
movzx ecx, byte [rax]
mov edx, 0x2f
cmp cl, 0x5c
cmove ecx, edx
mov byte [rbp], cl
lea rcx, [rax + 1]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 1]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_1h], cl
lea rcx, [rax + 2]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 2]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_2h], cl
lea rcx, [rax + 3]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 3]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_3h], cl
lea rcx, [rax + 4]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 4]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_4h], cl
lea rcx, [rax + 5]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 5]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_5h], cl
lea rcx, [rax + 6]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 6]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_6h], cl
lea rcx, [rax + 7]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 7]
cmp cl, 0x5c
cmove ecx, edx
lea rdx, [rax + 8]
mov byte [arg_7h], cl
cmp r13, rdx
je 0x8001d5c
movzx ecx, byte [rax + 8]
mov edx, 0x2f
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_8h], cl
lea rcx, [rax + 9]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 9]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_9h], cl
lea rcx, [rax + 0xa]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 0xa]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_ah], cl
lea rcx, [rax + 0xb]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 0xb]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_bh], cl
lea rcx, [rax + 0xc]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 0xc]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_ch], cl
lea rcx, [rax + 0xd]
cmp r13, rcx
je 0x8001d5c
movzx ecx, byte [rax + 0xd]
cmp cl, 0x5c
cmove ecx, edx
mov byte [arg_dh], cl
lea rcx, [rax + 0xe]
cmp r13, rcx
je 0x8001d5c
movzx eax, byte [rax + 0xe]
cmp al, 0x5c
cmove eax, edx
mov byte [arg_eh], al
call method boost::unit_test::(anonymous namespace)::s_log_impl()
mov rdx, qword [rbx + 0x10]
mov qword [rax + 0x50], rdx
add rsp, 0x18
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
ret
nop word [rax + rax]
xor eax, eax
movzx ecx, byte [rdx + rax]
cmp cl, 0x5c
je 0x8001da1
mov byte [rbp + rax], cl
add rax, 1
cmp rax, rsi
je 0x8001d5c
movzx ecx, byte [rdx + rax]
cmp cl, 0x5c
jne 0x8001d8b
mov byte [rbp + rax], 0x2f
add rax, 1
cmp rsi, rax
jne 0x8001d82
jmp 0x8001d5c
