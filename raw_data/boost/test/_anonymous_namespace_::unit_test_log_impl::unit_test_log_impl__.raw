push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
mov rdi, qword [rdi + 0x78]
lea rax, [rbx + 0x88]
cmp rdi, rax
je 0x800040b
mov rax, qword [rbx + 0x88]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [rbx + 0x30]
lea rax, [rbx + 0x40]
cmp rdi, rax
je 0x8000425
mov rax, qword [rbx + 0x40]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [rbx + 0x18]
test rdi, rdi
je 0x800043a
mov rsi, qword [rbx + 0x28]
sub rsi, rdi
call _ZdlPvm
mov r13, qword [rbx + 8]
mov rbp, qword [rbx]
cmp r13, rbp
je 0x80004e3
lea r14, [0x08000451]
jmp 0x8000473
nop dword [rax + rax]
mov r12, qword [arg_18h]
test r12, r12
je 0x800046a
lock sub dword [r12 + 8], 1
je 0x80004b0
add rbp, 0x38
cmp r13, rbp
je 0x80004e0
mov r12, qword [arg_28h]
test r12, r12
je 0x8000458
lock sub dword [r12 + 8], 1
jne 0x8000458
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
lock sub dword [r12 + 0xc], 1
jne 0x8000458
mov rax, qword [r12]
mov rdi, r12
mov rdx, qword [rax + 0x18]
cmp rdx, r14
jne 0x8000510
call qword [rax + 8]
jmp 0x8000458
nop dword [rax]
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
lock sub dword [r12 + 0xc], 1
jne 0x800046a
mov rax, qword [r12]
mov rdi, r12
mov rdx, qword [rax + 0x18]
cmp rdx, r14
jne 0x8000520
call qword [rax + 8]
add rbp, 0x38
cmp r13, rbp
jne 0x8000473
nop
mov rbp, qword [rbx]
test rbp, rbp
je 0x8000500
mov rsi, qword [rbx + 0x10]
mov rdi, rbp
pop rbx
sub rsi, rbp
pop rbp
pop r12
pop r13
pop r14
jmp _ZdlPvm
nop
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
call rdx
jmp 0x8000458
nop word [rax + rax]
call rdx
jmp 0x800046a
