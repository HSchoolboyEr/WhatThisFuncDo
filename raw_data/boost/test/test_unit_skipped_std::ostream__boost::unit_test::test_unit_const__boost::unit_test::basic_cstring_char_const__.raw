push r15
lea r15, [0x08001bd9]
push r14
push r13
mov r13, rdx
mov edx, 1
push r12
mov r12, rsi
lea rsi, [0x08001bf1]
push rbp
mov rdi, r12
push rbx
sub rsp, 0x88
mov qword [var_8h], rcx
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
lea rax, [0x08001c0e]
cmp dword [r13], 1
cmovne r15, rax
mov rax, r15
nop word [rax + rax]
add rax, 1
cmp byte [rax], 0
jne 0x8001c20
sub rax, r15
lea rbx, [arg_40h]
lea rbp, [arg_30h]
mov qword [arg_30h], rbx
mov r14, rax
mov qword [arg_28h], rax
cmp rax, 0xf
ja 0x8002143
cmp rax, 1
jne 0x8001d41
mov byte [arg_40h], 0x54
mov rax, rbx
mov qword [arg_38h], r14
mov rdi, r12
mov byte [rax + r14], 0
mov rdx, qword [arg_38h]
mov rsi, qword [arg_30h]
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov rdi, qword [arg_30h]
cmp rdi, rbx
je 0x8001c93
mov rax, qword [arg_40h]
lea rsi, [rax + 1]
call _ZdlPvm
mov edx, 5
lea rsi, [0x08001c9f]
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 2
lea rsi, [0x08001cb3]
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov rbx, qword [r13 + 0x88]
mov rax, qword [r13 + 0x90]
add rax, rbx
mov r13, rax
movzx eax, byte [0x08001cd6]
test al, al
je _ZGVZN5boost9unit_test5utils13print_escapedERSoNS0_13basic_cstringIKcEEE9char_type
cmp rbx, r13
je 0x8001d90
nop word [rax + rax]
mov rax, qword [0x08001cf7]
movzx esi, byte [rbx]
test rax, rax
je 0x8001d6e
lea r15, [0x08001d06]
nop word cs:[rax + rax]
mov rdx, qword [rax + 0x10]
mov rcx, qword [rax + 0x18]
cmp byte [rax + 0x20], sil
jge 0x8001d34
test rcx, rcx
je 0x8001d58
mov rax, rcx
mov rdx, qword [rax + 0x10]
mov rcx, qword [rax + 0x18]
cmp byte [rax + 0x20], sil
jl 0x8001d1e
mov r15, rax
test rdx, rdx
je 0x8001d58
mov rax, rdx
jmp 0x8001d10
test rax, rax
jne 0x80022e8
mov rax, rbx
jmp 0x8001c5f
nop word [rax + rax]
lea rax, [0x08001d5f]
cmp r15, rax
je 0x8001d6e
cmp sil, byte [r15 + 0x20]
jge 0x8001f10
mov byte [arg_30h], sil
mov edx, 1
mov rsi, rbp
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
add rbx, 1
cmp r13, rbx
jne _ZZN5boost9unit_test5utils13print_escapedERSoNS0_13basic_cstringIKcEEE9char_type
mov edx, 1
mov rsi, rbp
mov rdi, r12
mov byte [arg_30h], 0x22
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 8
lea rsi, [0x08001db1]
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 2
lea rsi, [0x08001dc5]
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 3
lea rsi, [0x08001dd9]
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 1
mov rsi, rbp
mov rdi, r12
mov byte [arg_30h], 0x22
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 7
lea rsi, [0x08001e02]
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 2
lea rsi, [0x08001e16]
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov rax, qword [arg_8h]
mov rbx, qword [rax]
mov r13, qword [rax + 8]
movzx eax, byte [0x08001e31]
test al, al
je _ZGVZN5boost9unit_test5utils13print_escapedERSoNS0_13basic_cstringIKcEEE9char_type
cmp rbx, r13
je 0x8001ed0
nop word [rax + rax]
mov rax, qword [0x08001e4f]
movzx esi, byte [rbx]
test rax, rax
je 0x8001eae
lea r15, [0x08001e5e]
nop
mov rdx, qword [rax + 0x10]
mov rcx, qword [rax + 0x18]
cmp sil, byte [rax + 0x20]
jle 0x8001e84
test rcx, rcx
je 0x8001e98
mov rax, rcx
mov rdx, qword [rax + 0x10]
mov rcx, qword [rax + 0x18]
cmp sil, byte [rax + 0x20]
jg 0x8001e6e
mov r15, rax
test rdx, rdx
je 0x8001e98
mov rax, rdx
jmp 0x8001e60
nop dword [rax]
lea rax, [0x08001e9f]
cmp r15, rax
je 0x8001eae
cmp sil, byte [r15 + 0x20]
jge 0x8001f68
mov byte [arg_30h], sil
mov edx, 1
mov rsi, rbp
mov rdi, r12
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
add rbx, 1
cmp r13, rbx
jne _ZZN5boost9unit_test5utils13print_escapedERSoNS0_13basic_cstringIKcEEE9char_type
mov rsi, rbp
mov rdi, r12
mov edx, 1
mov byte [arg_30h], 0x22
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov rdi, r12
mov edx, 2
lea rsi, [0x08001ef4]
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
add rsp, 0x88
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov edx, 1
mov rsi, rbp
mov rdi, r12
mov byte [arg_30h], 0x26
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov r15, qword [r15 + 0x28]
mov r14, rax
test r15, r15
je 0x8001fc0
mov rdi, r15
call strlen
mov rsi, r15
mov rdi, r14
mov rdx, rax
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 1
mov rsi, rbp
mov rdi, r14
mov byte [arg_30h], 0x3b
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
jmp 0x8001d83
nop dword [rax]
mov edx, 1
mov rsi, rbp
mov rdi, r12
mov byte [arg_30h], 0x26
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov r15, qword [r15 + 0x28]
mov r14, rax
test r15, r15
je 0x8001fe0
mov rdi, r15
call strlen
mov rsi, r15
mov rdi, r14
mov rdx, rax
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
mov edx, 1
mov rsi, rbp
mov rdi, r14
mov byte [arg_30h], 0x3b
call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
jmp 0x8001ec3
nop dword [rax]
mov rax, qword [r14]
mov rdi, qword [rax - 0x18]
add rdi, r14
mov esi, dword [rdi + 0x20]
or esi, 1
call _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
jmp 0x8001f4b
nop word [rax + rax]
mov rax, qword [r14]
mov rdi, qword [rax - 0x18]
add rdi, r14
mov esi, dword [rdi + 0x20]
or esi, 1
call _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
jmp 0x8001f9f
lea rdi, [0x08001ffe]
call __cxa_guard_acquire
test eax, eax
je 0x8001e39
lea rax, [0x08002012]
mov byte [arg_30h], 0x3c
mov r15, rbp
mov qword [arg_38h], rax
lea rax, [0x08002026]
mov qword [arg_48h], rax
lea rax, [0x08002032]
mov qword [arg_58h], rax
lea rax, [0x0800203e]
mov qword [arg_68h], rax
lea rax, [0x0800204a]
mov qword [arg_78h], rax
lea rax, [0x08002056]
mov byte [arg_40h], 0x3e
mov byte [arg_50h], 0x26
mov byte [arg_60h], 0x27
mov byte [arg_70h], 0x22
mov dword [0x08002074], 0
mov qword [0x0800207f], 0
mov qword [arg_10h], rax
mov qword [0x0800208b], rax
mov qword [0x08002092], rax
mov qword [0x0800209d], 0
nop dword [rax]
lea rsi, [0x080020a7]
mov rdx, r15
lea rdi, [rsi - 8]
call _ZNSt8_Rb_treeIcSt4pairIKcPS1_ESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_
mov r14, rdx
test rdx, rdx
je 0x8002107
test rax, rax
setne dl
cmp r14, qword [arg_10h]
sete al
or dl, al
mov byte [arg_8h], dl
je 0x80022d6
mov edi, 0x30
call _Znwm
movdqu xmm1, xmmword [r15]
movzx edi, byte [arg_8h]
mov rsi, rax
mov rdx, r14
lea rcx, [0x080020f6]
movups xmmword [rax + 0x20], xmm1
call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
add qword [0x08002107], 1
add r15, 0x10
lea rax, [arg_80h]
cmp r15, rax
jne 0x80020a0
lea rdi, [0x0800211f]
call __cxa_guard_release
lea rdx, [0x0800212b]
lea rsi, [0x08002132]
lea rdi, [0x08002139]
call __cxa_atexit
jmp 0x8001e39
mov rdi, rbp
lea rsi, [arg_28h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [arg_30h], rax
mov rdi, rax
mov rax, qword [arg_28h]
mov qword [arg_40h], rax
mov rdx, r14
mov rsi, r15
call memcpy
mov r14, qword [arg_28h]
mov rax, qword [arg_30h]
jmp 0x8001c5f
lea rdi, [0x08002185]
call __cxa_guard_acquire
test eax, eax
je 0x8001cde
lea rax, [0x08002199]
mov byte [arg_30h], 0x3c
mov r15, rbp
mov qword [arg_38h], rax
lea rax, [0x080021ad]
mov qword [arg_48h], rax
lea rax, [0x080021b9]
mov qword [arg_58h], rax
lea rax, [0x080021c5]
mov qword [arg_68h], rax
lea rax, [0x080021d1]
mov qword [arg_78h], rax
lea rax, [0x080021dd]
mov byte [arg_40h], 0x3e
mov byte [arg_50h], 0x26
mov byte [arg_60h], 0x27
mov byte [arg_70h], 0x22
mov dword [0x080021fb], 0
mov qword [0x08002206], 0
mov qword [arg_10h], rax
mov qword [0x08002212], rax
mov qword [0x08002219], rax
mov qword [0x08002224], 0
nop dword [rax]
lea rsi, [0x0800222f]
mov rdx, r15
lea rdi, [rsi - 8]
call _ZNSt8_Rb_treeIcSt4pairIKcPS1_ESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_
mov r14, rdx
test rdx, rdx
je 0x800228b
test rax, rax
setne dl
cmp r14, qword [arg_10h]
sete al
or dl, al
mov byte [arg_1fh], dl
je 0x80022c7
mov edi, 0x30
call _Znwm
movdqu xmm0, xmmword [r15]
movzx edi, byte [arg_1fh]
mov rsi, rax
mov rdx, r14
lea rcx, [0x0800227a]
movups xmmword [rax + 0x20], xmm0
call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
add qword [0x0800228b], 1
add r15, 0x10
lea rax, [arg_80h]
cmp r15, rax
jne 0x8002228
lea rdi, [0x080022a3]
call __cxa_guard_release
lea rdx, [0x080022af]
lea rsi, [0x080022b6]
lea rdi, [0x080022bd]
call __cxa_atexit
jmp 0x8001cde
movzx eax, byte [r14 + 0x20]
cmp byte [r15], al
setl byte [arg_1fh]
jmp 0x8002259
movzx eax, byte [r14 + 0x20]
cmp byte [r15], al
setl byte [arg_8h]
jmp 0x80020d5
mov rdi, rbx
jmp 0x8002164
