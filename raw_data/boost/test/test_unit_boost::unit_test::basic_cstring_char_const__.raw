push r14
lea rax, [0x08001c39]
push r13
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x30
mov dword [rdi], 0x10
mov qword [rdi + 8], rax
add rax, 1
cmp byte [rax], 0
jne 0x8001c50
mov qword [rbx + 0x10], rax
mov r14, qword [rsi]
lea r13, [arg_20h]
lea rbp, [rbx + 0x40]
lea rax, [0x08001c70]
mov qword [arg_10h], r13
mov r12, qword [rsi + 8]
movdqa xmm0, xmmword [0x08001c81]
mov qword [rbx + 0x18], rax
mov qword [rbx + 0x20], rax
mov eax, 0xffffffff
movups xmmword [rbx + 0x28], xmm0
pxor xmm0, xmm0
mov qword [rbx + 0x38], rax
mov qword [rbx + 0x80], 0
movups xmmword [rbx + 0x40], xmm0
movups xmmword [rbx + 0x50], xmm0
movups xmmword [rbx + 0x60], xmm0
movups xmmword [rbx + 0x70], xmm0
test r14, r14
jne 0x8001cc3
test r12, r12
jne .LC0
sub r12, r14
mov qword [arg_8h], r12
cmp r12, 0xf
ja 0x8001e50
cmp r12, 1
jne 0x8001de0
movzx eax, byte [r14]
mov byte [arg_20h], al
mov rax, r13
mov qword [arg_18h], r12
lea rdi, [rbx + 0x98]
mov byte [rax + r12], 0
mov r14, qword [arg_10h]
mov r12, qword [arg_18h]
mov qword [rbx + 0x88], rdi
mov rax, r14
add rax, r12
je 0x8001d1d
test r14, r14
je .LC0
mov qword [arg_8h], r12
cmp r12, 0xf
ja 0x8001e08
cmp r12, 1
jne 0x8001df8
movzx eax, byte [r14]
mov byte [rbx + 0x98], al
mov qword [rbx + 0x90], r12
mov byte [rdi + r12], 0
mov rdi, qword [arg_10h]
cmp rdi, r13
je 0x8001d64
mov rax, qword [arg_20h]
lea rsi, [rax + 1]
call _ZdlPvm
lea rax, [rbx + 0xb8]
pxor xmm0, xmm0
mov qword [rbx + 0xb0], 0
mov qword [rbx + 0xa8], rax
mov rax, qword [0x08001d88]
mov byte [rbx + 0xb8], 0
mov dword [rbx + 0xc8], 0
mov qword [rbx + 0xd0], 0
mov qword [rbx + 0xd8], rax
mov qword [rbx + 0xe0], 0
movups xmmword [rbx + 0xe8], xmm0
movups xmmword [rbx + 0xf8], xmm0
movups xmmword [rbx + 0x108], xmm0
add rsp, 0x30
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
test r12, r12
jne 0x8001e99
mov rax, r13
jmp 0x8001cea
nop dword [rax]
test r12, r12
je 0x8001d40
jmp 0x8001e31
nop dword [rax + rax]
lea rsi, [arg_8h]
lea rdi, [rbx + 0x88]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [rbx + 0x88], rax
mov rdi, rax
mov rax, qword [arg_8h]
mov qword [rbx + 0x98], rax
mov rdx, r12
mov rsi, r14
call memcpy
mov r12, qword [arg_8h]
mov rdi, qword [rbx + 0x88]
jmp 0x8001d40
nop dword [rax]
lea rsi, [arg_8h]
lea rdi, [arg_10h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [arg_10h], rax
mov rdi, rax
mov rax, qword [arg_8h]
mov qword [arg_20h], rax
mov rdx, r12
mov rsi, r14
call memcpy
mov r12, qword [arg_8h]
mov rax, qword [arg_10h]
jmp 0x8001cea
lea rdi, [0x08001e94]
call _ZSt19__throw_logic_errorPKc
mov rdi, r13
jmp 0x8001e73
lea rdi, [0x08001ea5]
call _ZSt19__throw_logic_errorPKc
mov r12, rax
jmp .text.unlikely
mov r12, rax
jmp .text.unlikely
nop word [rax + rax]
