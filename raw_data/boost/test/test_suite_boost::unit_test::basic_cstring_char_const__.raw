push r14
lea rax, [0x08002839]
push r13
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x30
mov rbp, qword [rsi]
mov r12, qword [rsi + 8]
mov qword [rdi + 0x10], rax
mov dword [rdi + 8], 0x10
nop dword [rax + rax]
add rax, 1
cmp byte [rax], 0
jne 0x8002860
movdqa xmm0, xmmword [0x08002871]
mov qword [rbx + 0x18], rax
lea rax, [0x0800287c]
lea r13, [arg_20h]
mov qword [rbx + 0x20], rax
lea r14, [rbx + 0x48]
mov qword [rbx + 0x28], rax
mov eax, 0xffffffff
movups xmmword [rbx + 0x30], xmm0
pxor xmm0, xmm0
mov qword [rbx + 0x40], rax
mov qword [rbx + 0x88], 0
mov qword [arg_10h], r13
movups xmmword [rbx + 0x48], xmm0
movups xmmword [rbx + 0x58], xmm0
movups xmmword [rbx + 0x68], xmm0
movups xmmword [rbx + 0x78], xmm0
test rbp, rbp
jne 0x80028cc
test r12, r12
jne .LC0
sub r12, rbp
mov qword [arg_8h], r12
cmp r12, 0xf
ja 0x8002ac8
cmp r12, 1
jne 0x8002a58
movzx eax, byte [rbp]
mov byte [arg_20h], al
mov rax, r13
mov qword [arg_18h], r12
lea rdi, [rbx + 0xa0]
mov byte [rax + r12], 0
mov rbp, qword [arg_10h]
mov r12, qword [arg_18h]
mov qword [rbx + 0x90], rdi
mov rax, rbp
add rax, r12
je 0x8002926
test rbp, rbp
je .LC0
mov qword [arg_8h], r12
cmp r12, 0xf
ja 0x8002a80
cmp r12, 1
jne 0x8002a70
movzx eax, byte [rbp]
mov byte [rbx + 0xa0], al
mov qword [rbx + 0x98], r12
mov byte [rdi + r12], 0
mov rdi, qword [arg_10h]
cmp rdi, r13
je 0x800296d
mov rax, qword [arg_20h]
lea rsi, [rax + 1]
call _ZdlPvm
lea rax, [rbx + 0xc0]
pxor xmm0, xmm0
mov rdi, rbx
mov qword [rbx + 0xb8], 0
mov qword [rbx + 0xb0], rax
mov rax, qword [0x08002994]
lea rbp, [rbx + 0x168]
mov byte [rbx + 0xc0], 0
mov qword [rbx + 0xe0], rax
lea rax, [0x080029b0]
mov qword [rbx], rax
lea rax, [rbx + 0x140]
mov dword [rbx + 0xd0], 0
mov qword [rbx + 0xd8], 0
mov qword [rbx + 0xe8], 0
mov qword [rbx + 0x130], 0
mov dword [rbx + 0x140], 0
mov qword [rbx + 0x148], 0
mov qword [rbx + 0x150], rax
mov qword [rbx + 0x158], rax
mov qword [rbx + 0x160], 0
mov qword [rbx + 0x178], 0
movups xmmword [rbx + 0xf0], xmm0
movups xmmword [rbx + 0x100], xmm0
movups xmmword [rbx + 0x110], xmm0
movups xmmword [rbx + 0x120], xmm0
movups xmmword [rbx + 0x168], xmm0
call _ZN5boost9unit_test9framework18register_test_unitEPNS0_10test_suiteE
add rsp, 0x30
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
test r12, r12
jne 0x8002b11
mov rax, r13
jmp 0x80028f3
nop dword [rax]
test r12, r12
je 0x8002949
jmp 0x8002aa9
nop dword [rax + rax]
lea rsi, [arg_8h]
lea rdi, [rbx + 0x90]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [rbx + 0x90], rax
mov rdi, rax
mov rax, qword [arg_8h]
mov qword [rbx + 0xa0], rax
mov rdx, r12
mov rsi, rbp
call memcpy
mov r12, qword [arg_8h]
mov rdi, qword [rbx + 0x90]
jmp 0x8002949
nop dword [rax]
lea rsi, [arg_8h]
lea rdi, [arg_10h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [arg_10h], rax
mov rdi, rax
mov rax, qword [arg_8h]
mov qword [arg_20h], rax
mov rdx, r12
mov rsi, rbp
call memcpy
mov r12, qword [arg_8h]
mov rax, qword [arg_10h]
jmp 0x80028f3
lea rdi, [0x08002b0c]
call _ZSt19__throw_logic_errorPKc
mov rdi, r13
jmp 0x8002aeb
lea rdi, [0x08002b1d]
call _ZSt19__throw_logic_errorPKc
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov r12, rax
jmp .text.unlikely
nop word [rax + rax]
