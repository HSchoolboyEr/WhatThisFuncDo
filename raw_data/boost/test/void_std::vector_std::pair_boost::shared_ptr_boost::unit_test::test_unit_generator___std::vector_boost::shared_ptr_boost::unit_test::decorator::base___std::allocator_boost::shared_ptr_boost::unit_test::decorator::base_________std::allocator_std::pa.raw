movabs rcx, 0x333333333333333
push r15
mov r15, rdx
movabs rdx, 0xcccccccccccccccd
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov rax, qword [rdi + 8]
mov r13, qword [rdi]
mov qword [var_10h], rdi
mov qword [var_18h], rax
sub rax, r13
sar rax, 3
imul rax, rdx
cmp rax, rcx
je .LC27
test rax, rax
mov edx, 1
mov r14, rsi
mov rbp, rsi
cmovne rdx, rax
mov rbx, rsi
add rax, rdx
setb dl
mov qword [rsp], rax
sub r14, r13
movzx edx, dl
test rdx, rdx
jne 0x8008064
test rax, rax
jne 0x8008041
xor r12d, r12d
movdqu xmm2, xmmword [r15]
mov rax, qword [r15 + 8]
add r14, r12
movups xmmword [r14], xmm2
test rax, rax
je 0x8007d7e
lock add dword [rax + 8], 1
mov rsi, qword [r15 + 0x18]
mov rdx, qword [r15 + 0x10]
pxor xmm0, xmm0
mov qword [r14 + 0x20], 0
movups xmmword [r14 + 0x10], xmm0
mov rdi, rsi
sub rdi, rdx
mov qword [var_8h], rdi
je 0x8008077
movabs rax, 0x7ffffffffffffff0
cmp rdi, rax
ja _ZSt17__throw_bad_allocv
call _Znwm
mov rsi, qword [r15 + 0x18]
mov rdx, qword [r15 + 0x10]
mov rcx, qword [var_8h]
movq xmm0, rax
punpcklqdq xmm0, xmm0
add rcx, rax
movups xmmword [r14 + 0x10], xmm0
mov qword [r14 + 0x20], rcx
cmp rdx, rsi
je 0x80080cd
sub rsi, rdx
add rsi, rax
nop dword [rax]
mov rcx, qword [rdx]
mov qword [rax], rcx
mov rcx, qword [rdx + 8]
mov qword [rax + 8], rcx
test rcx, rcx
je 0x8007e10
lock add dword [rcx + 8], 1
add rax, 0x10
add rdx, 0x10
cmp rax, rsi
jne 0x8007df8
mov qword [r14 + 0x18], rsi
cmp rbp, r13
je 0x80080c5
lea rcx, [var_28h]
mov rax, r13
movabs rdx, 0xccccccccccccccd
sub rcx, r13
shr rcx, 3
imul rcx, rdx
movabs rdx, 0x1fffffffffffffff
and rcx, rdx
mov rdx, r12
sub rdx, r13
sub rdx, 8
cmp rdx, 0x40
jbe 0x800807e
test rcx, rcx
je 0x800807e
add rcx, 1
mov rdx, r12
mov rsi, rcx
shr rsi, 1
lea rsi, [rsi + rsi*4]
shl rsi, 4
add rsi, r13
nop dword [rax + rax]
movdqu xmm3, xmmword [rax + 0x10]
movdqu xmm2, xmmword [rax + 0x20]
add rax, 0x50
add rdx, 0x50
movdqu xmm1, xmmword [rax - 0x20]
movdqu xmm0, xmmword [rax - 0x10]
movdqu xmm4, xmmword [rax - 0x50]
movups xmmword [rdx - 0x40], xmm3
movups xmmword [rdx - 0x30], xmm2
movups xmmword [rdx - 0x50], xmm4
movups xmmword [rdx - 0x20], xmm1
movups xmmword [rdx - 0x10], xmm0
cmp rax, rsi
jne 0x8007e90
mov rsi, rcx
and rsi, 0xfffffffffffffffe
lea rax, [rsi + rsi*4]
shl rax, 3
lea rdx, [r13 + rax]
add rax, r12
cmp rsi, rcx
je 0x8007f0c
mov rsi, qword [rdx]
mov qword [rax], rsi
mov rsi, qword [rdx + 8]
mov qword [rax + 8], rsi
mov rsi, qword [rdx + 0x10]
mov qword [rax + 0x10], rsi
mov rsi, qword [rdx + 0x18]
mov rdx, qword [rdx + 0x20]
mov qword [rax + 0x18], rsi
mov qword [rax + 0x20], rdx
lea rax, [rcx + rcx*4]
lea rsi, [r12 + rax*8]
mov rax, qword [var_18h]
lea r14, [rsi + 0x28]
cmp rbp, rax
je 0x8007ff3
movabs rcx, 0xccccccccccccccd
sub rax, rbp
mov rdx, rbp
sub rax, 0x28
shr rax, 3
imul rax, rcx
movabs rcx, 0x1fffffffffffffff
and rax, rcx
lea rcx, [rax + 1]
mov rax, r14
je 0x8007fc5
mov rdi, rcx
shr rdi, 1
lea rdi, [rdi + rdi*4]
shl rdi, 4
lea rsi, [rsi + rdi + 0x28]
nop dword [rax + rax]
movdqu xmm4, xmmword [rdx]
movdqu xmm5, xmmword [rdx + 0x10]
add rax, 0x50
add rdx, 0x50
movdqu xmm6, xmmword [rdx - 0x30]
movdqu xmm7, xmmword [rdx - 0x20]
movdqu xmm1, xmmword [rdx - 0x10]
movups xmmword [rax - 0x50], xmm4
movups xmmword [rax - 0x40], xmm5
movups xmmword [rax - 0x30], xmm6
movups xmmword [rax - 0x20], xmm7
movups xmmword [rax - 0x10], xmm1
cmp rax, rsi
jne 0x8007f70
mov rdx, rcx
and rdx, 0xfffffffffffffffe
lea rax, [rdx + rdx*4]
shl rax, 3
lea rbx, [rbp + rax]
add rax, r14
cmp rcx, rdx
je 0x8007feb
mov rdx, qword [rbx]
mov qword [rax], rdx
mov rdx, qword [rbx + 8]
mov qword [rax + 8], rdx
mov rdx, qword [rbx + 0x10]
mov qword [rax + 0x10], rdx
mov rdx, qword [rbx + 0x18]
mov qword [rax + 0x18], rdx
mov rdx, qword [rbx + 0x20]
mov qword [rax + 0x20], rdx
lea rax, [rcx + rcx*4]
lea r14, [r14 + rax*8]
test r13, r13
je 0x8008014
mov rax, qword [var_10h]
mov rdi, r13
mov rax, qword [rax + 0x10]
mov rsi, rax
mov qword [var_8h], rax
sub rsi, r13
call _ZdlPvm
mov rax, qword [var_10h]
movq xmm0, r12
movq xmm3, r14
add r12, qword [rsp]
punpcklqdq xmm0, xmm3
mov qword [rax + 0x10], r12
movups xmmword [rax], xmm0
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
cmp rax, rcx
cmovbe rcx, rax
lea rax, [rcx + rcx*4]
shl rax, 3
mov qword [rsp], rax
mov rdi, rax
call _Znwm
mov r12, rax
jmp 0x8007d64
movabs rax, 0x7ffffffffffffff8
mov qword [rsp], rax
mov rdi, rax
jmp _Znwm
xor eax, eax
jmp 0x8007dc8
mov rdx, r12
mov rax, r13
nop dword [rax]
mov rsi, qword [rax]
add rax, 0x28
add rdx, 0x28
mov qword [rdx - 0x28], rsi
mov rsi, qword [rax - 0x20]
mov qword [rdx - 0x20], rsi
mov rsi, qword [rax - 0x18]
mov qword [rdx - 0x18], rsi
mov rsi, qword [rax - 0x10]
mov qword [rdx - 0x10], rsi
mov rsi, qword [rax - 8]
mov qword [rdx - 8], rsi
cmp rbp, rax
jne 0x8008088
add rcx, 1
jmp 0x8007f0c
mov rsi, r12
jmp 0x8007f14
mov rsi, rax
jmp 0x8007e1d
call _ZSt17__throw_bad_allocv
lea rdi, [0x080080e1]
call _ZSt20__throw_length_errorPKc
mov rbp, rax
mov rdi, qword [r14 + 8]
test rdi, rdi
je 0x80080f7
call _ZN5boost6detail15sp_counted_base7releaseEv
mov rdi, rbp
call __cxa_begin_catch
test r12, r12
jne 0x8008111
mov rdi, r14
call _ZNSt4pairIN5boost10shared_ptrINS0_9unit_test19test_unit_generatorEEESt6vectorINS1_INS2_9decorator4baseEEESaIS8_EEED1Ev
call __cxa_rethrow
mov rsi, qword [rsp]
mov rdi, r12
call _ZdlPvm
jmp __cxa_rethrow
