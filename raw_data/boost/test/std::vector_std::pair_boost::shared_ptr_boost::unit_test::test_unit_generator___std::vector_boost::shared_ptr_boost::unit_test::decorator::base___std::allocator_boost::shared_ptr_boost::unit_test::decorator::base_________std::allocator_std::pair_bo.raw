push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x18
mov r13, qword [rdi + 8]
mov r14, qword [rdi]
mov qword [var_8h], rdi
cmp r13, r14
je 0x8007a9d
lea r15, [0x080079fa]
nop word [rax + rax]
mov rbx, qword [r14 + 0x18]
mov r12, qword [r14 + 0x10]
cmp rbx, r12
jne 0x8007a19
jmp 0x8007a64
nop
add r12, 0x10
cmp rbx, r12
je 0x8007a60
mov rbp, qword [r12 + 8]
test rbp, rbp
je 0x8007a10
lock sub dword [arg_8h], 1
jne 0x8007a10
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x8007a10
mov rax, qword [rbp]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r15
jne 0x8007af0
call qword [rax + 8]
add r12, 0x10
cmp rbx, r12
jne 0x8007a19
nop dword [rax + rax]
mov r12, qword [r14 + 0x10]
test r12, r12
je 0x8007a78
mov rsi, qword [r14 + 0x20]
mov rdi, r12
sub rsi, r12
call _ZdlPvm
mov rbp, qword [r14 + 8]
test rbp, rbp
je 0x8007a88
lock sub dword [arg_8h], 1
je 0x8007ac8
add r14, 0x28
cmp r13, r14
jne 0x8007a00
mov rax, qword [arg_8h]
mov r14, qword [rax]
test r14, r14
je 0x8007af7
mov rax, qword [var_8h]
mov rdi, r14
mov rsi, qword [rax + 0x10]
add rsp, 0x18
pop rbx
pop rbp
sub rsi, r14
pop r12
pop r13
pop r14
pop r15
jmp _ZdlPvm
nop dword [rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x8007a88
mov rax, qword [rbp]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r15
jne 0x8007b06
call qword [rax + 8]
jmp 0x8007a88
nop
call rdx
jmp 0x8007a10
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
call rdx
jmp 0x8007a88
