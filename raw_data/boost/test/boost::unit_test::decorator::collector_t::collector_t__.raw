push r15
push r14
mov r14, rdi
push r13
push r12
push rbp
push rbx
sub rsp, 8
mov r13, qword [rdi + 8]
mov r15, qword [rdi]
cmp r13, r15
je 0x8002127
nop dword [rax]
mov rbx, qword [r15 + 8]
mov r12, qword [r15]
cmp rbx, r12
jne 0x80020b9
jmp 0x8002103
nop word cs:[rax + rax]
add r12, 0x10
cmp rbx, r12
je 0x8002100
mov rbp, qword [r12 + 8]
test rbp, rbp
je 0x80020b0
lock sub dword [arg_8h], 1
jne 0x80020b0
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x80020b0
mov rax, qword [rbp]
lea rcx, [0x080020e6]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x8002160
call qword [rax + 8]
add r12, 0x10
cmp rbx, r12
jne 0x80020b9
nop
mov r12, qword [r15]
test r12, r12
je 0x8002150
mov rsi, qword [r15 + 0x10]
mov rdi, r12
add r15, 0x18
sub rsi, r12
call _ZdlPvm
cmp r13, r15
jne 0x8002098
mov r15, qword [r14]
test r15, r15
je 0x8002167
mov rsi, qword [r14 + 0x10]
add rsp, 8
mov rdi, r15
pop rbx
pop rbp
sub rsi, r15
pop r12
pop r13
pop r14
pop r15
jmp _ZdlPvm
nop dword [rax]
add r15, 0x18
cmp r13, r15
jne 0x8002098
jmp 0x8002124
nop
call rdx
jmp 0x80020b0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
