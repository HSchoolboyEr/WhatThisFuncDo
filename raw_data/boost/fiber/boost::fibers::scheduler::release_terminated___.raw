push r12
push rbp
lea rbp, [rdi + 0x68]
push rbx
mov rbx, rdi
nop dword [rax + rax]
mov rax, qword [rbx + 0x68]
test rax, rax
je 0x8000333
mov rdx, qword [rax]
sub qword [rbx + 0x60], 1
mov qword [rbx + 0x68], rdx
mov qword [rax], 0
cmp qword [rbx + 0x68], 0
je 0x8000340
lock sub qword [rax - 0xa8], 1
jne 0x80002c0
lea rdi, [rax - 0xb0]
mov r12, qword [rax + 0x20]
mov qword [rax + 0x20], 0
mov rax, qword [rax - 0xb0]
call qword [rax]
xor esi, esi
mov rdi, r12
call jump_fcontext
test rax, rax
je 0x80002c0
lea rdx, [0x08000320]
xor esi, esi
mov rdi, rax
call ontop_fcontext
mov rax, qword [rbx + 0x68]
test rax, rax
jne 0x80002c9
pop rbx
pop rbp
pop r12
ret
nop dword [rax + rax]
mov qword [rbx + 0x70], rbp
lock sub qword [rax - 0xa8], 1
jne 0x80002c0
jmp 0x80002ee
