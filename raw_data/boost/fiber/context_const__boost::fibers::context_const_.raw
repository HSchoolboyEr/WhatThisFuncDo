push r15
push r14
push r13
push r12
push rbp
mov rbp, rsi
push rbx
mov rbx, rdi
sub rsp, 8
mov r13, qword [rdi + 0x48]
mov rsi, qword [rdi + 0x28]
mov rdx, qword [rbx + 0x30]
sub rdx, qword [rbx + 0x38]
mov r12, r13
mov rcx, rdx
sub r12, rsi
sar rcx, 3
mov rdi, r12
sar rdi, 3
lea rax, [rdi - 1]
shl rax, 6
lea rdx, [rcx + rax]
mov rax, qword [rbx + 0x20]
sub rax, qword [rbx + 0x10]
movabs rcx, 0xfffffffffffffff
sar rax, 3
add rax, rdx
cmp rax, rcx
je .LC0
mov r8, qword [rbx]
mov rdx, qword [rbx + 8]
mov rax, r13
sub rax, r8
mov r9, rdx
sar rax, 3
sub r9, rax
cmp r9, 1
jbe 0x80007b0
mov edi, 0x200
call _Znwm
mov rdx, qword [rbp]
mov qword [r13 + 8], rax
mov rax, qword [rbx + 0x30]
mov qword [rax], rdx
mov rdx, qword [rbx + 0x48]
mov rax, qword [rdx + 8]
add rdx, 8
movq xmm1, rdx
movq xmm0, rax
add rax, 0x200
punpcklqdq xmm0, xmm0
movups xmmword [rbx + 0x30], xmm0
movq xmm0, rax
punpcklqdq xmm0, xmm1
movups xmmword [rbx + 0x40], xmm0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
lea r14, [rdi + 2]
lea rax, [r14 + r14]
cmp rdx, rax
ja 0x8000870
test rdx, rdx
mov eax, 1
cmovne rax, rdx
lea r13, [rdx + rax + 2]
cmp r13, rcx
ja _ZSt17__throw_bad_allocv
lea rdi, [r13*8]
call _Znwm
mov rsi, qword [rbx + 0x28]
mov r15, rax
mov rax, r13
sub rax, r14
shr rax, 1
lea r14, [r15 + rax*8]
mov rax, qword [rbx + 0x48]
lea rdx, [rax + 8]
cmp rdx, rsi
je 0x8000814
sub rdx, rsi
mov rdi, r14
call memmove
mov rax, qword [rbx + 8]
mov rdi, qword [rbx]
lea rsi, [rax*8]
call _ZdlPvm
mov qword [rbx], r15
mov qword [rbx + 8], r13
mov rax, qword [r14]
movq xmm0, qword [r14]
lea r13, [r14 + r12]
mov qword [rbx + 0x28], r14
mov qword [rbx + 0x48], r13
add rax, 0x200
movq xmm2, rax
punpcklqdq xmm0, xmm2
movups xmmword [rbx + 0x18], xmm0
mov rax, qword [r13]
mov qword [rbx + 0x38], rax
add rax, 0x200
mov qword [rbx + 0x40], rax
jmp 0x8000753
nop dword [rax]
sub rdx, r14
add r13, 8
shr rdx, 1
lea r14, [r8 + rdx*8]
mov rdx, r13
sub rdx, rsi
cmp rsi, r14
jbe 0x80008a0
cmp rsi, r13
je 0x800082f
mov rdi, r14
call memmove
jmp 0x800082f
nop dword [rax + rax]
cmp rsi, r13
je 0x800082f
lea rdi, [r12 + 8]
sub rdi, rdx
add rdi, r14
call memmove
jmp 0x800082f
lea rdi, [0x080008c1]
call _ZSt20__throw_length_errorPKc
add byte [rax], al
add byte [rax], al
call sym._GLOBAL__sub_I__ZN5boost6fibers4algo11shared_work8awakenedEPNS0_7contextE.cold
