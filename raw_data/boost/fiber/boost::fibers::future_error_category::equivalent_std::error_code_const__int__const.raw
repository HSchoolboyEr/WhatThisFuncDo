cmp rdi, qword [rsi + 8]
je 0x8000600
xor eax, eax
ret
nop dword [rax]
push rbp
push rbx
mov ebx, edx
lea rdx, [0x0800060b]
add byte [rax], al
add byte [rax], al
sub rsp, 8
mov rax, qword [rdi]
mov ebp, dword [rsi]
mov rax, qword [rax + 0x28]
cmp rax, rdx
jne 0x8000690
cmp ebp, 3
je 0x800062e
jg 0x8000648
cmp ebp, 1
je 0x800062e
cmp ebp, 2
jne 0x8000639
movzx eax, byte [0x08000635]
test al, al
je 0x8000650
cmp ebx, ebp
sete al
add rsp, 8
pop rbx
pop rbp
ret
nop dword [rax]
cmp ebp, 4
je 0x800062e
jmp 0x8000639
nop
lea rdi, [0x08000657]
call __cxa_guard_acquire
test eax, eax
je 0x8000639
lea rdi, [0x08000667]
call __cxa_guard_release
lea rdx, [0x08000673]
lea rsi, [0x0800067a]
lea rdi, [0x08000681]
call __cxa_atexit
jmp 0x8000639
nop dword [rax + rax]
mov esi, ebp
call rax
mov ebp, eax
jmp 0x8000639
