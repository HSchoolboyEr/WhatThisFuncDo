push rbp
lea rax, [0x08000b48]
push rbx
mov rbx, rdi
sub rsp, 8
mov qword [rdi], rax
lea rax, [rdi + 0x18]
mov dword [rdi + 8], 1
mov qword [rdi + 0x18], 0
mov qword [rdi + 0x10], 0
mov qword [rdi + 0x20], rax
mov edi, 0x80
call _Znwm
mov ecx, 0x10
mov rbp, rax
xor eax, eax
mov rdi, rbp
rep stosq qword [rdi], rax
lea rax, [0x08000b93]
lea rdi, [arg_48h]
mov qword [rbp], rax
lea rax, [arg_10h]
movq xmm0, rax
punpcklqdq xmm0, xmm0
movups xmmword [arg_10h], xmm0
call _ZNSt18condition_variableC1Ev
add byte [rax], al
add byte [rax], al
mov byte [arg_78h], 0
mov qword [rbx + 0x28], rbp
lock add qword [arg_8h], 1
lea rax, [rbx + 0x30]
mov qword [rbx + 0x30], 0
mov qword [rbx + 0x38], rax
mov qword [rbx + 0x40], rax
lea rax, [rbx + 0x50]
movq xmm0, rax
lea rax, [rbx + 0x68]
mov dword [rbx + 0x48], 0
punpcklqdq xmm0, xmm0
mov qword [rbx + 0x68], 0
mov qword [rbx + 0x60], 0
mov qword [rbx + 0x70], rax
mov qword [rbx + 0x78], 0
mov qword [rbx + 0x80], 0
mov byte [rbx + 0x88], 0
movups xmmword [rbx + 0x50], xmm0
add rsp, 8
pop rbx
pop rbp
ret
