lea rax, [0x08000567]
push r12
push rbp
push rbx
mov rbx, rdi
add rdi, 0x18
mov qword [rdi - 0x18], rax
call _ZN5boost6fibers6detail13spinlock_ttas4lockEv
add byte [rax], al
add byte [rax], al
mov rdi, qword [rbx + 0xc8]
test rdi, rdi
je 0x80005a8
mov rax, qword [rdi]
lea rdx, [0x08000591]
add byte [rax], al
add byte [rax], al
mov rax, qword [rax + 8]
cmp rax, rdx
jne 0x80009e0
mov esi, 0x18
call _ZdlPvm
mov dword [rbx + 0x18], 1
mov rdi, qword [rbx + 0xd0]
test rdi, rdi
jne 0x80009e7
mov rax, qword [rbx + 0xb8]
test rax, rax
je 0x80005d9
mov rdx, qword [rbx + 0xc0]
mov qword [rdx], rax
mov qword [rax + 8], rdx
mov rax, qword [rbx + 0xa0]
test rax, rax
je 0x80005f3
mov rdx, qword [rbx + 0xa8]
mov qword [rdx], rax
mov qword [rax + 8], rdx
mov r9, qword [rbx + 0x70]
test r9, r9
je 0x8000878
mov rax, r9
nop dword [rax + rax]
mov ecx, dword [rax + 0x18]
mov rdx, rax
mov rax, qword [rax]
test ecx, ecx
jne 0x8000608
mov rcx, qword [rdx + 8]
mov rdi, qword [rdx + 0x10]
test rax, rax
je 0x800063a
test rcx, rcx
je 0x8000608
test rdi, rdi
je 0x8000608
cmp rcx, rdi
je 0x800063a
cmp rdx, qword [rcx]
je 0x80008f0
mov r10, qword [rbx + 0x78]
mov rax, qword [rbx + 0x80]
lea r11, [rbx + 0x70]
mov rbp, qword [r9 + 8]
test r10, r10
je 0x8000900
test rax, rax
je 0x80009c0
mov rsi, qword [rax + 8]
test rsi, rsi
je 0x8000a67
nop dword [rax]
mov r8, rsi
mov rsi, qword [rsi + 8]
test rsi, rsi
jne 0x8000670
mov rsi, qword [r8 + 0x10]
cmp r11, r8
je 0x8000903
mov qword [r10], r8
mov qword [r8 + 8], r10
cmp rax, r8
je 0x80006ab
mov qword [r8 + 0x10], rax
mov qword [rax], r8
mov rax, qword [r8]
test rsi, rsi
je 0x80006a7
mov qword [rsi], rax
mov qword [rax + 8], rsi
mov qword [r8], r9
cmp r9, rdx
je 0x80009d8
cmp r11, rbp
je 0x8000958
mov qword [r9 + 0x10], r8
mov edi, dword [rbx + 0x88]
mov ecx, dword [r8 + 0x18]
mov dword [r8 + 0x18], edi
test ecx, ecx
je 0x8000878
cmp rdx, rax
jne 0x8000782
jmp 0x8000868
nop dword [rax + rax]
mov r8d, dword [rcx + 0x18]
mov rdi, qword [rcx + 0x10]
test r8d, r8d
jne 0x8000746
mov r8, qword [rax]
mov dword [rcx + 0x18], 1
mov dword [rax + 0x18], 0
mov r9, qword [r8 + 8]
mov qword [rax + 8], rdi
test rdi, rdi
je 0x800071e
mov qword [rdi], rax
mov qword [rcx + 0x10], rax
mov qword [rax], rcx
mov qword [rcx], r8
cmp rdx, r8
je 0x8000980
cmp r9, rax
jne 0x8000970
mov qword [r8 + 8], rcx
mov rcx, qword [rax + 8]
mov rdi, qword [rcx + 0x10]
mov r8, qword [rcx + 8]
test rdi, rdi
je 0x8000759
cmp dword [rdi + 0x18], 1
jne 0x8000acf
test r8, r8
je 0x8000769
cmp dword [r8 + 0x18], 1
jne 0x8000a8a
mov dword [rcx + 0x18], 0
mov rcx, qword [rax]
mov rsi, rax
cmp rdx, rcx
je 0x80009ae
mov rax, rcx
test rsi, rsi
je 0x8000791
cmp dword [rsi + 0x18], 1
jne 0x80009ab
mov rcx, qword [rax + 8]
cmp rcx, rsi
jne 0x80006f0
mov rcx, qword [rax + 0x10]
mov r9d, dword [rcx + 0x18]
mov rdi, qword [rcx + 8]
test r9d, r9d
jne 0x80007f7
mov r8, qword [rax]
mov dword [rcx + 0x18], 1
mov dword [rax + 0x18], 0
mov r9, qword [r8 + 8]
mov qword [rax + 0x10], rdi
test rdi, rdi
je 0x80007d0
mov qword [rdi], rax
mov qword [rcx + 8], rax
mov qword [rax], rcx
mov qword [rcx], r8
cmp rdx, r8
je 0x80009a0
cmp r9, rax
jne 0x8000990
mov qword [r8 + 8], rcx
mov rcx, rdi
mov rdi, qword [rcx + 8]
mov r8, qword [rcx + 0x10]
test rdi, rdi
je 0x800080a
cmp dword [rdi + 0x18], 1
jne 0x8000b4b
test r8, r8
je 0x8000769
cmp dword [r8 + 0x18], 1
je 0x8000769
mov r9d, dword [rax + 0x18]
mov dword [rcx + 0x18], r9d
mov dword [rax + 0x18], 1
mov dword [r8 + 0x18], 1
mov r8, qword [rax]
mov r9, qword [r8 + 8]
mov qword [rax + 0x10], rdi
test rdi, rdi
je 0x8000848
mov qword [rdi], rax
mov qword [rcx + 8], rax
mov qword [rax], rcx
mov qword [rcx], r8
cmp rdx, r8
je 0x8000ac7
cmp r9, rax
jne 0x8000b42
mov qword [r8 + 8], rcx
test rsi, rsi
jne 0x80009ab
nop dword [rax]
mov rbp, qword [rbx + 0x50]
test rbp, rbp
je 0x80008b9
mov rdi, qword [arg_18h]
mov r12, rbp
call method std::_Rb_tree<unsigned long, std::pair<unsigned long const, boost::fibers::context::fss_data>, std::_Select1st<std::pair<unsigned long const, boost::fibers::context::fss_data> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, boost::fibers::context::fss_data> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, boost::fibers::context::fss_data> >*) [clone .isra.0]
mov rdi, qword [r12 + 0x30]
mov rbp, qword [arg_10h]
test rdi, rdi
je 0x80008a7
lock sub qword [rdi + 8], 1
je 0x8000948
mov esi, 0x38
mov rdi, r12
call _ZdlPvm
test rbp, rbp
jne 0x8000881
mov rax, qword [rbx + 0x20]
lea rcx, [rbx + 0x20]
cmp rcx, rax
je 0x80008e2
nop word cs:[rax + rax]
mov rdx, rax
mov rax, qword [rax]
mov qword [rdx], 0
cmp rcx, rax
jne 0x80008d0
pop rbx
pop rbp
pop r12
ret
nop word [rax + rax]
cmp rdx, qword [rdi]
jne 0x800063a
jmp 0x8000608
nop
mov rsi, rax
test rsi, rsi
jne 0x80009c3
cmp r9, rdx
je 0x8000961
cmp r11, rbp
jne 0x8000a05
mov qword [r9 + 8], rsi
mov rcx, qword [rdx + 8]
cmp r11, rcx
je 0x8000a12
cmp r11, rdi
je 0x8000a35
mov ecx, dword [rbx + 0x88]
mov rax, r9
jmp 0x80006d2
nop word [rax + rax]
mov rax, qword [rdi]
call qword [rax + 8]
jmp 0x80008a7
nop dword [rax + rax]
mov qword [r9 + 8], r8
jmp 0x80006c4
mov qword [r9], rsi
jmp 0x8000922
nop word cs:[rax + rax]
mov qword [r8 + 0x10], rcx
mov rcx, rdi
jmp 0x8000742
nop dword [rax]
mov qword [rdx], rcx
mov rcx, rdi
jmp 0x8000742
nop dword [rax + rax]
mov qword [r8 + 0x10], rcx
mov rcx, qword [rax + 0x10]
jmp 0x80007f3
nop dword [rax]
mov qword [rdx], rcx
mov rcx, rdi
jmp 0x80007f3
mov rax, rsi
mov dword [rax + 0x18], 1
jmp 0x8000878
nop word [rax + rax]
mov rsi, r10
mov qword [rsi], r9
cmp r9, rdx
jne 0x8000911
jmp 0x8000961
nop dword [rax]
mov qword [rdx], r8
jmp 0x80006c4
call rax
jmp 0x80005a8
mov qword [rbx + 0xd0], 0
xor esi, esi
lea rdx, [0x080009fb]
call ontop_fcontext
jmp 0x80005bf
mov qword [r9 + 0x10], rsi
mov rdi, qword [rdx + 0x10]
jmp 0x8000922
test rax, rax
je 0x8000a5d
mov rcx, qword [rax + 8]
test rcx, rcx
je 0x8000a2c
mov rax, rcx
mov rcx, qword [rcx + 8]
test rcx, rcx
jne 0x8000a20
mov qword [rdx + 8], rax
jmp 0x800092b
test r10, r10
je 0x8000a62
mov rax, qword [r10 + 0x10]
test rax, rax
je 0x8000a54
nop dword [rax + rax]
mov r10, rax
mov rax, qword [rax + 0x10]
test rax, rax
jne 0x8000a48
mov qword [rdx + 0x10], r10
jmp 0x8000934
mov rax, r9
jmp 0x8000a2c
mov r10, r9
jmp 0x8000a54
mov rsi, qword [rax + 0x10]
cmp r11, rax
je 0x8000903
mov qword [r10], rax
mov r8, rax
mov qword [rax + 8], r10
jmp 0x80006ab
cmp dword [r8 + 0x18], 1
je 0x8000ad4
mov r9d, dword [rax + 0x18]
mov dword [rcx + 0x18], r9d
mov dword [rax + 0x18], 1
mov dword [r8 + 0x18], 1
mov r8, qword [rax]
mov r9, qword [r8 + 8]
mov qword [rax + 8], rdi
test rdi, rdi
je 0x8000ab4
mov qword [rdi], rax
mov qword [rcx + 0x10], rax
mov qword [rax], rcx
mov qword [rcx], r8
cmp rdx, r8
jne 0x800085b
mov qword [rdx], rcx
jmp 0x8000868
test r8, r8
jne 0x8000a83
mov r8, qword [rcx]
mov r9, qword [rdi + 8]
mov dword [rdi + 0x18], 1
mov dword [rcx + 0x18], 0
mov r10, qword [r8 + 8]
mov qword [rcx + 0x10], r9
test r9, r9
je 0x8000af9
mov qword [r9], rcx
mov qword [rdi + 8], rcx
mov qword [rcx], rdi
mov qword [rdi], r8
cmp rdx, r8
je 0x8000bbf
cmp rcx, r10
jne 0x8000bb6
mov qword [r8 + 8], rdi
mov rcx, qword [rax + 8]
mov r9d, dword [rax + 0x18]
mov r8, qword [rcx + 8]
mov rdi, qword [rcx + 0x10]
mov dword [rcx + 0x18], r9d
mov dword [rax + 0x18], 1
test r8, r8
je 0x8000aa1
jmp 0x8000a99
mov qword [r8 + 0x10], rcx
jmp 0x8000868
test r8, r8
jne 0x8000bc7
mov r8, qword [rcx]
mov r9, qword [rdi + 0x10]
mov dword [rdi + 0x18], 1
mov dword [rcx + 0x18], 0
mov r10, qword [r8 + 8]
mov qword [rcx + 8], r9
test r9, r9
je 0x8000b75
mov qword [r9], rcx
mov qword [rdi + 0x10], rcx
mov qword [rcx], rdi
mov qword [rdi], r8
cmp rdx, r8
je 0x8000bde
cmp rcx, r10
jne 0x8000bd8
mov qword [r8 + 8], rdi
mov rcx, qword [rax + 0x10]
mov r9d, dword [rax + 0x18]
mov r8, qword [rcx + 0x10]
mov rdi, qword [rcx + 8]
mov dword [rcx + 0x18], r9d
mov dword [rax + 0x18], 1
test r8, r8
je 0x8000835
jmp 0x800082d
mov qword [r8 + 0x10], rdi
jmp 0x8000b19
mov qword [rdx], rdi
jmp 0x8000b19
cmp dword [r8 + 0x18], 1
je 0x8000b50
jmp 0x800081e
nop dword [rax + rax]
mov qword [r8 + 0x10], rdi
jmp 0x8000b8d
mov qword [rdx], rdi
jmp 0x8000b8d
