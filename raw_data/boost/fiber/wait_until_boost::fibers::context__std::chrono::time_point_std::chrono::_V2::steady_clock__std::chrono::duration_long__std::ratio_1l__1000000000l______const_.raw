push rbx
mov r10, rdi
mov rbx, rdx
mov eax, 1
lock xadd qword [rsi + 0x30], rax
add rax, 1
mov qword [rsi + 0x90], rsi
add rdi, 0x30
lea r8, [rsi + 0x70]
mov qword [rsi + 0x98], rax
mov r9, qword [rdx]
mov rax, qword [r10 + 0x30]
mov qword [rsi + 0xd8], r9
test rax, rax
jne 0x8000e90
jmp 0x8000fb0
nop dword [rax]
test rdx, rdx
je 0x8000eb0
mov rax, rdx
mov rdx, qword [rax + 8]
mov rcx, qword [rax + 0x10]
cmp r9, qword [rax + 0x68]
jl 0x8000e88
test rcx, rcx
je 0x8001020
mov rdx, rcx
jmp 0x8000e8d
nop dword [rax]
cmp rdi, rax
je 0x8000fb3
mov qword [rax + 8], r8
cmp qword [r10 + 0x38], rax
je 0x80010d0
mov qword [rsi + 0x70], rax
mov rdx, qword [rax]
mov qword [rsi + 0x80], 0
mov qword [rsi + 0x78], 0
mov dword [rsi + 0x88], 0
jmp 0x8000f21
nop dword [rax]
test rcx, rcx
je 0x8000f50
mov r9d, dword [rcx + 0x18]
test r9d, r9d
jne 0x8000f50
mov dword [rcx + 0x18], 1
mov r8, rdx
mov dword [rax + 0x18], 1
mov rax, qword [rdx]
mov rcx, qword [rax]
cmp rdi, rax
je 0x8000ff0
mov rdx, rcx
cmp dword [rax + 0x18], 1
je 0x8000ff0
cmp rdi, rdx
je 0x8000ff0
mov rsi, qword [rdx + 8]
mov dword [rdx + 0x18], 0
mov rcx, rsi
cmp rsi, rax
jne 0x8000ef0
mov rcx, qword [rdx + 0x10]
test rcx, rcx
jne 0x8000ef5
mov rcx, qword [rax + 8]
cmp rsi, rax
je 0x8001070
cmp rcx, r8
je 0x800104c
mov rsi, qword [rdx]
mov r8, qword [rsi + 8]
mov qword [rdx + 0x10], rcx
test rcx, rcx
je 0x8000f79
mov qword [rcx], rdx
mov qword [rax + 8], rdx
mov qword [rdx], rax
mov qword [rax], rsi
cmp rdi, rsi
je 0x8001040
cmp r8, rdx
jne 0x80010d9
mov qword [rsi + 8], rax
mov rdx, qword [r10 + 0x30]
mov dword [rax + 0x18], 1
jmp 0x8000ff4
nop word cs:[rax + rax]
mov rax, rdi
movq xmm0, r8
mov qword [r10 + 0x40], r8
punpcklqdq xmm0, xmm0
movups xmmword [r10 + 0x30], xmm0
mov qword [rsi + 0x70], rax
mov qword [rsi + 0x80], 0
mov qword [rsi + 0x78], 0
mov dword [rsi + 0x88], 0
nop word cs:[rax + rax]
mov rdx, qword [r10 + 0x30]
mov rdi, qword [r10 + 0x28]
mov dword [rdx + 0x18], 1
mov rax, qword [rdi]
call qword [rax + 0x18]
mov rdi, rax
call _ZN5boost6fibers7context6resumeEv
add byte [rax], al
add byte [rax], al
call _ZNSt6chrono3_V212steady_clock3nowEv
cmp rax, qword [rbx]
pop rbx
setl al
ret
nop word [rax + rax]
cmp rdi, rax
je 0x8000fb3
mov qword [rax + 0x10], r8
cmp qword [r10 + 0x40], rax
jne 0x8000ec7
mov qword [r10 + 0x40], r8
jmp 0x8000ec7
nop dword [rax]
mov qword [r10 + 0x30], rax
mov rdx, rax
jmp 0x8000f9d
mov rcx, qword [r8 + 0x10]
mov qword [rax + 8], rcx
test rcx, rcx
je 0x800105c
mov qword [rcx], rax
mov qword [r8 + 0x10], rax
mov rcx, qword [r8 + 8]
mov qword [rax], r8
mov rax, r8
jmp 0x8000f66
nop
cmp rcx, r8
je 0x800108f
mov rcx, qword [r8 + 8]
mov qword [rax + 0x10], rcx
test rcx, rcx
je 0x8001085
mov qword [rcx], rax
mov qword [r8 + 8], rax
mov qword [rax], r8
mov rax, r8
mov rcx, qword [rdx]
mov rsi, qword [rax + 0x10]
mov r8, qword [rcx + 8]
mov qword [rdx + 8], rsi
test rsi, rsi
je 0x80010a6
mov qword [rsi], rdx
mov qword [rax + 0x10], rdx
mov qword [rdx], rax
mov qword [rax], rcx
cmp rdi, rcx
je 0x8001040
cmp r8, rdx
jne 0x80010e6
mov qword [rcx + 8], rax
mov rdx, qword [r10 + 0x30]
jmp 0x8000f9d
nop word [rax + rax]
mov qword [r10 + 0x38], r8
jmp 0x8000ec7
mov qword [rsi + 0x10], rax
mov rdx, qword [r10 + 0x30]
jmp 0x8000f9d
mov qword [rcx + 0x10], rax
mov rdx, qword [r10 + 0x30]
jmp 0x8000f9d
