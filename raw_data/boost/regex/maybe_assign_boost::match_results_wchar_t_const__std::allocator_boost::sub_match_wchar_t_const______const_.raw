push r15
mov r15, rsi
push r14
mov r14, rdi
push r13
push r12
push rbp
push rbx
sub rsp, 0x68
cmp byte [rdi + 0x4c], 0
jne 0x801fd60
mov rax, qword [rdi + 8]
mov rdi, qword [rdi]
mov rdx, qword [r15 + 8]
mov rcx, qword [r15]
mov rsi, rax
lea r8, [rdi + 0x30]
sub rsi, rdi
mov r9, rdx
cmp rsi, 0x30
mov rbx, rsi
cmova rax, r8
sub r9, rcx
add rcx, 0x30
cmp r9, 0x30
cmova rdx, rcx
sar rbx, 3
movabs rcx, 0xaaaaaaaaaaaaaaab
imul rbx, rcx
mov rcx, qword [rax]
test ebx, ebx
jle 0x801fc60
mov r9, qword [rdi + 8]
cmp rcx, r9
jne 0x801fd30
cmp ebx, 1
je 0x8020378
add rdi, 0x18
jmp 0x802037f
nop dword [rax + rax]
mov r9, qword [r14 + 0x28]
cmp r9, rcx
je 0x8020378
lea r8, [r14 + 0x20]
mov rbp, qword [r8]
cmp rsi, 0x18
jbe 0x801fd1b
sub rbx, 2
je 0x801fd1b
xor r8d, r8d
xor r10d, r10d
xor r11d, r11d
xor r12d, r12d
xor r13d, r13d
jmp 0x801fcb9
nop dword [rax]
test cl, cl
jne 0x8020390
add r8, 1
add rax, 0x18
add rdx, 0x18
cmp r8, rbx
je 0x801fd1b
mov rsi, qword [rax]
mov rcx, qword [rdx]
cmp rsi, r9
je 0x801fd40
cmp rcx, r9
je 0x801fd1b
mov r11, rsi
mov r10, rcx
sub r11, rbp
sub r10, rbp
sar r11, 2
sar r10, 2
cmp rsi, rcx
jb 0x801fd1b
ja 0x8020390
mov rdi, qword [rax + 8]
sub rdi, rsi
mov rsi, qword [rdx + 8]
mov r13, rdi
sub rsi, rcx
sar r13, 2
mov r12, rsi
sar r12, 2
cmp rsi, rdi
jne 0x8020390
cmp byte [rax + 0x10], 0
movzx ecx, byte [rdx + 0x10]
je 0x801fca0
test cl, cl
jne 0x801fca8
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
cmp ebx, 2
jg 0x801fc71
jmp 0x801fc6d
nop
cmp rcx, r9
je 0x801fd0d
add rsp, 0x68
mov rsi, r15
mov rdi, r14
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEEaSERKS6_.isra.0
nop
cmp rsi, rdi
je 0x80202d9
mov r12, qword [rsi + 8]
mov r13, qword [rsi]
mov r10, qword [rdi]
mov rsi, qword [rdi + 0x10]
mov rbx, r12
sub rbx, r13
sub rsi, r10
cmp rbx, rsi
ja 0x80209d0
mov r9, qword [rdi + 8]
lea rax, [r10 + rbx]
mov qword [var_8h], rax
mov rcx, r9
sub rcx, r10
cmp rbx, rcx
ja 0x80203c0
test rbx, rbx
jle 0x80202d0
movabs rax, 0xaaaaaaaaaaaaaaab
mov rdx, rbx
mov rcx, r10
sar rdx, 3
imul rdx, rax
mov qword [var_18h], rdx
mov rdi, rdx
mov rax, rdx
lea rdx, [r13 + 0x18]
sub rcx, rdx
add rcx, 8
cmp rcx, 0x160
mov rcx, r10
seta sil
sub rcx, r13
sub rcx, 0x18
cmp rcx, 0x150
seta cl
test sil, cl
je 0x8020974
cmp rbx, 0x180
jle 0x8020974
lea rax, [rdi - 1]
mov qword [var_28h], r13
mov rcx, r10
lea rdx, [r13 + 0x10]
mov qword [var_20h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_30h], r10
shl rax, 7
mov qword [var_38h], r14
add rax, r10
mov qword [var_40h], r15
mov qword [var_10h], rax
nop dword [rax]
movdqu xmm2, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm4, xmmword [rdx - 0x110]
movdqu xmm5, xmmword [rdx - 0x120]
shufpd xmm7, xmm2, 1
movdqu xmm3, xmmword [rdx - 0x140]
movdqu xmm2, xmmword [rdx - 0xe0]
shufpd xmm5, xmm4, 1
movdqu xmm0, xmmword [rdx - 0x80]
movdqu xmm15, xmmword [rdx - 0x20]
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm9, xmmword [rdx - 0x70]
movdqu xmm4, xmmword [rdx - 0xf0]
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm1, xmmword [rdx - 0xb0]
shufpd xmm6, xmm3, 1
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm14, xmmword [rdx - 0x160]
shufpd xmm4, xmm2, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm13, xmmword [rdx - 0x130]
shufpd xmm3, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
movdqu xmm12, xmmword [rdx - 0x100]
shufpd xmm2, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm11, xmmword [rdx - 0xd0]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0xa8]
movzx edi, byte [rdx - 0x90]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movups xmmword [rcx - 0xa8], xmm3
movzx r14d, byte [rdx - 0x150]
movzx r13d, byte [rdx - 0x138]
mov byte [var_5h], al
movzx r12d, byte [rdx - 0x120]
movzx eax, byte [rdx - 0x30]
movups xmmword [rcx - 0x78], xmm2
movzx ebp, byte [rdx - 0x108]
movzx esi, byte [rdx - 0x180]
mov byte [var_6h], dil
movzx r9d, byte [rdx - 0x78]
movzx r8d, byte [rdx - 0x60]
mov byte [var_7h], al
movzx r11d, byte [rdx - 0xd8]
movzx edi, byte [rdx - 0x48]
movups xmmword [rcx - 0x90], xmm10
movzx r10d, byte [rdx - 0xc0]
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x60], xmm9
movups xmmword [rcx - 0x48], xmm1
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], sil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [var_5h]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x98], bl
movzx ebx, byte [var_6h]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x80], bl
movzx ebx, byte [var_7h]
mov byte [rcx - 0x68], r9b
mov byte [rcx - 0x50], r8b
mov byte [rcx - 0x38], dil
mov byte [rcx - 0x20], bl
mov byte [rcx - 8], al
cmp rcx, qword [var_10h]
jne 0x801fe50
mov rax, qword [var_20h]
mov rcx, qword [var_18h]
mov r13, qword [var_28h]
mov r10, qword [var_30h]
and rax, 0xfffffffffffffff0
mov r14, qword [var_38h]
mov r15, qword [var_40h]
sub rcx, rax
lea rax, [rax + rax*2]
shl rax, 3
lea rdx, [r13 + rax]
add rax, r10
movdqu xmm6, xmmword [rdx]
movzx esi, byte [rdx + 0x10]
movups xmmword [rax], xmm6
mov byte [rax + 0x10], sil
cmp rcx, 1
je 0x80202d0
movdqu xmm7, xmmword [rdx + 0x18]
movzx esi, byte [rdx + 0x28]
movups xmmword [rax + 0x18], xmm7
mov byte [rax + 0x28], sil
cmp rcx, 2
je 0x80202d0
movdqu xmm7, xmmword [rdx + 0x30]
movzx esi, byte [rdx + 0x40]
movups xmmword [rax + 0x30], xmm7
mov byte [rax + 0x40], sil
cmp rcx, 3
je 0x80202d0
movdqu xmm5, xmmword [rdx + 0x48]
movzx esi, byte [rdx + 0x58]
movups xmmword [rax + 0x48], xmm5
mov byte [rax + 0x58], sil
cmp rcx, 4
je 0x80202d0
movdqu xmm7, xmmword [rdx + 0x60]
movzx esi, byte [rdx + 0x70]
movups xmmword [rax + 0x60], xmm7
mov byte [rax + 0x70], sil
cmp rcx, 5
je 0x80202d0
movdqu xmm7, xmmword [rdx + 0x78]
movzx esi, byte [rdx + 0x88]
movups xmmword [rax + 0x78], xmm7
mov byte [rax + 0x88], sil
cmp rcx, 6
je 0x80202d0
movdqu xmm5, xmmword [rdx + 0x90]
movzx esi, byte [rdx + 0xa0]
movups xmmword [rax + 0x90], xmm5
mov byte [rax + 0xa0], sil
cmp rcx, 7
je 0x80202d0
movdqu xmm5, xmmword [rdx + 0xa8]
movzx esi, byte [rdx + 0xb8]
movups xmmword [rax + 0xa8], xmm5
mov byte [rax + 0xb8], sil
cmp rcx, 8
je 0x80202d0
movdqu xmm6, xmmword [rdx + 0xc0]
movzx esi, byte [rdx + 0xd0]
movups xmmword [rax + 0xc0], xmm6
mov byte [rax + 0xd0], sil
cmp rcx, 9
je 0x80202d0
movdqu xmm6, xmmword [rdx + 0xd8]
movzx esi, byte [rdx + 0xe8]
movups xmmword [rax + 0xd8], xmm6
mov byte [rax + 0xe8], sil
cmp rcx, 0xa
je 0x80202d0
movdqu xmm7, xmmword [rdx + 0xf0]
movzx esi, byte [rdx + 0x100]
movups xmmword [rax + 0xf0], xmm7
mov byte [rax + 0x100], sil
cmp rcx, 0xb
je 0x80202d0
movdqu xmm6, xmmword [rdx + 0x108]
movzx esi, byte [rdx + 0x118]
movups xmmword [rax + 0x108], xmm6
mov byte [rax + 0x118], sil
cmp rcx, 0xc
je 0x80202d0
movdqu xmm7, xmmword [rdx + 0x120]
movzx esi, byte [rdx + 0x130]
movups xmmword [rax + 0x120], xmm7
mov byte [rax + 0x130], sil
cmp rcx, 0xd
je 0x80202d0
movdqu xmm6, xmmword [rdx + 0x138]
movzx esi, byte [rdx + 0x148]
movups xmmword [rax + 0x138], xmm6
mov byte [rax + 0x148], sil
cmp rcx, 0xe
je 0x80202d0
movdqu xmm7, xmmword [rdx + 0x150]
movzx esi, byte [rdx + 0x160]
movups xmmword [rax + 0x150], xmm7
mov byte [rax + 0x160], sil
cmp rcx, 0xf
je 0x80202d0
movdqu xmm5, xmmword [rdx + 0x168]
movzx edx, byte [rdx + 0x178]
mov byte [rax + 0x178], dl
movups xmmword [rax + 0x168], xmm5
mov rax, qword [var_8h]
mov qword [r14 + 8], rax
mov rax, qword [r15 + 0x38]
mov rbx, qword [r15 + 0x40]
mov rbp, qword [r14 + 0x40]
mov qword [r14 + 0x38], rax
cmp rbx, rbp
je 0x8020330
test rbx, rbx
je 0x8020305
cmp qword [0x080202fb], 0
jne 0x8020a5e
add dword [rbx + 8], 1
test rbp, rbp
je 0x802032c
mov r12, qword [0x08020311]
test r12, r12
jne 0x8020a4f
mov eax, dword [arg_8h]
lea edx, [rax - 1]
mov dword [arg_8h], edx
cmp eax, 1
je 0x802099a
mov qword [r14 + 0x40], rbx
mov eax, dword [r15 + 0x48]
mov dword [r14 + 0x48], eax
movzx eax, byte [r15 + 0x4c]
mov byte [r14 + 0x4c], al
test al, al
jne 0x801fd1b
movdqu xmm6, xmmword [r15 + 0x18]
movups xmmword [r14 + 0x18], xmm6
mov rax, qword [r15 + 0x28]
mov qword [r14 + 0x28], rax
movzx eax, byte [r15 + 0x30]
mov byte [r14 + 0x30], al
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
lea rdi, [r14 + 0x20]
mov r9, rcx
mov rbp, qword [rdi]
jmp 0x801fc74
nop word [rax + rax]
cmp r11, r10
jg 0x801fd45
cmp r13, r12
jl 0x801fd45
cmp byte [rax + 0x10], 0
jne 0x801fd1b
cmp byte [rdx + 0x10], 0
jne 0x801fd45
jmp 0x801fd1b
nop dword [rax + rax]
lea r8, [r13 + rcx]
test rcx, rcx
jle 0x8020933
movabs rax, 0xaaaaaaaaaaaaaaab
mov rdx, rcx
sar rdx, 3
imul rdx, rax
mov rax, r10
mov qword [var_18h], rdx
mov rbx, rdx
mov rsi, rdx
lea rdx, [r13 + 0x18]
sub rax, rdx
add rax, 8
cmp rax, 0x160
mov rax, r10
seta dil
sub rax, r13
sub rax, 0x18
cmp rax, 0x150
seta al
test dil, al
je 0x8020944
cmp rcx, 0x180
jle 0x8020944
lea rax, [rbx - 1]
mov qword [var_28h], r13
mov rcx, r10
lea rdx, [r13 + 0x10]
mov qword [var_20h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_30h], r12
shl rax, 7
mov qword [var_38h], r8
add rax, r10
mov qword [var_40h], r9
mov qword [var_10h], rax
mov qword [var_48h], r10
mov qword [var_50h], r14
mov qword [var_58h], r15
nop word cs:[rax + rax]
movdqu xmm5, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm3, xmmword [rdx - 0x140]
movdqu xmm4, xmmword [rdx - 0x110]
shufpd xmm7, xmm5, 1
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm5, xmmword [rdx - 0x120]
movdqu xmm2, xmmword [rdx - 0xe0]
movdqu xmm1, xmmword [rdx - 0xb0]
shufpd xmm6, xmm3, 1
shufpd xmm5, xmm4, 1
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm4, xmmword [rdx - 0xf0]
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm15, xmmword [rdx - 0x20]
shufpd xmm4, xmm2, 1
shufpd xmm3, xmm1, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm1, xmmword [rdx - 0x80]
movdqu xmm14, xmmword [rdx - 0x160]
movdqu xmm9, xmmword [rdx - 0x70]
shufpd xmm2, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
movdqu xmm13, xmmword [rdx - 0x130]
movdqu xmm12, xmmword [rdx - 0x100]
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm11, xmmword [rdx - 0xd0]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0x78]
movzx esi, byte [rdx - 0x48]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movups xmmword [rcx - 0xa8], xmm3
movzx r14d, byte [rdx - 0x150]
movzx r13d, byte [rdx - 0x138]
mov byte [var_5h], al
movzx r12d, byte [rdx - 0x120]
movzx eax, byte [rdx - 0x60]
movups xmmword [rcx - 0x78], xmm2
movzx ebp, byte [rdx - 0x108]
movzx edi, byte [rdx - 0x180]
mov byte [var_7h], sil
movzx r11d, byte [rdx - 0xd8]
movzx esi, byte [rdx - 0x30]
mov byte [var_6h], al
movzx r10d, byte [rdx - 0xc0]
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x90], xmm10
movzx r9d, byte [rdx - 0xa8]
movzx r8d, byte [rdx - 0x90]
movups xmmword [rcx - 0x60], xmm9
movups xmmword [rcx - 0x48], xmm1
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], dil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [var_5h]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x68], bl
movzx ebx, byte [var_6h]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x50], bl
movzx ebx, byte [var_7h]
mov byte [rcx - 0x98], r9b
mov byte [rcx - 0x80], r8b
mov byte [rcx - 0x38], bl
mov byte [rcx - 0x20], sil
mov byte [rcx - 8], al
cmp rcx, qword [var_10h]
jne 0x8020480
mov rax, qword [var_20h]
mov rcx, qword [var_18h]
mov r13, qword [var_28h]
mov r10, qword [var_48h]
and rax, 0xfffffffffffffff0
mov r12, qword [var_30h]
mov r8, qword [var_38h]
sub rcx, rax
lea rax, [rax + rax*2]
mov r9, qword [var_40h]
mov r14, qword [var_50h]
shl rax, 3
mov r15, qword [var_58h]
lea rdx, [r13 + rax]
add rax, r10
movdqu xmm6, xmmword [rdx]
movzx esi, byte [rdx + 0x10]
movups xmmword [rax], xmm6
mov byte [rax + 0x10], sil
cmp rcx, 1
je 0x8020933
movdqu xmm6, xmmword [rdx + 0x18]
movzx esi, byte [rdx + 0x28]
movups xmmword [rax + 0x18], xmm6
mov byte [rax + 0x28], sil
cmp rcx, 2
je 0x8020933
movdqu xmm6, xmmword [rdx + 0x30]
movzx esi, byte [rdx + 0x40]
movups xmmword [rax + 0x30], xmm6
mov byte [rax + 0x40], sil
cmp rcx, 3
je 0x8020933
movdqu xmm5, xmmword [rdx + 0x48]
movzx esi, byte [rdx + 0x58]
movups xmmword [rax + 0x48], xmm5
mov byte [rax + 0x58], sil
cmp rcx, 4
je 0x8020933
movdqu xmm6, xmmword [rdx + 0x60]
movzx esi, byte [rdx + 0x70]
movups xmmword [rax + 0x60], xmm6
mov byte [rax + 0x70], sil
cmp rcx, 5
je 0x8020933
movdqu xmm6, xmmword [rdx + 0x78]
movzx esi, byte [rdx + 0x88]
movups xmmword [rax + 0x78], xmm6
mov byte [rax + 0x88], sil
cmp rcx, 6
je 0x8020933
movdqu xmm7, xmmword [rdx + 0x90]
movzx esi, byte [rdx + 0xa0]
movups xmmword [rax + 0x90], xmm7
mov byte [rax + 0xa0], sil
cmp rcx, 7
je 0x8020933
movdqu xmm7, xmmword [rdx + 0xa8]
movzx esi, byte [rdx + 0xb8]
movups xmmword [rax + 0xa8], xmm7
mov byte [rax + 0xb8], sil
cmp rcx, 8
je 0x8020933
movdqu xmm5, xmmword [rdx + 0xc0]
movzx esi, byte [rdx + 0xd0]
movups xmmword [rax + 0xc0], xmm5
mov byte [rax + 0xd0], sil
cmp rcx, 9
je 0x8020933
movdqu xmm5, xmmword [rdx + 0xd8]
movzx esi, byte [rdx + 0xe8]
movups xmmword [rax + 0xd8], xmm5
mov byte [rax + 0xe8], sil
cmp rcx, 0xa
je 0x8020933
movdqu xmm6, xmmword [rdx + 0xf0]
movzx esi, byte [rdx + 0x100]
movups xmmword [rax + 0xf0], xmm6
mov byte [rax + 0x100], sil
cmp rcx, 0xb
je 0x8020933
movdqu xmm7, xmmword [rdx + 0x108]
movzx esi, byte [rdx + 0x118]
movups xmmword [rax + 0x108], xmm7
mov byte [rax + 0x118], sil
cmp rcx, 0xc
je 0x8020933
movdqu xmm5, xmmword [rdx + 0x120]
movzx esi, byte [rdx + 0x130]
movups xmmword [rax + 0x120], xmm5
mov byte [rax + 0x130], sil
cmp rcx, 0xd
je 0x8020933
movdqu xmm6, xmmword [rdx + 0x138]
movzx esi, byte [rdx + 0x148]
movups xmmword [rax + 0x138], xmm6
mov byte [rax + 0x148], sil
cmp rcx, 0xe
je 0x8020933
movdqu xmm7, xmmword [rdx + 0x150]
movzx esi, byte [rdx + 0x160]
movups xmmword [rax + 0x150], xmm7
mov byte [rax + 0x160], sil
cmp rcx, 0xf
je 0x8020933
movdqu xmm5, xmmword [rdx + 0x168]
movzx edx, byte [rdx + 0x178]
movups xmmword [rax + 0x168], xmm5
mov byte [rax + 0x178], dl
jmp 0x8020933
nop dword [rax]
movdqu xmm0, xmmword [r8]
movzx eax, byte [r8 + 0x10]
add r9, 0x18
add r8, 0x18
mov byte [r9 - 8], al
movups xmmword [r9 - 0x18], xmm0
cmp r12, r8
jne 0x8020918
jmp 0x80202d0
nop dword [rax]
add rdx, 0x18
movdqu xmm7, xmmword [r13]
movzx eax, byte [r13 + 0x10]
add r10, 0x18
mov r13, rdx
movups xmmword [r10 - 0x18], xmm7
mov byte [r10 - 8], al
sub rsi, 1
jne 0x8020940
jmp 0x8020933
nop word [rax + rax]
add rdx, 0x18
movdqu xmm7, xmmword [r13]
movzx ecx, byte [r13 + 0x10]
add r10, 0x18
mov r13, rdx
movups xmmword [r10 - 0x18], xmm7
mov byte [r10 - 8], cl
sub rax, 1
jne 0x8020970
jmp 0x80202d0
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
test r12, r12
jne 0x8020a70
mov eax, dword [arg_ch]
lea edx, [rax - 1]
mov dword [arg_ch], edx
cmp eax, 1
jne 0x802032c
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
jmp 0x802032c
nop
test rbx, rbx
je 0x8020a6c
movabs rax, 0x7ffffffffffffff8
cmp rbx, rax
ja _ZSt17__throw_bad_allocv
mov rdi, rbx
call _Znwm
mov r10, qword [r14]
mov rsi, qword [r14 + 0x10]
mov rbp, rax
sub rsi, r10
mov rax, r13
mov rdx, rbp
cmp r12, r13
je 0x8020a2c
nop dword [rax]
movdqu xmm1, xmmword [rax]
movzx ecx, byte [rax + 0x10]
add rax, 0x18
add rdx, 0x18
movups xmmword [rdx - 0x18], xmm1
mov byte [rdx - 8], cl
cmp r12, rax
jne 0x8020a10
test r10, r10
je 0x8020a39
mov rdi, r10
call _ZdlPvm
lea rax, [rbp + rbx]
mov qword [r14], rbp
mov qword [var_8h], rax
mov qword [r14 + 0x10], rax
jmp 0x80202d0
mov eax, 0xffffffff
lock xadd dword [arg_8h], eax
jmp 0x8020323
lock add dword [rbx + 8], 1
mov rbp, qword [r14 + 0x40]
jmp 0x8020305
xor ebp, ebp
jmp 0x8020a01
mov eax, 0xffffffff
lock xadd dword [arg_ch], eax
jmp 0x80209b6
call _ZSt17__throw_bad_allocv
