push r14
push r13
push r12
push rbp
push rbx
mov rbx, qword [rdi + 0x58]
test rbx, rbx
je 0x8017491
mov rbp, rdi
mov r12d, esi
lea r14, [0x0801746e]
mov r13d, edx
mov eax, dword [rbx]
cmp eax, 1
je 0x80174a0
cmp eax, 6
je 0x8017491
mov rdx, qword [rbx + 8]
test eax, eax
je 0x80174e0
mov qword [arg_58h], rdx
mov rbx, rdx
test rbx, rbx
jne 0x8017471
pop rbx
mov eax, 1
pop rbp
pop r12
pop r13
pop r14
ret
nop
cmp dword [rbx + 0x10], r12d
jne 0x8017500
test r13b, r13b
jne 0x80174c8
mov rax, qword [rbx + 8]
mov qword [arg_58h], rax
mov eax, 1
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
pop rbx
mov rdi, rbp
pop rbp
pop r12
pop r13
pop r14
jmp _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE13match_endmarkEv
nop dword [rax + rax]
mov esi, dword [rbx + 0x10]
mov qword [arg_58h], rdx
mov rdi, rbp
xor edx, edx
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE16skip_until_parenEib
mov rbx, qword [arg_58h]
jmp 0x801748c
nop word [rax + rax]
mov rdi, rbp
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE13match_endmarkEv
mov rax, qword [arg_58h]
test rax, rax
je 0x8017520
mov rbx, rax
jmp 0x8017471
nop dword [rax]
mov eax, 1
mov byte [arg_e6h], 0
mov esi, 1
mov word [arg_e4h], ax
jmp 0x8017552
nop word [rax + rax]
mov rax, qword [rdi]
call qword [rdx + rax - 1]
test al, al
je 0x8017577
movzx esi, byte [arg_e4h]
mov rax, qword [arg_d8h]
mov eax, dword [rax]
shl rax, 4
add rax, r14
mov rdi, qword [rax + 8]
mov rdx, qword [rax]
add rdi, rbp
test dl, 1
jne 0x8017540
call rdx
test al, al
jne 0x801754b
mov rax, qword [arg_58h]
test rax, rax
jne 0x8017511
mov rbx, qword [rbx + 8]
mov qword [arg_58h], rbx
jmp 0x801748c
invalid
invalid
inc dword [rcx + 0x54]
push r12
push rbp
mov rbp, rdi
push rbx
mov rax, qword [rdi + 0xc0]
cmp qword [rdi + 0xb8], rax
je 0x8017610
mov rbx, qword [rdi + 0x58]
mov r12d, dword [rax - 0x70]
test rbx, rbx
je 0x80175d4
mov eax, dword [rbx]
cmp eax, 1
je 0x80175e0
cmp eax, 6
je 0x80175d4
mov rdx, qword [rbx + 8]
test eax, eax
je 0x8017628
mov qword [arg_58h], rdx
mov rbx, rdx
test rbx, rbx
jne 0x80175b4
pop rbx
mov eax, 1
pop rbp
pop r12
ret
nop
mov rdi, rbp
cmp r12d, dword [rbx + 0x10]
jne _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE13match_endmarkEv
pop rbx
pop rbp
pop r12
jmp _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE13match_endmarkEv
nop word [rax + rax]
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE13match_endmarkEv
mov rax, qword [arg_58h]
test rax, rax
je 0x8017640
mov rbx, rax
jmp 0x80175b4
nop dword [rax + rax]
pop rbx
mov edx, 1
pop rbp
mov esi, 0x7fffffff
pop r12
jmp _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE16skip_until_parenEib
nop dword [rax + rax]
mov esi, dword [rbx + 0x10]
mov qword [arg_58h], rdx
mov rdi, rbp
xor edx, edx
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE16skip_until_parenEib
mov rbx, qword [arg_58h]
jmp 0x80175cf
nop
mov esi, 1
mov rdi, rbp
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE6unwindEb
mov rax, qword [arg_58h]
test rax, rax
jne 0x8017606
mov rbx, qword [rbx + 8]
mov qword [arg_58h], rbx
jmp 0x80175cf
invalid
invalid
invalid
invalid
invalid
invalid
invalid
invalid
invalid
invalid
invalid
invalid
dec dword [rax - 0x47]
movabs rcx, 0x124924924924924
push r15
push r14
push r13
push r12
push rbp
mov rbp, rdx
movabs rdx, 0x6db6db6db6db6db7
push rbx
sub rsp, 0x28
mov r13, qword [rdi + 8]
mov r15, qword [rdi]
mov qword [var_10h], rdi
mov rax, r13
sub rax, r15
sar rax, 4
imul rax, rdx
cmp rax, rcx
je .LC66
test rax, rax
mov edx, 1
mov r12, rsi
mov r14, rsi
cmovne rdx, rax
mov rbx, rsi
add rax, rdx
setb dl
mov qword [var_8h], rax
sub r12, r15
movzx edx, dl
test rdx, rdx
jne 0x8017960
test rax, rax
jne 0x80178b0
mov qword [rsp], 0
mov eax, dword [rbp]
add r12, qword [rsp]
lea rsi, [arg_10h]
mov dword [r12], eax
mov rax, qword [arg_8h]
mov qword [r12 + 8], rax
lea rax, [r12 + 0x10]
mov rdi, rax
mov qword [var_18h], rax
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEEC1ERKS6_
movdqu xmm3, xmmword [arg_60h]
movups xmmword [r12 + 0x60], xmm3
mov r12, qword [rsp]
cmp r14, r15
je 0x8017776
mov rbp, r15
nop dword [rax]
mov eax, dword [rbp]
lea rsi, [arg_10h]
lea rdi, [r12 + 0x10]
mov dword [r12], eax
mov rax, qword [arg_8h]
mov qword [r12 + 8], rax
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEEC1ERKS6_
movdqu xmm1, xmmword [arg_60h]
add rbp, 0x70
add r12, 0x70
movups xmmword [r12 - 0x10], xmm1
cmp r14, rbp
jne 0x8017740
add r12, 0x70
mov rbp, r12
cmp r14, r13
je 0x80177b8
nop word [rax + rax]
mov eax, dword [rbx]
lea rsi, [rbx + 0x10]
lea rdi, [arg_10h]
mov dword [rbp], eax
mov rax, qword [rbx + 8]
mov qword [arg_8h], rax
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEEC1ERKS6_
movdqu xmm2, xmmword [rbx + 0x60]
add rbx, 0x70
add rbp, 0x70
movups xmmword [var_bp_10h], xmm2
cmp r13, rbx
jne 0x8017788
cmp r15, r13
je 0x8017811
cmp qword [0x080177c5], 0
mov rbx, r15
jne 0x8017871
nop
mov r12, qword [rbx + 0x50]
test r12, r12
je 0x80177ef
mov eax, dword [r12 + 8]
lea edx, [rax - 1]
mov dword [r12 + 8], edx
cmp eax, 1
je 0x80178f8
mov rdi, qword [rbx + 0x10]
test rdi, rdi
je 0x80178e0
mov rsi, qword [rbx + 0x20]
add rbx, 0x70
sub rsi, rdi
call _ZdlPvm
cmp r13, rbx
jne 0x80177d0
test r15, r15
je 0x8017832
mov rax, qword [var_10h]
mov rdi, r15
mov rax, qword [rax + 0x10]
mov rsi, rax
mov qword [var_18h], rax
sub rsi, r15
call _ZdlPvm
mov rax, qword [rsp]
mov rcx, qword [var_10h]
movq xmm4, rbp
movq xmm0, rax
add rax, qword [var_8h]
punpcklqdq xmm0, xmm4
mov qword [rcx + 0x10], rax
movups xmmword [rcx], xmm0
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
add rbx, 0x70
cmp rbx, r13
je 0x8017811
mov r12, qword [rbx + 0x50]
test r12, r12
je 0x8017887
lock sub dword [r12 + 8], 1
je 0x8017930
mov rdi, qword [rbx + 0x10]
test rdi, rdi
je 0x8017868
mov rsi, qword [rbx + 0x20]
add rbx, 0x70
sub rsi, rdi
call _ZdlPvm
cmp r13, rbx
jne 0x8017871
jmp 0x8017811
nop word [rax + rax]
cmp rax, rcx
cmovbe rcx, rax
lea rax, [rcx*8]
sub rax, rcx
shl rax, 4
mov qword [var_8h], rax
mov rdi, rax
call _Znwm
mov qword [rsp], rax
jmp 0x80176f8
nop dword [rax]
add rbx, 0x70
cmp rbx, r13
jne 0x80177d0
jmp 0x8017811
nop word [rax + rax]
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
mov eax, dword [r12 + 0xc]
lea edx, [rax - 1]
mov dword [r12 + 0xc], edx
cmp eax, 1
jne 0x80177ef
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x18]
jmp 0x80177ef
nop word [rax + rax]
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
lock sub dword [r12 + 0xc], 1
jne 0x8017887
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x18]
jmp 0x8017887
nop word cs:[rax + rax]
movabs rax, 0x7fffffffffffffc0
mov qword [var_8h], rax
mov rdi, rax
jmp _Znwm
lea rdi, [0x0801797e]
call _ZSt20__throw_length_errorPKc
mov rdi, rax
jmp __cxa_begin_catch
mov rdi, rax
jmp __cxa_begin_catch
mov rdi, rax
jmp __cxa_begin_catch
call __cxa_begin_catch
mov rbx, qword [rsp]
cmp rbx, r12
jne 0x80179e7
call __cxa_rethrow
call __cxa_begin_catch
mov rbx, r12
cmp rbx, rbp
jne 0x80179f6
call __cxa_rethrow
call __cxa_begin_catch
cmp qword [rsp], 0
jne 0x80179d4
mov rdi, qword [var_18h]
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEED1Ev
cmp qword [rsp], 0
je __cxa_rethrow
mov rsi, qword [var_8h]
mov rdi, qword [rsp]
call _ZdlPvm
call __cxa_rethrow
lea rdi, [rbx + 0x10]
add rbx, 0x70
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEED1Ev
jmp 0x801799b
lea rdi, [rbx + 0x10]
add rbx, 0x70
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEED1Ev
jmp 0x80179ad
mov rbp, rax
jmp __cxa_end_catch
mov rbp, rax
jmp __cxa_end_catch
call __cxa_end_catch
mov rdi, rbp
call __cxa_begin_catch
jmp 0x80179c3
mov rbp, rax
jmp __cxa_end_catch
call __cxa_end_catch
mov rdi, rbp
call _Unwind_Resume
call __cxa_end_catch
mov rdi, rbp
call __cxa_begin_catch
mov rbx, qword [rsp]
cmp r12, rbx
je 0x80179cd
lea rdi, [rbx + 0x10]
add rbx, 0x70
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEED1Ev
jmp 0x8017a41
invalid
invalid
invalid
invalid
invalid
invalid
invalid
invalid
invalid
invalid
inc dword [rcx + 0x57]
push r15
mov r15, rdi
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0xe8
mov rbx, qword [rdi + 0xc0]
mov rdx, qword [rdi + 0xb8]
cmp rbx, rdx
je 0x8017abc
mov rax, qword [rdi + 0x58]
mov rax, qword [rax + 0x10]
mov ecx, dword [rax + 0x10]
mov rax, rbx
jmp 0x8017aa9
nop word [rax + rax]
sub rax, 0x70
cmp rdx, rax
je 0x8017abc
cmp dword [rax - 0x70], ecx
jne 0x8017aa0
mov rdi, qword [r15 + 0x28]
cmp qword [rax - 8], rdi
je 0x8018a1c
mov rax, qword [r15 + 0xd8]
sub rax, 8
cmp rax, qword [r15 + 0xd0]
jb _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rbp, qword [r15 + 0xc8]
mov dword [rax], 0xf
mov qword [r15 + 0xd8], rax
cmp rdx, rbp
je 0x8018a6c
lea rdx, [var_70h]
mov ecx, 0xe
xor eax, eax
mov rdi, rdx
rep stosq qword [rdi], rax
mov byte [var_cch], 1
cmp rbp, rbx
je 0x80183c0
mov eax, dword [var_70h]
lea r12, [var_80h]
lea rdi, [rbx + 0x10]
mov rsi, r12
mov dword [rbx], eax
mov rax, qword [var_78h]
mov qword [rbx + 8], rax
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEEC1ERKS6_
movdqa xmm6, xmmword [var_d0h]
movups xmmword [rbx + 0x60], xmm6
add qword [r15 + 0xc0], 0x70
mov rbp, qword [var_c0h]
test rbp, rbp
je 0x8017b7b
mov r12, qword [0x08017b60]
test r12, r12
jne 0x8018a30
mov eax, dword [var_8h]
lea edx, [rax - 1]
mov dword [var_8h], edx
cmp eax, 1
je 0x80189b0
mov rdi, qword [var_80h]
test rdi, rdi
je 0x8017b98
mov rsi, qword [var_90h]
sub rsi, rdi
call _ZdlPvm
mov rax, qword [r15 + 0x58]
mov r13, qword [r15 + 0xc0]
mov r14, qword [r15 + 0x10]
mov rax, qword [rax + 8]
mov qword [r13 - 0x68], rax
lea rax, [r13 - 0x60]
cmp r14, rax
je 0x8018121
mov r12, qword [r14 + 8]
mov r10, qword [r14]
mov r9, qword [r13 - 0x60]
mov rsi, qword [r13 - 0x50]
mov rbx, r12
sub rbx, r10
sub rsi, r9
cmp rbx, rsi
ja 0x80182d8
mov r8, qword [r13 - 0x58]
lea rdi, [r9 + rbx]
mov qword [var_10h], rdi
mov rax, r8
sub rax, r9
cmp rbx, rax
ja 0x80183e0
test rbx, rbx
jle 0x8018118
movabs rax, 0xaaaaaaaaaaaaaaab
mov rdx, rbx
sar rdx, 3
imul rdx, rax
mov rax, r9
sub rax, r10
sub rax, 0x18
cmp rax, 0x150
mov qword [var_20h], rdx
seta cl
cmp rbx, 0x180
setg al
test cl, al
lea rax, [r10 + 0x18]
je 0x8018984
mov rcx, r9
sub rcx, rax
add rcx, 8
cmp rcx, 0x160
jbe 0x8018984
mov rax, rdx
mov qword [var_30h], r14
mov rcx, r9
lea rdx, [r10 + 0x10]
sub rax, 1
mov qword [var_38h], r13
mov qword [var_28h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_40h], r10
shl rax, 7
mov qword [var_48h], r9
add rax, r9
mov qword [var_50h], r15
mov qword [var_18h], rax
nop dword [rax]
movdqu xmm2, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm4, xmmword [rdx - 0x110]
movdqu xmm5, xmmword [rdx - 0x120]
shufpd xmm7, xmm2, 1
movdqu xmm3, xmmword [rdx - 0x140]
movdqu xmm2, xmmword [rdx - 0xe0]
shufpd xmm5, xmm4, 1
movdqu xmm0, xmmword [rdx - 0x80]
movdqu xmm15, xmmword [rdx - 0x20]
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm9, xmmword [rdx - 0x70]
movdqu xmm4, xmmword [rdx - 0xf0]
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm1, xmmword [rdx - 0xb0]
shufpd xmm6, xmm3, 1
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm14, xmmword [rdx - 0x160]
shufpd xmm4, xmm2, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm13, xmmword [rdx - 0x130]
shufpd xmm3, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
movdqu xmm12, xmmword [rdx - 0x100]
shufpd xmm2, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm11, xmmword [rdx - 0xd0]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0x90]
movzx esi, byte [rdx - 0x78]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movups xmmword [rcx - 0xa8], xmm3
movzx r14d, byte [rdx - 0x150]
movzx r13d, byte [rdx - 0x138]
mov byte [rsp], al
movzx r12d, byte [rdx - 0x120]
movzx eax, byte [rdx - 0x48]
movups xmmword [rcx - 0x78], xmm2
movzx ebp, byte [rdx - 0x108]
movzx edi, byte [rdx - 0x180]
mov byte [var_eh], sil
movzx r11d, byte [rdx - 0xd8]
movzx r8d, byte [rdx - 0x60]
mov byte [var_fh], al
movzx r10d, byte [rdx - 0xc0]
movzx esi, byte [rdx - 0x30]
movups xmmword [rcx - 0x90], xmm10
movzx r9d, byte [rdx - 0xa8]
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x60], xmm9
movups xmmword [rcx - 0x48], xmm1
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], dil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [rsp]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x80], bl
movzx ebx, byte [var_eh]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x68], bl
movzx ebx, byte [var_fh]
mov byte [rcx - 0x98], r9b
mov byte [rcx - 0x50], r8b
mov byte [rcx - 0x38], bl
mov byte [rcx - 0x20], sil
mov byte [rcx - 8], al
cmp qword [var_18h], rcx
jne 0x8017ca0
mov rax, qword [var_28h]
mov r10, qword [var_40h]
mov rdx, qword [var_20h]
mov r9, qword [var_48h]
and rax, 0xfffffffffffffff0
mov r14, qword [var_30h]
mov r13, qword [var_38h]
lea rdi, [rax + rax*2]
sub rdx, rax
mov r15, qword [var_50h]
shl rdi, 3
lea rax, [r10 + rdi]
add rdi, r9
movdqu xmm5, xmmword [rax]
movzx ecx, byte [rax + 0x10]
movups xmmword [rdi], xmm5
mov byte [rdi + 0x10], cl
cmp rdx, 1
je 0x8018118
movdqu xmm5, xmmword [rax + 0x18]
movzx ecx, byte [rax + 0x28]
movups xmmword [rdi + 0x18], xmm5
mov byte [rdi + 0x28], cl
cmp rdx, 2
je 0x8018118
movdqu xmm5, xmmword [rax + 0x30]
movzx ecx, byte [rax + 0x40]
movups xmmword [rdi + 0x30], xmm5
mov byte [rdi + 0x40], cl
cmp rdx, 3
je 0x8018118
movdqu xmm6, xmmword [rax + 0x48]
movzx ecx, byte [rax + 0x58]
movups xmmword [rdi + 0x48], xmm6
mov byte [rdi + 0x58], cl
cmp rdx, 4
je 0x8018118
movdqu xmm7, xmmword [rax + 0x60]
movzx ecx, byte [rax + 0x70]
movups xmmword [rdi + 0x60], xmm7
mov byte [rdi + 0x70], cl
cmp rdx, 5
je 0x8018118
movdqu xmm5, xmmword [rax + 0x78]
movzx ecx, byte [rax + 0x88]
movups xmmword [rdi + 0x78], xmm5
mov byte [rdi + 0x88], cl
cmp rdx, 6
je 0x8018118
movdqu xmm6, xmmword [rax + 0x90]
movzx ecx, byte [rax + 0xa0]
movups xmmword [rdi + 0x90], xmm6
mov byte [rdi + 0xa0], cl
cmp rdx, 7
je 0x8018118
movdqu xmm7, xmmword [rax + 0xa8]
movzx ecx, byte [rax + 0xb8]
movups xmmword [rdi + 0xa8], xmm7
mov byte [rdi + 0xb8], cl
cmp rdx, 8
je 0x8018118
movdqu xmm5, xmmword [rax + 0xc0]
movzx ecx, byte [rax + 0xd0]
movups xmmword [rdi + 0xc0], xmm5
mov byte [rdi + 0xd0], cl
cmp rdx, 9
je 0x8018118
movdqu xmm6, xmmword [rax + 0xd8]
movzx ecx, byte [rax + 0xe8]
movups xmmword [rdi + 0xd8], xmm6
mov byte [rdi + 0xe8], cl
cmp rdx, 0xa
je 0x8018118
movdqu xmm5, xmmword [rax + 0xf0]
movzx ecx, byte [rax + 0x100]
movups xmmword [rdi + 0xf0], xmm5
mov byte [rdi + 0x100], cl
cmp rdx, 0xb
je 0x8018118
movdqu xmm5, xmmword [rax + 0x108]
movzx ecx, byte [rax + 0x118]
movups xmmword [rdi + 0x108], xmm5
mov byte [rdi + 0x118], cl
cmp rdx, 0xc
je 0x8018118
movdqu xmm7, xmmword [rax + 0x120]
movzx ecx, byte [rax + 0x130]
movups xmmword [rdi + 0x120], xmm7
mov byte [rdi + 0x130], cl
cmp rdx, 0xd
je 0x8018118
movdqu xmm7, xmmword [rax + 0x138]
movzx ecx, byte [rax + 0x148]
movups xmmword [rdi + 0x138], xmm7
mov byte [rdi + 0x148], cl
cmp rdx, 0xe
je 0x8018118
movdqu xmm6, xmmword [rax + 0x150]
movzx ecx, byte [rax + 0x160]
movups xmmword [rdi + 0x150], xmm6
mov byte [rdi + 0x160], cl
cmp rdx, 0xf
je 0x8018118
movdqu xmm6, xmmword [rax + 0x168]
movzx eax, byte [rax + 0x178]
mov byte [rdi + 0x178], al
movups xmmword [rdi + 0x168], xmm6
nop dword [rax + rax]
mov rax, qword [var_10h]
mov qword [r13 - 0x58], rax
mov rax, qword [r14 + 0x38]
mov rbx, qword [r14 + 0x40]
mov rbp, qword [r13 - 0x20]
mov qword [r13 - 0x28], rax
cmp rbx, rbp
je 0x8018178
test rbx, rbx
je 0x801814d
cmp qword [0x08018143], 0
jne 0x8018a4f
add dword [rbx + 8], 1
test rbp, rbp
je 0x8018174
mov r12, qword [0x08018159]
test r12, r12
jne 0x8018a40
mov eax, dword [var_8h]
lea edx, [rax - 1]
mov dword [var_8h], edx
cmp eax, 1
je 0x80189e8
mov qword [r13 - 0x20], rbx
mov eax, dword [r14 + 0x48]
mov dword [r13 - 0x18], eax
movzx eax, byte [r14 + 0x4c]
mov byte [r13 - 0x14], al
test al, al
je 0x80182b0
mov rax, qword [r15 + 0x58]
mov rsi, qword [r15 + 0xd8]
mov ebx, 0xfffffffe
lea rbp, [r15 + 0x80]
mov rdx, qword [rax + 0x10]
mov rax, qword [r15 + 0xc0]
lea r8, [rsi - 0x30]
mov ecx, dword [rdx + 0x10]
mov qword [r15 + 0x58], rdx
mov rdx, qword [r15 + 0x28]
mov dword [rax - 0x70], ecx
sub ebx, ecx
mov qword [rax - 8], rdx
cmp r8, qword [r15 + 0xd0]
jb _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov r9d, 0x80000003
cmp qword [r15 + 0xb8], rax
je 0x80181eb
mov r9d, dword [rax - 0x70]
mov dword [r8], 5
mov rax, qword [r15 + 0x80]
mov dword [r8 + 0x18], ebx
mov qword [r8 + 0x10], rax
lea rax, [r8 + 8]
mov qword [r8 + 0x28], rdx
mov qword [r8 + 8], rbp
mov qword [r15 + 0x80], rax
mov rsi, qword [r8 + 0x10]
mov edi, dword [rsi + 0x10]
test edi, edi
js 0x8018250
cmp ebx, edi
jle 0x8018250
mov qword [r8 + 0x20], 0
mov qword [r15 + 0xd8], r8
mov eax, 1
add rsp, 0xe8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov r10d, 0xfffffffe
cmp ebx, edi
je 0x8018298
mov eax, r10d
sub eax, r9d
cmp eax, edi
je 0x8018223
mov rsi, qword [rsi + 8]
test rsi, rsi
je 0x8018223
mov edi, dword [rsi + 0x10]
test edi, edi
jns 0x8018256
mov edx, r9d
call .text
test rax, rax
je 0x8018223
mov rsi, qword [rax + 8]
test rsi, rsi
je 0x8018223
mov edi, dword [rsi + 0x10]
cmp ebx, edi
jne 0x801825a
nop dword [rax]
mov rax, qword [rsi + 0x18]
mov qword [r8 + 0x20], rax
mov rax, qword [rsi + 0x20]
mov qword [r8 + 0x28], rax
jmp 0x801822b
nop word [rax + rax]
movdqu xmm7, xmmword [r14 + 0x18]
movups xmmword [r13 - 0x48], xmm7
mov rax, qword [r14 + 0x28]
mov qword [r13 - 0x38], rax
movzx eax, byte [r14 + 0x30]
mov byte [r13 - 0x30], al
jmp 0x8018191
nop dword [rax]
test rbx, rbx
je 0x8018a23
movabs rax, 0x7ffffffffffffff8
cmp rbx, rax
ja _ZSt17__throw_bad_allocv
mov rdi, rbx
mov qword [rsp], r10
call _Znwm
mov r9, qword [r13 - 0x60]
mov rsi, qword [r13 - 0x50]
mov r10, qword [rsp]
mov rbp, rax
sub rsi, r9
mov rax, r10
mov rdx, rbp
cmp r12, r10
je 0x801833c
nop dword [rax]
movdqu xmm1, xmmword [rax]
movzx ecx, byte [rax + 0x10]
add rax, 0x18
add rdx, 0x18
movups xmmword [rdx - 0x18], xmm1
mov byte [rdx - 8], cl
cmp r12, rax
jne 0x8018320
test r9, r9
je 0x8018349
mov rdi, r9
call _ZdlPvm
lea rax, [rbp + rbx]
mov qword [r13 - 0x60], rbp
mov qword [var_10h], rax
mov qword [r13 - 0x50], rax
mov rax, qword [var_10h]
mov qword [r13 - 0x58], rax
jmp 0x8018121
nop dword [rax]
mov rdi, r15
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [r15 + 0xd8]
mov rdx, qword [r15 + 0x28]
lea r8, [rax - 0x30]
mov rax, qword [r15 + 0xc0]
jmp 0x80181d8
nop dword [rax + rax]
mov rdi, r15
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [r15 + 0xd8]
mov rbx, qword [r15 + 0xc0]
mov rdx, qword [r15 + 0xb8]
sub rax, 8
jmp 0x8017ad4
nop
lea rdi, [r15 + 0xb8]
mov rsi, rbp
lea r12, [var_80h]
call _ZNSt6vectorIN5boost13re_detail_50014recursion_infoINS0_13match_resultsIPKwSaINS0_9sub_matchIS5_EEEEEEESaISA_EE17_M_realloc_insertIJSA_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_
jmp 0x8017b4c
nop dword [rax]
lea rsi, [r10 + rax]
test rax, rax
jle 0x8018941
movabs rdx, 0xaaaaaaaaaaaaaaab
mov rcx, rax
sar rcx, 3
imul rcx, rdx
mov qword [var_20h], rcx
mov rdx, rcx
mov rcx, r9
sub rcx, r10
sub rcx, 0x18
cmp rcx, 0x150
seta cl
cmp rax, 0x180
setg al
test cl, al
lea rax, [r10 + 0x18]
je 0x801895c
mov rcx, r9
sub rcx, rax
add rcx, 8
cmp rcx, 0x160
jbe 0x801895c
mov rax, qword [var_20h]
mov qword [var_30h], r14
mov rcx, r9
lea rdx, [r10 + 0x10]
mov qword [var_38h], r13
sub rax, 1
mov qword [var_40h], r10
mov qword [var_28h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_48h], r12
shl rax, 7
mov qword [var_50h], rsi
add rax, r9
mov qword [var_58h], r8
mov qword [var_18h], rax
mov qword [var_60h], r9
mov qword [var_68h], r15
nop dword [rax + rax]
movdqu xmm5, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm3, xmmword [rdx - 0x140]
movdqu xmm4, xmmword [rdx - 0x110]
shufpd xmm7, xmm5, 1
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm5, xmmword [rdx - 0x120]
movdqu xmm2, xmmword [rdx - 0xe0]
movdqu xmm1, xmmword [rdx - 0xb0]
shufpd xmm6, xmm3, 1
shufpd xmm5, xmm4, 1
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm4, xmmword [rdx - 0xf0]
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm15, xmmword [rdx - 0x20]
shufpd xmm4, xmm2, 1
shufpd xmm3, xmm1, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm1, xmmword [rdx - 0x80]
movdqu xmm14, xmmword [rdx - 0x160]
movdqu xmm9, xmmword [rdx - 0x70]
shufpd xmm2, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
movdqu xmm13, xmmword [rdx - 0x130]
invalid
invalid
invalid
