push r15
push r14
push r13
push r12
push rbp
push rbx
movabs rbx, 0xfffffffffffffff
sub rsp, 0x28
mov r14, qword [rdi + 8]
mov r12, qword [rdi]
mov rax, r14
sub rax, r12
sar rax, 3
cmp rax, rbx
je .LC66
test rax, rax
mov ecx, 1
mov rbp, rsi
mov r13, rdi
cmovne rcx, rax
add rax, rcx
setb cl
sub rsi, r12
movzx ecx, cl
test rcx, rcx
jne 0x801c8f0
test rax, rax
jne 0x801c8a8
mov qword [var_8h], 0
mov ebx, 8
xor r15d, r15d
mov rax, qword [rdx]
mov qword [r15 + rsi], rax
cmp rbp, r12
je 0x801c849
mov rsi, rbp
mov rdx, r15
mov rax, r12
sub rsi, r12
nop dword [rax + rax]
mov rcx, qword [rax]
add rax, 8
add rdx, 8
mov qword [rdx - 8], rcx
cmp rax, rbp
jne 0x801c830
lea rbx, [r15 + rsi + 8]
cmp rbp, r14
je 0x801c862
sub r14, rbp
mov rdi, rbx
mov rsi, rbp
mov rdx, r14
add rbx, r14
call memcpy
test r12, r12
je 0x801c876
mov rsi, qword [r13 + 0x10]
mov rdi, r12
sub rsi, r12
call _ZdlPvm
mov rax, qword [var_8h]
movq xmm0, r15
movq xmm1, rbx
punpcklqdq xmm0, xmm1
mov qword [r13 + 0x10], rax
movups xmmword [r13], xmm0
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
cmp rax, rbx
cmova rax, rbx
lea rbx, [rax*8]
mov rdi, rbx
mov qword [var_18h_2], rdx
mov qword [var_10h_2], rsi
call _Znwm
mov rsi, qword [var_10h_2]
mov rdx, qword [var_18h_2]
mov r15, rax
add rax, rbx
mov qword [var_8h], rax
lea rbx, [r15 + 8]
jmp 0x801c813
nop word [rax + rax]
movabs rbx, 0x7ffffffffffffff8
jmp 0x801c8b7
lea rdi, [0x0801c903]
call _ZSt20__throw_length_errorPKc
add byte [r13 + 0x6e], r10b
push rbp
outsb dx, byte [rsi]
je 0x801c978
jb 0x801c982
imul ebp, dword [rsi + 0x61], 0x20646574
outsb dx, byte [rsi]
invalid
insd dword [rdi], dx
and byte fs:[rbx + 0x61], ah
jo 0x801c99a
jne 0x801c99a
add bh, bh
invalid
invalid
invalid
call qword [rax + rbp*2 + 0x65]
push rsp
push 0x65722065
invalid
jne 0x801c9ab
jae 0x801c9a4
jbe 0x801c9a2
and byte [rbx + 0x75], dh
invalid
sub eax, 0x72707865
jae 0x801c9bc
imul ebp, dword [rdi + 0x6e], 0x66657220
jb 0x801c9c6
and byte [rdi + rbp*2 + 0x20], dh
invalid
outsb dx, byte [rsi]
and byte [rcx + 0x6e], ch
jbe 0x801c9bf
insb byte [rdi], dx
imul esp, dword [rax + riz + 0x6d], 0x696b7261
outsb dx, byte [rsi]
and byte [edi + 0x72], ah
outsd dx, dword [rsi]
jne 0x801c9df
sub al, 0x20
outsd dx, dword [rsi]
jb 0x801c994
imul esi, dword [rbx + 0x20], 0x65746e75
outsb dx, byte [rsi]
je 0x801c9e0
jb 0x801c9ea
imul ebp, dword [rsi + 0x61], 0x2e646574
add byte cs:[rax], al
add byte [rax], al
outsb dx, byte [rsi]
and byte [rcx + 0x6e], ch
jbe 0x801c9f0
insb byte [rdi], dx
imul esp, dword [rax + riz + 0x6f], 0x6e752072
je 0x801c9ff
jb 0x801ca09
imul ebp, dword [rsi + 0x61], 0x20646574
jb 0x801ca0a
invalid
jne 0x801ca1a
jae 0x801ca13
jbe 0x801ca11
and byte [rbx + 0x75], dh
invalid
sub eax, 0x72707865
jae 0x801ca2b
imul ebp, dword [rdi + 0x6e], 0x2e
add byte [rcx + 0x6e], cl
outsb dx, byte [rsi]
jbe 0x801ca25
insb byte [rdi], dx
imul esp, dword [rax + riz + 0x61], 0x7265746c
outsb dx, byte [rsi]
invalid
je 0x801ca3a
outsd dx, dword [rsi]
outsb dx, byte [rsi]
and byte [rdi + 0x70], ch
jb 0x801ca3a
je 0x801ca4a
jb 0x801ca50
and byte [rdi + 0x69], dh
je 0x801ca4a
imul ebp, dword [rsi + 0x20], 0x2e2e3f28
sub dword cs:[rax], esp
sub dword [rax], esp
invalid
insb byte [rdi], dx
outsd dx, dword [rsi]
invalid
imul ebp, dword [rsi], 0
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x6e], cl
outsb dx, byte [rsi]
jbe 0x801ca5d
insb byte [rdi], dx
imul esp, dword [rax + riz + 0x6f], 0x6d652072
and byte [rdi + 0x72], ch
and byte [arg_6dh], ah
jo 0x801ca7b
jns 0x801ca29
jp 0x801ca70
jb 0x801ca7c
jb 0x801ca7c
and byte [rdi + 0x69], dh
je 0x801ca7b
and byte [rcx + 0x73], ah
jae 0x801ca7d
jb 0x801ca8e
imul ebp, dword [rdi + 0x6e], 0x4d00002e
outsd dx, dword [rsi]
jb 0x801ca89
and byte [rax + rbp*2 + 0x61], dh
outsb dx, byte [rsi]
and byte [rdi + 0x6e], ch
and byte gs:[rcx + 0x6c], ah
je 0x801ca97
jb 0x801caa2
invalid
je 0x801caa0
outsd dx, dword [rsi]
outsb dx, byte [rsi]
and byte [rdi + 0x70], ch
jb 0x801caa0
je 0x801cab0
jb 0x801ca63
jl 0x801ca65
ja 0x801caa8
jae 0x801ca69
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
invalid
outsd dx, dword [rsi]
jne 0x801cabd
je 0x801cab6
jb loc..LC118
and byte fs:[rcx + 0x6e], ch
jae 0x801cac2
and byte gs:[rcx + 0x20], ah
and byte [rbx + 0x6f], ah
outsb dx, byte [rsi]
imul esi, dword fs:[rcx + rbp*2 + 0x6f], 0x206c616e
js 0x801cadd
jb 0x801cad4
jae 0x801cae4
jae 0x801cadb
imul ebp, dword [rdi + 0x6e], 0x2e
outsd dx, dword [rsi]
outsb dx, byte [rsi]
add byte cs:[rax], al
add byte [rcx + 0x6c], al
insb byte [rdi], dx
je 0x801cae1
jb 0x801caec
jb 0x801caec
outsb dx, byte [rsi]
invalid
je 0x801caea
outsd dx, dword [rsi]
outsb dx, byte [rsi]
and byte [rdi + 0x70], ch
jb 0x801caea
je 0x801cafa
jb loc..LC119
and byte [rcx + 0x72], ah
and byte gs:[rsi + 0x6f], ch
je 0x801cab6
invalid
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
ja 0x801cb01
and byte fs:[rcx + 0x6e], ch
jae 0x801cb0b
and byte gs:[rcx + 0x20], ah
and byte [r10 + 0x6c], r12b
outsd dx, dword [rsi]
invalid
imul ebp, dword [rsi], 0
add byte [rax], al
add byte [rax], al
and byte [r10 + 0x65], sil
jo 0x801cb23
je 0x801cb29
je 0x801cb2b
outsd dx, dword [rsi]
outsb dx, byte [rsi]
and byte [rdi + 0x70], ch
jb 0x801cb2b
je 0x801cb3b
jb 0x801caee
invalid
invalid
outsb dx, byte [rsi]
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x801caf5
and byte [rdx + 0x65], ah
and byte [rcx + 0x70], ah
jo 0x801cb48
insb byte [rdi], dx
imul esp, dword [arg_64h], 0x206f7420
and byte fs:[rdi + rbp*2 + 0x20], dh
outsd dx, dword [rsi]
and byte [rcx + 0x20], ah
and byte [rdx + 0x65], bh
jb 0x801cb58
sub eax, 0x74646977
je 0x801cb57
push 0x73736120
and byte [rcx + 0x73], ah
jae 0x801cb59
jb 0x801cb6a
imul ebp, dword [rdi + 0x6e], 0x2e
add byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x801cb67
invalid
je 0x801cb74
jb 0x801cb41
cmp bl, byte [rdi + 0x4d]
pop rdi
jb 0x801cb6e
outsb dx, byte [rsi]
pop rdi
invalid
push 0x3a6b6365
and byte [rdi + 0x5f], bl
outsb dx, byte [rsi]
and byte [rax], ch
ja 0x801cb87
imul esp, dword [rbx + 0x68], 0x20736920
imul esi, dword [rbx + 0x20], 0x29757a25
sub dword [rax], esp
cmp eax, 0x69687420
jae 0x801cb60
jae 0x801cb9f
jp 0x801cb9d
sub byte [rcx], ch
and byte [rax], ch
sub byte [rdi + 0x68], dh
imul esp, dword [rbx + 0x68], 0x20736920
and eax, 0x29757a
sub dword [rax], eax
invalid
invalid
invalid
invalid
invalid
inc dword [rcx + 0x57]
push r15
mov r15, rdi
push r14
push r13
push rbp
push r12
push rbp
push rbx
sub rsp, 0x68
push 0xffffffff88978b48
add byte [rax], al
add byte [rax - 0x75], cl
pop qword [rax + 0x48000000]
add byte [rax - 0x73], cl
add al, 0x48
mov qword [rdi + 0x88], rax
cmp rax, rcx
je 0x801cf48
movsxd rdx, dword [rdx + 4]
lea r14, [0x0801cb8e]
test edx, 0xffffff80
je 0x801cd10
mov edx, 0x18
add byte [rax], al
xor esi, esi
mov rdi, r15
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
add byte [rax], al
add byte [rcx - 0x75], cl
mov bh, 0xa8
add byte [rax], al
add byte [rcx + 0xf], al
mov dh, 0xbf
mov al, 0
add byte [rax], al
mov rbx, rax
mov rax, qword [r15]
mov qword [rsp], rsi
mov rcx, qword [rax + 0x160]
mov r13d, dword [rax + 0x28]
mov byte [arg_36h], dil
mov r10, qword [rax + 0x168]
mov ebp, r13d
sub r10, rcx
shr ebp, 0x14
add r10, 7
and ebp, 1
and r10, 0xfffffffffffffff8
mov byte [rbx + 0x14], bpl
lea rdx, [rcx + r10]
mov qword [rax + 0x168], rdx
mov rdx, qword [r15 + 0x88]
mov rsi, qword [r15 + 0x94]
mov qword [r15 + 0xa8], r10
movsxd r12, dword [rdx]
mov byte [r15 + 0xb0], 0
mov qword [arg_10h], rsi
mov esi, dword [r15 + 0x90]
mov dword [r15 + 0x94], 0xffffffff
mov dword [r15 + 0x98], esi
test r12d, 0xffffff80
je 0x801cd50
cmp r12d, 0x52
je 0x801cd78
cmp r12d, 0x26
je 0x801cf88
cmp r12d, 0x50
je 0x801ce38
mov rdi, r15
mov qword [var_20h], r10
mov qword [var_18h], rcx
call _ZN5boost13re_detail_50018basic_regex_parserIwNS_14c_regex_traitsIwEEE13parse_optionsEv
add byte [rax], al
add byte [rax], al
mov rcx, qword [var_18h]
mov r10, qword [var_20h]
mov r12d, eax
mov rax, qword [r15 + 0x88]
cmp rax, qword [r15 + 0x80]
je 0x801ce1b
mov r11, qword [r15]
movsxd rsi, dword [rax]
mov edx, dword [r11 + 0x28]
xor edx, r12d
and edx, 0x100000
setne dil
mov byte [r15 + 0xb0], dil
mov dword [rbx + 0x10], 0
test esi, 0xffffff80
je 0x801d0e8
nop dword [rax]
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801ccd0
cmp byte [r14 + rdx], 1
jne 0x801ccd0
sub rax, qword [r15 + 0x78]
mov esi, 0x14
mov rdi, r15
xor r12d, r12d
sar rax, 2
mov rdx, rax
call _ZN5boost13re_detail_50018basic_regex_parserIwNS_14c_regex_traitsIwEEE4failENS_15regex_constants10error_typeEl
jmp 0x801cdd6
nop
cmp byte [r14 + rdx], 0xd
jne 0x801cb9a
jmp 0x801cd34
nop dword [rax]
cmp byte [r14 + rdx], 2
je 0x801cf38
cmp rcx, rax
je 0x801cf38
movsxd rdx, dword [rax]
add rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801cd2b
jmp 0x801cd20
nop dword [rax]
movsxd rdi, r12d
cmp byte [r14 + rdi], 0x35
ja 0x801cc47
movzx edi, byte [r14 + rdi]
lea r11, [0x0801cd6a]
movsxd rdi, dword [r11 + rdi*4]
add rdi, r11
jmp rdi
nop dword [rax + rax]
lea rax, [rdx + 4]
mov qword [r15 + 0x88], rax
movsxd rax, dword [rdx + 4]
test eax, 0xffffff80
je 0x801d0d0
mov qword [r15 + 0x88], rdx
jmp 0x801cdae
nop dword [rax + rax]
sub rdx, 4
movsxd r12, dword [rdx]
mov qword [r15 + 0x88], rdx
test r12d, 0xffffff80
jne 0x801cda0
cmp byte [r14 + r12], 1
jne 0x801cda0
sub rdx, qword [r15 + 0x78]
sar rdx, 2
mov esi, 0x14
mov rdi, r15
call _ZN5boost13re_detail_50018basic_regex_parserIwNS_14c_regex_traitsIwEEE4failENS_15regex_constants10error_typeEl
xor r12d, r12d
add rsp, 0x68
mov eax, r12d
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
cmp byte [r14 + rax], 1
je 0x801cdbe
movsxd rax, dword [rdx - 4]
sub rdx, 4
mov qword [r15 + 0x88], rdx
test eax, 0xffffff80
jne 0x801cdf7
jmp 0x801cdf0
nop
cmp byte [r14 + rdx], 1
je 0x801ccee
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801ce1b
jmp 0x801ce10
nop dword [rax]
mov rdi, qword [r15 + 0x80]
lea rax, [rdx + 4]
mov qword [r15 + 0x88], rax
cmp rax, rdi
je 0x801de81
movsxd rsi, dword [rdx + 4]
cmp esi, 0x3e
jne 0x801cc65
add rdx, 8
mov qword [r15 + 0x88], rdx
cmp rdi, rdx
je 0x801df92
mov rax, rdx
jmp 0x801ce97
nop dword [rax]
lea r8, [rax + 4]
mov qword [r15 + 0x88], r8
cmp rdi, r8
je 0x801df92
mov rax, r8
mov r11d, esi
movsxd rsi, dword [rax]
test esi, 0xffffff80
jne 0x801ce80
movsxd r8, esi
cmp byte [r14 + r8], 2
jne 0x801ce80
cmp rdi, rax
je 0x801df8b
cmp rdx, rax
je 0x801e128
xor esi, esi
nop dword [rax + rax]
mov rdi, rsi
mov r8, rsi
add rdx, 4
shr r8, 2
shl rdi, 6
add rdi, r8
mov r8d, dword [rdx - 4]
sub r8d, 0x61c88647
add rdi, r8
xor rsi, rdi
cmp rdx, rax
jne 0x801cec8
movabs rdx, 0x200000005
mov rax, rsi
mul rdx
mov rax, rsi
sub rax, rdx
shr rax, 1
add rdx, rax
shr rdx, 0x1e
mov rax, rdx
shl rax, 0x1f
sub rax, rdx
sub rsi, rax
mov r12, rsi
or r12d, 0x40000000
movsxd r12, r12d
jmp 0x801d051
nop word [rax + rax]
mov r12d, 1
jmp 0x801cdd6
nop dword [rax + rax]
mov qword [rdi + 0x88], rdx
lea r14, [0x0801cf56]
jmp 0x801cf6b
nop dword [rax + rax]
sub rdx, 4
mov qword [r15 + 0x88], rdx
movsxd rax, dword [rdx]
test eax, 0xffffff80
jne 0x801cf60
cmp byte [r14 + rax], 1
jne 0x801cf60
jmp 0x801cdbe
nop dword [rax]
mov rsi, qword [r15 + 0x80]
lea rdi, [rdx + 4]
mov qword [r15 + 0x88], rdi
cmp rsi, rdi
je 0x801dd88
mov rdx, rdi
jmp 0x801cfc7
nop dword [rax + rax]
lea rax, [rdx + 4]
mov qword [r15 + 0x88], rax
cmp rsi, rax
je 0x801dd88
mov rdx, rax
movsxd r12, dword [rdx]
test r12d, 0xffffff80
jne 0x801cfb0
movsxd rax, r12d
cmp byte [r14 + rax], 2
jne 0x801cfb0
cmp rdx, rdi
je 0x801e128
xor esi, esi
nop dword [rax + rax]
mov rax, rsi
mov r8, rsi
add rdi, 4
shr r8, 2
shl rax, 6
add rax, r8
mov r8d, dword [rdi - 4]
sub r8d, 0x61c88647
add rax, r8
xor rsi, rax
cmp rdx, rdi
jne 0x801cff0
movabs rdx, 0x200000005
mov rax, rsi
mul rdx
mov rax, rsi
sub rax, rdx
shr rax, 1
add rdx, rax
shr rdx, 0x1e
mov rax, rdx
shl rax, 0x1f
sub rax, rdx
sub rsi, rax
or esi, 0x40000000
movsxd r12, esi
mov dword [rbx + 0x10], 0
mov edx, 0x20
mov esi, 0x1d
mov rdi, r15
mov qword [var_38h], r10
mov qword [var_20h], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov edx, 0x18
mov esi, 0x1c
mov rdi, r15
mov qword [rax + 0x10], r12
mov dword [rax + 0x18], 0
mov rax, qword [r15]
mov r12d, dword [rax + 0x28]
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov byte [var_37h], 1
mov rcx, qword [var_20h]
and r12d, 0x100000
mov dword [var_18h], 0
mov r10, qword [var_38h]
mov qword [var_28h], 0
test r12d, r12d
setne byte [rax + 0x10]
jmp 0x801d140
nop dword [rax + rax]
cmp byte [r14 + rax], 2
jne 0x801cd92
xor r12d, r12d
jmp 0x801d051
nop dword [rax + rax]
movzx esi, byte [r14 + rsi]
cmp sil, 2
je 0x801d373
cmp sil, 0x24
jne 0x801ccd0
mov dword [r11 + 0x28], r12d
shr r12d, 0x14
and r12d, 1
cmp byte [r15 + 0x18], r12b
je 0x801d117
mov byte [r15 + 0x18], r12b
add rax, 4
mov byte [var_37h], 1
mov qword [r15 + 0x88], rax
mov qword [var_28h], 0
mov dword [var_18h], 0
test edx, edx
jne 0x801de52
sub rbx, rcx
mov rdi, r15
mov qword [var_20h], r10
call _ZN5boost13re_detail_50018basic_regex_parserIwNS_14c_regex_traitsIwEEE9parse_allEv
mov rsi, rbx
mov rdi, r15
call _ZN5boost13re_detail_50018basic_regex_parserIwNS_14c_regex_traitsIwEEE11unwind_altsEl
mov r10, qword [var_20h]
mov r12d, eax
mov rax, qword [r15 + 0x88]
test r12b, r12b
je 0x801d2f8
mov rcx, qword [r15 + 0x80]
cmp rax, rcx
je 0x801dd38
add rax, 4
cmp byte [var_37h], 0
mov qword [r15 + 0x88], rax
je 0x801d1b4
cmp byte [r15 + 0xb0], 0
jne 0x801ddbb
mov rax, qword [r15]
mov dword [rax + 0x28], r13d
cmp bpl, byte [r15 + 0x18]
je 0x801d1b4
mov byte [r15 + 0x18], bpl
mov rdi, qword [var_28h]
test rdi, rdi
je 0x801d1f9
mov rcx, qword [r15]
mov rdx, qword [rcx + 0x160]
mov rax, qword [rcx + 0x168]
sub rax, rdx
add rax, 7
and rax, 0xfffffffffffffff8
lea rsi, [rdx + rax]
add rdx, rdi
sub rax, rdi
mov qword [rcx + 0x168], rsi
mov qword [rdx + 0x10], rax
cmp qword [r15 + 0x10], rdx
je 0x801dde0
cmp dword [var_18h], 0xfffffffc
jne 0x801dbc0
mov rcx, qword [r15]
mov rdx, qword [rcx + 0x160]
lea rax, [rdx + r10]
cmp dword [rax], 0x11
je 0x801dc90
mov ecx, 0x120
mov edx, 0x11
mov rsi, r10
mov rdi, r15
mov qword [var_20h], r10
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12insert_stateElNS0_19syntax_element_typeEm
mov rdx, qword [r15]
mov r10, qword [var_20h]
mov rcx, qword [rdx + 0x160]
mov rdx, qword [rdx + 0x168]
sub rdx, rax
mov qword [rax + 0x10], rdx
lea rax, [rcx + r10]
mov rdx, qword [rax + 8]
mov eax, dword [rax + rdx]
cmp eax, 0x1b
je 0x801dbc0
test eax, eax
je 0x801dbc0
mov rax, qword [r15 + 0x88]
nop dword [rax]
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801d278
cmp byte [r14 + rdx], 1
jne 0x801d278
lea rdi, [var_40h]
lea rsi, [0x0801d2a2]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [var_48h]
mov esi, 0xd
sub rdx, qword [r15 + 0x78]
mov rcx, qword [var_40h]
mov rdi, r15
sar rdx, 2
call .text
mov rdi, qword [var_40h]
lea rax, [var_50h]
cmp rdi, rax
je 0x801cdd3
mov rax, qword [var_50h]
lea rsi, [rax + 1]
call _ZdlPvm
jmp 0x801cdd3
nop dword [rax + rax]
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801d2f8
cmp byte [r14 + rdx], 1
jne 0x801d2f8
lea rdi, [var_40h]
lea rsi, [0x0801d322]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [var_48h]
mov esi, 0x14
sub rdx, qword [r15 + 0x78]
mov rcx, qword [var_40h]
mov rdi, r15
sar rdx, 2
call .text
mov rdi, qword [var_40h]
lea rax, [var_50h]
cmp rdi, rax
je 0x801cdd6
mov rax, qword [var_50h]
lea rsi, [rax + 1]
call _ZdlPvm
jmp 0x801cdd6
mov dword [r11 + 0x28], r12d
shr r12d, 0x14
and r12d, 1
cmp byte [r15 + 0x18], r12b
je 0x801d389
mov byte [r15 + 0x18], r12b
or byte [var_36h], dil
mov byte [var_37h], 0
jmp 0x801d127
mov dword [r15 + 0x94], esi
add rdx, 4
mov dword [rbx + 0x10], 0
mov byte [rsp + 0x37], 1
mov qword [r15 + 0x88], rdx
mov qword [rsp + 0x28], 0
mov dword [rsp + 0x18], 0
jmp 0x801d140
lea rdi, [rdx + 4]
mov qword [r15 + 0x88], rdi
cmp rdi, qword [r15 + 0x80]
je 0x801e30b
movsxd rdi, dword [rdx + 4]
test edi, 0xffffff80
je 0x801dfcf
mov qword [r15 + 0x88], rdx
mov r12d, 0x3e
mov dword [rsp + 0x18], 0
test byte [rax + 0x2a], 0x40
jne 0x801d427
add esi, 1
mov dword [r15 + 0x90], esi
mov dword [rsp + 0x18], esi
test byte [rax + 0x2a], 0x80
jne 0x801e133
mov eax, dword [rsp + 0x18]
mov r11, qword [r15 + 0x80]
lea rdi, [rdx + 4]
mov dword [rbx + 0x10], eax
mov rax, rdi
mov qword [r15 + 0x88], rdi
cmp rdi, r11
jne 0x801d467
jmp 0x801e084
nop dword [rax]
lea rsi, [rax + 4]
mov qword [r15 + 0x88], rsi
cmp r11, rsi
je 0x801df2a
mov rax, rsi
movsxd rdx, dword [rax]
cmp edx, r12d
jne 0x801d450
cmp r11, rax
je 0x801df22
mov esi, dword [rsp + 0x18]
mov r12, qword [r15]
mov dword [rsp + 0x40], esi
cmp rdi, rax
je 0x801e37a
xor esi, esi
nop
mov rdx, rsi
mov r8, rsi
add rdi, 4
shr r8, 2
shl rdx, 6
add rdx, r8
mov r8d, dword [rdi - 4]
sub r8d, 0x61c88647
add rdx, r8
xor rsi, rdx
cmp rax, rdi
jne 0x801d490
movabs rdx, 0x200000005
mov rax, rsi
mul rdx
mov rax, rsi
sub rax, rdx
shr rax, 1
add rdx, rax
shr rdx, 0x1e
mov rax, rdx
shl rax, 0x1f
sub rax, rdx
sub rsi, rax
or esi, 0x40000000
mov dword [rsp + 0x44], esi
mov rsi, qword [r12 + 8]
cmp rsi, qword [r12 + 0x10]
je 0x801e33b
mov rax, qword [rsp + 0x40]
mov qword [rsi], rax
lea rax, [rsi + 8]
mov qword [r12 + 8], rax
mov r11, qword [r12]
cmp r11, rax
je 0x801d555
sub rax, 8
cmp r11, rax
jne 0x801d547
jmp 0x801d555
nop word [rax + rax]
mov edi, dword [rax]
mov r8d, dword [rax + 8]
mov dword [rax + 4], esi
mov dword [rax + 0xc], edx
mov dword [rax], r8d
mov dword [rax + 8], edi
cmp r11, rax
je 0x801d555
mov esi, dword [rax + 4]
mov edx, dword [rax - 4]
sub rax, 8
cmp esi, edx
jl 0x801d530
add qword [r15 + 0x88], 4
mov byte [rsp + 0x37], 1
mov qword [rsp + 0x28], 0
jmp 0x801d140
add rdx, 4
mov esi, 0x10
mov rdi, r15
mov qword [rsp + 0x38], r10
mov dword [rbx + 0x10], 0xfffffffe
mov qword [r15 + 0x88], rdx
mov edx, 0x18
mov qword [rsp + 0x20], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rdx, qword [r15]
mov byte [rsp + 0x37], 1
mov dword [rsp + 0x18], 0xfffffffe
mov rcx, qword [rsp + 0x20]
sub rax, qword [rdx + 0x160]
mov rsi, qword [rdx + 0x160]
mov qword [rsp + 0x28], rax
mov rax, qword [rdx + 0x168]
sub rax, qword [rdx + 0x160]
mov r10, qword [rsp + 0x38]
add rax, 7
and rax, 0xfffffffffffffff8
add rsi, rax
mov qword [rdx + 0x168], rsi
mov qword [r15 + 0xa8], rax
jmp 0x801d140
add rdx, 4
mov esi, 0x10
mov rdi, r15
mov qword [rsp + 0x38], r10
mov dword [rbx + 0x10], 0xffffffff
mov qword [r15 + 0x88], rdx
mov edx, 0x18
mov qword [rsp + 0x20], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rdx, qword [r15]
mov byte [rsp + 0x37], 1
mov dword [rsp + 0x18], 0xffffffff
mov rcx, qword [rsp + 0x20]
sub rax, qword [rdx + 0x160]
mov rsi, qword [rdx + 0x160]
mov qword [rsp + 0x28], rax
mov rax, qword [rdx + 0x168]
sub rax, qword [rdx + 0x160]
mov r10, qword [rsp + 0x38]
add rax, 7
and rax, 0xfffffffffffffff8
add rsi, rax
mov qword [rdx + 0x168], rsi
mov qword [r15 + 0xa8], rax
jmp 0x801d140
add rdx, 4
mov esi, 0x10
mov rdi, r15
mov qword [rsp + 0x38], r10
mov dword [rbx + 0x10], 0xfffffffd
mov qword [r15 + 0x88], rdx
mov edx, 0x18
mov qword [rsp + 0x20], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rdx, qword [r15]
mov byte [rsp + 0x37], 1
mov dword [rsp + 0x18], 0xfffffffd
mov rcx, qword [rsp + 0x20]
sub rax, qword [rdx + 0x160]
mov rsi, qword [rdx + 0x160]
mov qword [rsp + 0x28], rax
mov rax, qword [rdx + 0x168]
sub rax, qword [rdx + 0x160]
mov r10, qword [rsp + 0x38]
add rax, 7
and rax, 0xfffffffffffffff8
add rsi, rax
mov qword [rdx + 0x168], rsi
mov qword [r15 + 0xa8], rax
jmp 0x801d140
mov rsi, qword [r15 + 0x80]
mov edx, 0xa
mov qword [rsp + 0x20], r10
lea rdi, [r15 + 0x88]
mov qword [rsp + 0x18], rcx
call .text
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
mov r12, rax
mov rax, qword [r15 + 0x88]
test r12, r12
js 0x801d750
movsxd rdx, dword [rax]
test edx, 0xffffff80
je 0x801e118
nop
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801d750
cmp byte [r14 + rdx], 1
jne 0x801d750
lea rdi, [rsp + 0x40]
lea rsi, [0x0801d77a]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [rsp + 0x48]
mov esi, 0x14
sub rdx, qword [r15 + 0x78]
mov rcx, qword [rsp + 0x40]
mov rdi, r15
sar rdx, 2
call .text
jmp 0x801d2cd
add rdx, 4
mov rsi, qword [r15 + 0x80]
mov qword [rsp + 0x20], r10
lea rdi, [r15 + 0x88]
mov qword [r15 + 0x88], rdx
mov edx, 0xa
mov qword [rsp + 0x18], rcx
call .text
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
test rax, rax
jle 0x801dfc2
mov r12d, dword [r15 + 0x90]
add r12, 1
sub r12, rax
test r12, r12
jg 0x801d051
mov rax, qword [r15 + 0x88]
nop dword [rax + rax]
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801d810
cmp byte [r14 + rdx], 1
jne 0x801d810
lea rdi, [rsp + 0x40]
lea rsi, [0x0801d83a]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [rsp + 0x48]
mov esi, 0x14
sub rdx, qword [r15 + 0x78]
mov rcx, qword [rsp + 0x40]
mov rdi, r15
sar rdx, 2
call .text
jmp 0x801d2cd
add rdx, 4
mov rsi, qword [r15 + 0x80]
mov qword [rsp + 0x20], r10
lea rdi, [r15 + 0x88]
mov qword [r15 + 0x88], rdx
mov edx, 0xa
mov qword [rsp + 0x18], rcx
call .text
mov rdx, rax
mov rax, qword [r15 + 0x88]
test rdx, rdx
jle 0x801d8c0
movsxd rsi, dword [rax]
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
test esi, 0xffffff80
je 0x801e0b1
nop
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801d8c0
cmp byte [r14 + rdx], 1
jne 0x801d8c0
lea rdi, [rsp + 0x40]
lea rsi, [0x0801d8ea]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [rsp + 0x48]
mov esi, 0x14
sub rdx, qword [r15 + 0x78]
mov rcx, qword [rsp + 0x40]
mov rdi, r15
sar rdx, 2
call .text
jmp 0x801d2cd
mov rsi, qword [r15 + 0x80]
lea rax, [rdx + 4]
mov dword [rbx + 0x10], 0xfffffffc
mov qword [r15 + 0x88], rax
cmp rax, rsi
je 0x801df5a
lea r12, [r15 + 0x88]
mov edx, 0xa
mov qword [rsp + 0x20], r10
mov rdi, r12
mov qword [rsp + 0x18], rcx
call .text
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
mov rsi, qword [r15 + 0x80]
mov r8, rax
mov rax, qword [r15 + 0x88]
cmp rax, rsi
je 0x801db25
movsxd rdx, dword [rax]
cmp edx, 0x52
je 0x801e1c4
cmp edx, 0x27
sete r12b
cmp edx, 0x3c
sete dil
or r12b, dil
je 0x801e17e
lea rdx, [rax + 4]
mov qword [r15 + 0x88], rdx
cmp rsi, rdx
je 0x801db4d
mov rax, rdx
jmp 0x801d9d1
lea rdi, [rax + 4]
mov qword [r15 + 0x88], rdi
cmp rsi, rdi
je 0x801db4d
mov rax, rdi
mov r8d, dword [rax]
cmp r8d, 0x27
sete dil
cmp r8d, 0x3e
sete r8b
or dil, r8b
je 0x801d9ba
mov byte [rsp + 0x37], dil
cmp rsi, rax
je 0x801db49
xor r12d, r12d
cmp rdx, rax
je 0x801da28
mov rsi, r12
mov rdi, r12
add rdx, 4
shr rdi, 2
shl rsi, 6
add rsi, rdi
mov edi, dword [rdx - 4]
sub edi, 0x61c88647
add rsi, rdi
xor r12, rsi
cmp rax, rdx
jne 0x801d9ff
mov edx, 0x18
mov esi, 0x1b
mov rdi, r15
mov qword [rsp + 0x20], r10
mov qword [rsp + 0x18], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
movabs rdx, 0x200000005
mov r11, rax
mov rax, r12
mul rdx
mov rax, r12
sub rax, rdx
shr rax, 1
add rax, rdx
shr rax, 0x1e
mov rdx, rax
shl rdx, 0x1f
sub rdx, rax
mov rax, r12
sub rax, rdx
or eax, 0x40000000
mov dword [r11 + 0x10], eax
mov rax, qword [r15 + 0x88]
movsxd rdx, dword [rax]
cmp edx, 0x3e
setne r12b
cmp edx, 0x27
setne sil
and r12b, sil
jne 0x801db64
mov r11, qword [r15 + 0x80]
lea rsi, [rax + 4]
mov qword [r15 + 0x88], rsi
cmp rsi, r11
je 0x801db61
movsxd rdi, dword [rax + 4]
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
test edi, 0xffffff80
je 0x801e65a
mov qword [r15 + 0x88], rax
jmp 0x801daee
nop
sub rax, 4
movsxd rdx, dword [rax]
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801dae0
cmp byte [r14 + rdx], 1
jne 0x801dae0
sub rax, qword [r15 + 0x78]
mov esi, 0x14
mov rdi, r15
sar rax, 2
mov rdx, rax
call _ZN5boost13re_detail_50018basic_regex_parserIwNS_14c_regex_traitsIwEEE4failENS_15regex_constants10error_typeEl
jmp 0x801cdd6
cmp byte [r14 + rdx], 1
je 0x801ccee
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801db25
jmp 0x801db1a
cmp byte [r14 + rdx], 1
je 0x801ccee
sub rax, 4
movsxd rdx, dword [rax]
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801db49
jmp 0x801db3e
mov rax, rsi
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801db64
cmp byte [r14 + rdx], 1
jne 0x801db64
lea rdi, [rsp + 0x40]
lea rsi, [0x0801db8e]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [rsp + 0x48]
mov esi, 0x14
sub rdx, qword [r15 + 0x78]
mov rcx, qword [rsp + 0x40]
mov rdi, r15
sar rdx, 2
call .text
jmp 0x801d2cd
nop
movq xmm0, rbx
mov edx, 0x18
mov esi, 1
mov rdi, r15
movhps xmm0, qword [rsp]
movaps xmmword [rsp], xmm0
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rcx, qword [r15]
movdqa xmm0, xmmword [rsp]
mov rdx, rax
mov eax, dword [var_18h]
mov dword [rdx + 0x10], eax
mov eax, dword [rcx + 0x28]
shr eax, 0x14
and eax, 1
mov byte [rdx + 0x14], al
movzx eax, byte [var_36h]
movups xmmword [r15 + 0xa0], xmm0
mov byte [r15 + 0xb0], al
mov eax, dword [r15 + 0x98]
cmp eax, dword [r15 + 0x90]
jbe 0x801dc28
mov dword [r15 + 0x90], eax
mov rax, qword [var_10h]
mov ebx, dword [var_18h]
mov qword [r15 + 0x94], rax
test ebx, ebx
jle 0x801cf38
test byte [rcx + 0x2a], 0x80
je 0x801cf38
mov rdi, qword [rcx + 0x178]
mov rdx, qword [rcx + 0x180]
movsxd rsi, ebx
mov rax, qword [r15 + 0x88]
sub rax, qword [r15 + 0x78]
sub rsi, 1
sub rdx, rdi
sar rax, 2
sar rdx, 4
sub rax, 1
cmp rsi, rdx
jae .LC119
shl rsi, 4
mov qword [rdi + rsi + 8], rax
jmp 0x801cdd6
mov rsi, qword [rax + 0x10]
mov rcx, qword [rcx + 0x168]
add r10, rsi
sub rcx, rdx
cmp r10, rcx
jge 0x801dcaf
test rsi, rsi
jg 0x801deb3
mov rdx, qword [rax + 8]
add rdx, rax
cmp dword [rdx], 0x1b
jne 0x801d256
cmp dword [rdx + 0x10], 0x270f
jne 0x801dbc0
mov rax, qword [r15 + 0x88]
nop dword [rax + rax]
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801dcd8
cmp byte [r14 + rdx], 1
jne 0x801dcd8
lea rdi, [var_40h]
lea rsi, [0x0801dd02]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [var_48h]
mov esi, 2
sub rdx, qword [r15 + 0x78]
mov rcx, qword [var_40h]
mov rdi, r15
sar rdx, 2
call .text
jmp 0x801d2cd
nop word [rax + rax]
lea rax, [rcx - 4]
mov qword [r15 + 0x88], rax
jmp 0x801dd53
nop dword [rax]
sub rax, 4
mov qword [r15 + 0x88], rax
movsxd rdx, dword [rax]
test edx, 0xffffff80
jne 0x801dd48
cmp byte [r14 + rdx], 1
jne 0x801dd48
sub rcx, qword [r15 + 0x78]
mov esi, 8
mov rdi, r15
xor r12d, r12d
mov rdx, rcx
sar rdx, 2
call _ZN5boost13re_detail_50018basic_regex_parserIwNS_14c_regex_traitsIwEEE4failENS_15regex_constants10error_typeEl
jmp 0x801cdd6
nop dword [rax]
mov qword [r15 + 0x88], rdx
jmp 0x801dda6
nop dword [rax]
sub rdx, 4
movsxd r12, dword [rdx]
mov qword [r15 + 0x88], rdx
test r12d, 0xffffff80
jne 0x801dd98
cmp byte [r14 + r12], 1
jne 0x801dd98
jmp 0x801cdbe
mov edx, 0x18
mov esi, 0x1c
mov rdi, r15
mov qword [var_20h], r10
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov r10, qword [var_20h]
mov byte [rax + 0x10], bpl
jmp 0x801d1a3
cmp dword [var_18h], 0xfffffffe
je 0x801dbc0
mov rax, qword [r15 + 0x88]
nop word [rax + rax]
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801ddf8
cmp byte [r14 + rdx], 1
jne 0x801ddf8
lea rdi, [var_40h]
lea rsi, [0x0801de22]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [var_48h]
mov esi, 0x14
sub rdx, qword [r15 + 0x78]
mov rcx, qword [var_40h]
mov rdi, r15
sar rdx, 2
call .text
jmp 0x801d2cd
mov edx, 0x18
mov esi, 0x1c
mov rdi, r15
mov qword [var_38h], r10
mov qword [var_20h], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rcx, qword [var_20h]
mov r10, qword [var_38h]
mov byte [rax + 0x10], r12b
jmp 0x801d140
mov qword [r15 + 0x88], rdx
jmp 0x801de9e
nop word [rax + rax]
sub rdx, 4
movsxd r12, dword [rdx]
mov qword [r15 + 0x88], rdx
test r12d, 0xffffff80
jne 0x801de90
cmp byte [r14 + r12], 1
jne 0x801de90
jmp 0x801cdbe
cmp dword [rax + rsi], 0x11
jne 0x801dcaf
mov rax, qword [r15 + 0x88]
nop dword [rax]
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801dec8
cmp byte [r14 + rdx], 1
jne 0x801dec8
lea rdi, [var_40h]
lea rsi, [0x0801def2]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [var_48h]
mov esi, 2
sub rdx, qword [r15 + 0x78]
mov rcx, qword [var_40h]
mov rdi, r15
sar rdx, 2
call .text
jmp 0x801d2cd
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
jmp 0x801df46
nop dword [rax + rax]
sub rax, 4
movsxd rdx, dword [rax]
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801df38
cmp byte [r14 + rdx], 1
jne 0x801df38
jmp 0x801ccee
mov qword [r15 + 0x88], rdx
jmp 0x801df76
nop dword [rax + rax]
sub rdx, 4
movsxd r12, dword [rdx]
mov qword [r15 + 0x88], rdx
test r12d, 0xffffff80
jne 0x801df68
cmp byte [r14 + r12], 1
jne 0x801df68
jmp 0x801cdbe
sub rax, 4
movsxd rsi, r11d
mov qword [r15 + 0x88], rax
jmp 0x801dfae
nop dword [rax + rax]
sub rax, 4
movsxd rsi, dword [rax]
mov qword [r15 + 0x88], rax
test esi, 0xffffff80
jne 0x801dfa0
cmp byte [r14 + rsi], 1
jne 0x801dfa0
jmp 0x801ccee
sub qword [r15 + 0x88], 4
jmp 0x801cc65
movzx edi, byte [r14 + rdi]
cmp dil, 0x35
je 0x801e366
cmp dil, 0x25
jne 0x801d3f4
mov dword [rbx + 0x10], 0xffffffff
mov dword [rsp + 0x18], 0xffffffff
add rdx, 8
mov esi, 0x10
mov rdi, r15
mov qword [rsp + 0x38], r10
mov qword [r15 + 0x88], rdx
mov edx, 0x18
mov qword [rsp + 0x20], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rdx, qword [r15]
mov esi, 0x1a
mov rdi, r15
sub rax, qword [rdx + 0x160]
mov edx, 0x18
mov qword [rsp + 0x28], rax
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rdx, qword [r15]
mov byte [rsp + 0x37], 1
mov rcx, qword [rsp + 0x20]
mov r10, qword [rsp + 0x38]
mov rax, qword [rdx + 0x168]
sub rax, qword [rdx + 0x160]
mov rsi, qword [rdx + 0x160]
add rax, 7
and rax, 0xfffffffffffffff8
add rsi, rax
mov qword [rdx + 0x168], rsi
mov qword [r15 + 0xa8], rax
jmp 0x801d140
mov qword [r15 + 0x88], rdx
jmp 0x801e09b
nop dword [rax]
sub rdx, 4
mov qword [r15 + 0x88], rdx
movsxd rax, dword [rdx]
test eax, 0xffffff80
jne 0x801e090
cmp byte [r14 + rax], 1
jne 0x801e090
jmp 0x801cdbe
cmp byte [r14 + rsi], 2
jne 0x801d8c0
mov r12d, dword [r15 + 0x90]
movabs rax, 0x7fffffffffffffff
sub rax, r12
add r12, rdx
cmp rax, rdx
jge 0x801d051
lea rdi, [rsp + 0x40]
lea rsi, [0x0801e0e8]
call .text
mov rdx, qword [r15 + 0x88]
mov r8, qword [rsp + 0x48]
mov esi, 0x14
sub rdx, qword [r15 + 0x78]
mov rcx, qword [rsp + 0x40]
mov rdi, r15
sar rdx, 2
call .text
jmp 0x801d2cd
cmp byte [r14 + rdx], 2
je 0x801d051
jmp 0x801d750
mov r12d, 0x40000000
jmp 0x801d051
mov qword [rsp + 0x48], 0
mov rsi, rdx
sub rsi, qword [r15 + 0x78]
sar rsi, 2
sub rsi, 2
mov qword [rsp + 0x40], rsi
mov rsi, qword [rax + 0x180]
cmp rsi, qword [rax + 0x188]
je 0x801e4cc
movdqa xmm1, xmmword [rsp + 0x40]
add rsi, 0x10
movups xmmword [rsi - 0x10], xmm1
mov qword [rax + 0x180], rsi
jmp 0x801d427
cmp edx, 0x44
je .LC110
test r8, r8
mov qword [rsp + 0x28], r8
jg 0x801e426
test edx, 0xffffff80
je 0x801e5fc
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801e1a1
cmp byte [r14 + rdx], 1
jne 0x801e1a1
jmp 0x801dafd
lea rdi, [rax + 4]
mov qword [r15 + 0x88], rdi
cmp rsi, rdi
je 0x801e6c4
cmp dword [rax + 4], 0x26
jne 0x801e384
add rax, 8
mov qword [r15 + 0x88], rax
cmp rsi, rax
je 0x801e501
mov rdi, rax
jmp 0x801e217
nop dword [rax + rax]
lea rdx, [rdi + 4]
mov qword [r15 + 0x88], rdx
cmp rsi, rdx
je 0x801e501
mov rdi, rdx
movsxd rdx, dword [rdi]
test edx, 0xffffff80
jne 0x801e200
cmp byte [r14 + rdx], 2
jne 0x801e200
cmp rsi, rdi
je 0x801e4fd
xor esi, esi
cmp rax, rdi
je 0x801e264
mov rdx, rsi
mov r8, rsi
add rax, 4
shr r8, 2
shl rdx, 6
add rdx, r8
mov r8d, dword [rax - 4]
sub r8d, 0x61c88647
add rdx, r8
xor rsi, rdx
cmp rdi, rax
jne 0x801e239
mov rax, rsi
mov rdi, r15
mov qword [rsp + 0x20], r10
movabs rdx, 0x200000005
mul rdx
mov rax, rsi
mov qword [rsp + 0x18], rcx
sub rax, rdx
shr rax, 1
add rax, rdx
shr rax, 0x1e
mov rdx, rax
shl rdx, 0x1f
sub rdx, rax
mov rax, rsi
mov esi, 0x1b
sub rax, rdx
mov edx, 0x18
or eax, 0x40000000
neg eax
movsxd r12, eax
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
mov rdx, rax
lea eax, [r12 - 1]
mov dword [rdx + 0x10], eax
mov rax, qword [r15 + 0x88]
movsxd rdx, dword [rax]
test edx, 0xffffff80
je 0x801e48e
nop dword [rax]
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801e2e8
cmp byte [r14 + rdx], 1
jne 0x801e2e8
jmp 0x801ccee
mov qword [r15 + 0x88], rdx
jmp 0x801e326
nop dword [rax]
sub rdx, 4
movsxd r12, dword [rdx]
mov qword [r15 + 0x88], rdx
test r12d, 0xffffff80
jne 0x801e318
cmp byte [r14 + r12], 1
jne 0x801e318
jmp 0x801cdbe
lea rdx, [rsp + 0x40]
mov rdi, r12
mov qword [rsp + 0x28], r10
mov qword [rsp + 0x20], rcx
call _ZNSt6vectorIN5boost13re_detail_50020named_subexpressions4nameESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
mov rax, qword [r12 + 8]
mov r10, qword [rsp + 0x28]
mov rcx, qword [rsp + 0x20]
jmp 0x801d513
mov dword [rbx + 0x10], 0xfffffffe
mov dword [rsp + 0x18], 0xfffffffe
jmp 0x801dff7
mov esi, 0x40000000
jmp 0x801d4ee
mov rdi, r12
mov edx, 0xa
mov qword [rsp + 0x20], r10
mov qword [rsp + 0x18], rcx
call .text
mov edx, 0x18
mov esi, 0x1b
mov rdi, r15
mov r12, rax
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
test r12, r12
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
mov rdx, rax
jg 0x801e83d
xor eax, eax
jmp 0x801e2cc
lea r11, [0x0801e3d4]
mov edi, 0x44
jmp 0x801e3dd
mov edx, dword [rax]
cmp edi, edx
jne 0x801e403
movsx edi, byte [r11 + 1]
add rax, 4
add r11, 1
mov qword [r15 + 0x88], rax
test dil, dil
je 0x801e538
cmp rsi, rax
jne 0x801e3db
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801e403
cmp byte [r14 + rdx], 1
jne 0x801e403
jmp 0x801dafd
mov edx, 0x18
mov esi, 0x1b
mov rdi, r15
mov qword [rsp + 0x20], r10
mov qword [rsp + 0x18], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov r8, qword [rsp + 0x28]
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
mov dword [rax + 0x10], r8d
mov rax, qword [r15 + 0x88]
movsxd rdx, dword [rax]
test edx, 0xffffff80
je 0x801e5a7
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801e46b
cmp byte [r14 + rdx], 1
jne 0x801e46b
jmp 0x801dafd
cmp byte [r14 + rdx], 2
jne 0x801e2e8
lea rdx, [rax + 4]
mov qword [r15 + 0x88], rdx
cmp rdx, qword [r15 + 0x80]
je 0x801e6f2
mov byte [rsp + 0x37], 1
mov qword [rsp + 0x28], 0
mov dword [rsp + 0x18], 0xfffffffc
jmp 0x801d140
lea rdx, [rsp + 0x40]
lea rdi, [rax + 0x178]
mov qword [rsp + 0x28], r10
mov qword [rsp + 0x20], rcx
call _ZNSt6vectorISt4pairImmESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
mov r10, qword [rsp + 0x28]
mov rcx, qword [rsp + 0x20]
mov rdx, qword [r15 + 0x88]
jmp 0x801d427
sub rdi, 4
mov qword [r15 + 0x88], rdi
jmp 0x801e51b
nop word [rax + rax]
sub rdi, 4
mov qword [r15 + 0x88], rdi
movsxd rax, dword [rdi]
test eax, 0xffffff80
jne 0x801e510
cmp byte [r14 + rax], 1
jne 0x801e510
sub rdi, qword [r15 + 0x78]
mov rdx, rdi
jmp 0x801cdc2
cmp rsi, rax
je 0x801e403
mov edx, 0x18
mov esi, 0x1b
mov rdi, r15
mov qword [rsp + 0x20], r10
mov qword [rsp + 0x18], rcx
call _ZN5boost13re_detail_50019basic_regex_creatorIwNS_14c_regex_traitsIwEEE12append_stateENS0_19syntax_element_typeEm
mov rcx, qword [rsp + 0x18]
mov r10, qword [rsp + 0x20]
mov dword [rax + 0x10], 0x270f
mov rax, qword [r15 + 0x88]
movsxd rdx, dword [rax]
test edx, 0xffffff80
je 0x801e7e8
movsxd rdx, dword [rax - 4]
sub rax, 4
mov qword [r15 + 0x88], rax
test edx, 0xffffff80
jne 0x801e584
cmp byte [r14 + rdx], 1
jne 0x801e584
jmp 0x801dafd
cmp byte [r14 + rdx], 2
jne 0x801e46b
lea rdx, [rax + 4]
mov qword [r15 + 0x88], rdx
cmp rdx, qword [r15 + 0x80]
jne 0x801e4b1
mov qword [r15 + 0x88], rax
jmp 0x801e5de
sub rax, 4
mov qword [r15 + 0x88], rax
mov rax, qword [r15 + 0x88]
movsxd rdx, dword [rax]
test edx, 0xffffff80
jne 0x801e5d3
cmp byte [r14 + rdx], 1
jne 0x801e5d3
jmp 0x801dafd
cmp byte [r14 + rdx], 8
jne 0x801e1a1
lea rdi, [rax + 4]
mov qword [r15 + 0x88], rdi
cmp rsi, rdi
je 0x801e75e
movsxd rdx, dword [rax + 4]
test edx, 0xffffff80
je 0x801e722
mov qword [r15 + 0x88], rax
jmp 0x801e643
nop dword [rax]
sub rax, 4
mov qword [r15 + 0x88], rax
movsxd rdx, dword [rax]
test edx, 0xffffff80
jne 0x801e638
cmp byte [r14 + rdx], 1
jne 0x801e638
jmp 0x801dafd
cmp byte [r14 + rdi], 2
jne 0x801dad6
add rax, 8
cmp r11, rax
je 0x801e696
mov qword [r15 + 0x88], rax
mov qword [rsp + 0x28], 0
mov dword [rsp + 0x18], 0xfffffffc
jmp 0x801d140
sub rsi, 4
mov qword [r15 + 0x88], rsi
movsxd rax, dword [rsi]
test eax, 0xffffff80
jne 0x801e68b
cmp byte [r14 + rax], 1
jne 0x801e68b
sub rsi, qword [r15 + 0x78]
mov rdi, r15
mov rdx, rsi
mov esi, 0x14
sar rdx, 2
call _ZN5boost13re_detail_50018basic_regex_parserIwNS_14c_regex_traitsIwEEE4failENS_15regex_constants10error_typeEl
jmp 0x801cdd6
mov qword [r15 + 0x88], rax
jmp 0x801e6db
nop dword [rax]
sub rax, 4
mov qword [r15 + 0x88], rax
movsxd rdx, dword [rax]
test edx, 0xffffff80
jne 0x801e6d0
cmp byte [r14 + rdx], 1
jne 0x801e6d0
jmp 0x801ccee
mov qword [r15 + 0x88], rax
jmp 0x801e70b
nop dword [rax + rax]
sub rax, 4
mov qword [r15 + 0x88], rax
movsxd rdx, dword [rax]
test edx, 0xffffff80
jne 0x801e700
cmp byte [r14 + rdx], 1
jne 0x801e700
jmp 0x801ccee
movzx edx, byte [r14 + rdx]
cmp dl, 0x14
je 0x801e792
and edx, 0xffffffef
cmp dl, 0x25
jne 0x801e62b
sub rax, 4
mov byte [var_37h], 1
mov qword [r15 + 0x88], rax
mov qword [var_28h], 0
mov dword [var_18h], 0xfffffffc
jmp 0x801d140
mov qword [r15 + 0x88], rax
jmp 0x801e77b
nop word [rax + rax]
sub rax, 4
mov qword [r15 + 0x88], rax
movsxd rdx, dword [rax]
test edx, 0xffffff80
jne 0x801e770
cmp byte [r14 + rdx], 1
jne 0x801e770
jmp 0x801dafd
lea rdx, [rax + 8]
mov qword [r15 + 0x88], rdx
cmp rsi, rdx
je 0x801e869
movsxd rdx, dword [rax + 8]
test edx, 0xffffff80
je 0x801e853
mov qword [r15 + 0x88], rdi
jmp 0x801e7ca
sub rax, 4
mov qword [r15 + 0x88], rax
mov rax, qword [r15 + 0x88]
movsxd rdx, dword [rax]
test edx, 0xffffff80
jne 0x801e7bf
cmp byte [r14 + rdx], 1
jne 0x801e7bf
jmp 0x801dafd
cmp byte [r14 + rdx], 2
jne 0x801e584
lea rdx, [rax + 4]
mov qword [r15 + 0x88], rdx
cmp rdx, qword [r15 + 0x80]
jne 0x801e4b1
mov qword [r15 + 0x88], rax
jmp 0x801e81f
sub rax, 4
mov qword [r15 + 0x88], rax
mov rax, qword [r15 + 0x88]
movsxd rdx, dword [rax]
test edx, 0xffffff80
jne 0x801e814
cmp byte [r14 + rdx], 1
jne 0x801e814
jmp 0x801dafd
neg r12
jmp 0x801e2c7
lea rdi, [0x0801e84c]
xor eax, eax
call _ZSt24__throw_out_of_range_fmtPKcz
movzx edx, byte [r14 + rdx]
and edx, 0xffffffef
cmp dl, 0x25
jne 0x801e7b6
jmp 0x801e738
