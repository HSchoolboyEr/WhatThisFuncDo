push r15
push r14
xor r14d, r14d
push r13
push r12
mov r12, rdi
push rbp
push rbx
sub rsp, 0x18
mov r13, qword [rdi]
add qword [rdi + 0x88], 1
mov eax, dword [r13 + 0x28]
test ah, 0x20
jne 0x800d643
test ah, 0x10
setne r14b
add r14d, 1
mov rcx, qword [r13 + 0x160]
mov rbp, qword [r13 + 0x168]
mov rax, qword [r12 + 0x10]
sub rbp, rcx
add rbp, 7
and rbp, 0xfffffffffffffff8
lea rdx, [rcx + rbp]
mov qword [r13 + 0x168], rdx
test rax, rax
je 0x800d681
mov rdi, rax
mov rsi, rbp
sub rdi, rcx
sub rsi, rdi
mov qword [rax + 8], rsi
mov rax, qword [r13 + 0x158]
mov rsi, rax
sub rsi, rdx
cmp rsi, 0x17
jbe 0x800d6d0
lea rax, [rdx + 0x18]
mov qword [r13 + 0x168], rax
mov eax, 1
mov qword [r12 + 0x10], rdx
mov qword [rdx + 8], 0
mov dword [rdx], 5
mov byte [rdx + 0x10], r14b
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
sub rax, rcx
test rcx, rcx
lea rdx, [arg_18h]
mov ecx, 0x400
cmove rax, rcx
cmp rdx, rax
jbe 0x800d6f8
nop dword [rax + rax]
add rax, rax
cmp rdx, rax
ja 0x800d6f0
lea rbx, [rax + 7]
and rbx, 0xfffffffffffffff8
mov rdi, rbx
call _Znwm
mov r8, qword [r13 + 0x160]
mov r15, rax
test r8, r8
je 0x800d72f
mov rsi, r8
mov rdx, rbp
mov rdi, rax
mov qword [var_8h], r8
call memcpy
mov r8, qword [var_8h]
mov rdi, r8
add rbx, r15
call _ZdlPv
mov qword [r13 + 0x160], r15
lea rdx, [r15 + rbp]
mov qword [r13 + 0x158], rbx
jmp 0x800d694
