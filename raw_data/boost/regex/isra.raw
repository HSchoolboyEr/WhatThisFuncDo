movabs rax, 0x7fffffffffffffff
push r15
push r14
push r13
movsxd r13, edx
cqo
idiv r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov rbx, rdi
mov edx, r13d
lea rbp, [var_18h]
lea r14, [var_10h]
mov qword [rsp], rsi
mov rsi, r14
mov qword [var_8h], rax
mov rax, qword [rdi]
mov rdi, rbp
mov eax, dword [rax]
mov dword [var_1ch], 0
mov dword [var_18h], eax
call wcstol
cmp qword [var_10h], rbp
je 0x8000b20
mov esi, eax
mov rdx, qword [rbx]
mov r15, r13
shr esi, 0x1f
cmp r13d, eax
setle al
or al, sil
jne 0x8000b20
cmp rdx, qword [rsp]
je 0x8000b20
xor r12d, r12d
nop
mov eax, dword [rdx]
mov rsi, r14
mov edx, r15d
mov rdi, rbp
mov dword [var_1ch], 0
mov dword [var_18h], eax
call wcstol
cmp qword [var_10h], rbp
je 0x8000b0e
movsxd rdx, eax
test rdx, rdx
js 0x8000b0e
cmp r15d, eax
jle 0x8000b0e
imul r12, r13
mov rax, qword [rbx]
add r12, rdx
lea rdx, [rax + 4]
mov qword [rbx], rdx
cmp qword [var_8h], r12
jl 0x8000b20
cmp qword [rsp], rdx
jne 0x8000ac0
add rsp, 0x28
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov r12, 0xffffffffffffffff
jmp 0x8000b0e
