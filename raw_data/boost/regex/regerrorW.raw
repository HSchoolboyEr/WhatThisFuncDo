push r14
push r13
push r12
push rbp
mov rbp, rdx
push rbx
mov rbx, rcx
sub rsp, 0x40
test edi, 0x100
je 0x80011a0
and edi, 0xfffffeff
xor r12d, r12d
cmp edi, 0x15
ja 0x800118b
movsxd rdi, edi
lea rax, [0x08001172]
mov r13, qword [rax + rdi*8]
mov rdi, r13
call wcslen
lea r12, [rax + 1]
cmp rbx, r12
jae 0x80013f0
add rsp, 0x40
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
cmp edi, 0xff
je 0x8001400
cmp edi, 0x15
jg 0x80013d0
lea r13, [var_10h]
movsxd rdi, edi
lea rax, [0x080011c4]
add byte [rax], al
add byte [rax], al
mov qword [var_8h], 0
mov qword [rsp], r13
mov r12, qword [rax + rdi*8]
mov byte [var_10h], 0
test rsi, rsi
je 0x80011eb
cmp dword [rsi], 0x6fd7
je 0x80014d0
mov rdi, r12
call strlen
mov rdi, rsp
mov rcx, r12
xor edx, edx
mov r8, rax
xor esi, esi
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
mov rax, qword [var_8h]
mov rdi, qword [rsp]
lea r12, [rax + 1]
cmp rbx, rax
jbe 0x80013b0
test r12, r12
jle 0x80013b0
lea rdx, [rbp + r12*4]
cmp rdi, rdx
lea rdx, [rdi + r12]
setae cl
cmp rbp, rdx
setae dl
or cl, dl
je 0x8001580
cmp rax, 0xe
jbe 0x8001580
mov rcx, r12
mov rdx, rdi
pxor xmm5, xmm5
mov rax, rbp
and rcx, 0xfffffffffffffff0
pxor xmm3, xmm3
add rcx, rdi
nop dword [rax + rax]
movdqu xmm0, xmmword [rdx]
movdqa xmm2, xmm5
add rdx, 0x10
add rax, 0x40
pcmpgtb xmm2, xmm0
movdqa xmm1, xmm0
punpcklbw xmm1, xmm2
punpckhbw xmm0, xmm2
movdqa xmm2, xmm3
pcmpgtw xmm2, xmm1
movdqa xmm4, xmm1
punpckhwd xmm1, xmm2
punpcklwd xmm4, xmm2
movdqa xmm2, xmm0
movups xmmword [rax - 0x30], xmm1
movdqa xmm1, xmm3
pcmpgtw xmm1, xmm0
movups xmmword [rax - 0x40], xmm4
punpcklwd xmm2, xmm1
punpckhwd xmm0, xmm1
movups xmmword [rax - 0x20], xmm2
movups xmmword [rax - 0x10], xmm0
cmp rdx, rcx
jne 0x8001268
mov rsi, r12
mov rcx, r12
and rsi, 0xfffffffffffffff0
and ecx, 0xf
lea rdx, [rdi + rsi]
lea rax, [rbp + rsi*4]
cmp rsi, r12
je 0x80013b0
movsx esi, byte [rdx]
mov dword [rax], esi
cmp rcx, 1
je 0x80013b0
movsx esi, byte [rdx + 1]
mov dword [rax + 4], esi
cmp rcx, 2
je 0x80013b0
movsx esi, byte [rdx + 2]
mov dword [rax + 8], esi
cmp rcx, 3
je 0x80013b0
movsx esi, byte [rdx + 3]
mov dword [rax + 0xc], esi
cmp rcx, 4
je 0x80013b0
movsx esi, byte [rdx + 4]
mov dword [rax + 0x10], esi
cmp rcx, 5
je 0x80013b0
movsx esi, byte [rdx + 5]
mov dword [rax + 0x14], esi
cmp rcx, 6
je 0x80013b0
movsx esi, byte [rdx + 6]
mov dword [rax + 0x18], esi
cmp rcx, 7
je 0x80013b0
movsx esi, byte [rdx + 7]
mov dword [rax + 0x1c], esi
cmp rcx, 8
je 0x80013b0
movsx esi, byte [rdx + 8]
mov dword [rax + 0x20], esi
cmp rcx, 9
je 0x80013b0
movsx esi, byte [rdx + 9]
mov dword [rax + 0x24], esi
cmp rcx, 0xa
je 0x80013b0
movsx esi, byte [rdx + 0xa]
mov dword [rax + 0x28], esi
cmp rcx, 0xb
je 0x80013b0
movsx esi, byte [rdx + 0xb]
mov dword [rax + 0x2c], esi
cmp rcx, 0xc
je 0x80013b0
movsx esi, byte [rdx + 0xc]
mov dword [rax + 0x30], esi
cmp rcx, 0xd
je 0x80013b0
movsx esi, byte [rdx + 0xd]
mov dword [rax + 0x34], esi
cmp rcx, 0xe
je 0x80013b0
movsx edx, byte [rdx + 0xe]
mov dword [rax + 0x38], edx
nop
cmp rdi, r13
je 0x800118b
mov rax, qword [var_10h]
lea rsi, [rax + 1]
call _ZdlPvm
jmp 0x800118b
nop dword [rax]
xor r12d, r12d
test rcx, rcx
je 0x800118b
mov dword [rdx], 0
jmp 0x800118b
nop word [rax + rax]
mov rsi, r13
mov rdi, rbp
call wcscpy
jmp 0x800118b
test rsi, rsi
je 0x80014c0
mov r13, qword [rsi + 0x10]
xor r12d, r12d
lea r14, [0x08001417]
jmp 0x800142a
nop dword [rax]
add r12, 1
cmp r12, 0x16
je 0x8001480
mov rsi, qword [r14 + r12*8]
mov rdi, r13
call wcscmp
test eax, eax
jne 0x8001420
lea r13, [var_20h]
mov ecx, r12d
mov esi, 5
mov rdi, r13
lea rdx, [0x08001451]
call swprintf
mov rdi, r13
call wcslen
cmp rax, rbx
jb 0x8001568
add rsp, 0x40
lea r12, [rax + 1]
pop rbx
mov rax, r12
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
lea r12, [var_20h]
xor ecx, ecx
xor eax, eax
mov esi, 5
mov rdi, r12
lea rdx, [0x08001498]
call swprintf
mov rdi, r12
call wcslen
cmp rax, rbx
jae 0x8001467
mov rdi, rbp
mov rsi, r12
call wcscpy
mov rdi, r12
call wcslen
jmp 0x8001467
nop
xor r12d, r12d
jmp 0x800118b
nop dword [rax + rax]
lea rdi, [var_20h]
mov rsi, r12
call method std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0]
mov rax, qword [var_20h]
lea r12, [var_30h]
mov rdi, qword [rsp]
mov rdx, qword [var_28h]
cmp rax, r12
je 0x80015a1
mov rcx, qword [var_30h]
cmp rdi, r13
je 0x80015d0
movq xmm0, rdx
movq xmm6, rcx
mov rsi, qword [var_10h]
mov qword [rsp], rax
punpcklqdq xmm0, xmm6
movups xmmword [var_8h], xmm0
test rdi, rdi
je 0x80015e7
mov qword [var_20h], rdi
mov qword [var_30h], rsi
mov qword [var_28h], 0
mov byte [rdi], 0
mov rdi, qword [var_20h]
cmp rdi, r12
je 0x8001205
mov rax, qword [var_30h]
lea rsi, [rax + 1]
call _ZdlPvm
jmp 0x8001205
nop dword [rax + rax]
mov rdi, rbp
mov rsi, r13
call wcscpy
mov rdi, r13
call wcslen
jmp 0x8001467
xor edx, edx
nop word [rax + rax]
movsx ecx, byte [rdi + rdx]
mov dword [rbp + rdx*4], ecx
mov rcx, rdx
add rdx, 1
cmp rcx, rax
jne 0x8001588
jmp 0x80013b0
test rdx, rdx
je 0x80015bd
cmp rdx, 1
je 0x80015f9
mov rsi, r12
call memcpy
mov rdx, qword [var_28h]
mov rdi, qword [rsp]
mov qword [var_8h], rdx
mov byte [rdi + rdx], 0
mov rdi, qword [var_20h]
jmp 0x8001536
movq xmm0, rdx
movq xmm7, rcx
mov qword [rsp], rax
punpcklqdq xmm0, xmm7
movups xmmword [var_8h], xmm0
mov qword [var_20h], r12
lea r12, [var_30h]
mov rdi, r12
jmp 0x8001536
movzx eax, byte [var_30h]
mov byte [rdi], al
mov rdx, qword [var_28h]
mov rdi, qword [rsp]
jmp 0x80015bd
