mov rax, qword [rdi + 0xd8]
test sil, sil
jne 0x8003ed0
push rbp
push rbx
mov r10, qword [rax + 0x10]
mov r9, qword [rax + 8]
sub r9, qword [r10 + 0x120]
test byte [rdi + 0x61], 0x20
jne 0x8003ec0
mov rbx, qword [rax + 0x18]
mov r11, qword [rdi + 0x68]
lea rbp, [r10 + 0x18]
mov rdx, r9
lea rcx, [rbx - 4]
sub rdx, 1
mov r8, r11
mov qword [rdi + 0x28], rcx
mov rbx, rcx
sub r8, rdx
add r8, r9
mov qword [rdi + 0x68], r8
movsxd r8, dword [rcx]
test rdx, rdx
je 0x8003ee0
cmp r8d, 0xff
jbe 0x8003f08
add rdx, qword [r10 + 0x120]
mov qword [rax + 0x18], rbx
mov qword [rax + 8], rdx
mov rax, qword [r10 + 0x10]
mov qword [rdi + 0x58], rax
mov eax, esi
pop rbx
pop rbp
ret
nop
mov rbx, qword [rdi + 0x20]
cmp qword [rdi + 0x28], rbx
jne 0x8003e67
mov byte [rdi + 0x79], 1
jmp 0x8003e67
add rax, 0x20
mov qword [rdi + 0xd8], rax
mov eax, esi
ret
nop
add rax, 0x20
mov qword [rdi + 0xd8], rax
cmp r8d, 0xff
ja 0x8003eb2
mov eax, 1
test byte [r10 + r8 + 0x18], 2
jne 0x8003eb2
jmp 0x8003ebc
nop dword [rax + rax]
sub rcx, 4
test byte [rbp + r8], 2
je 0x8003e7a
jmp 0x8003ea3
