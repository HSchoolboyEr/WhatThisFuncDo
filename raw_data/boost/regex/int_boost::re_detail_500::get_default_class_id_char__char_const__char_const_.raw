push r12
mov r9, rsi
mov r10, rdi
mov r12, rsi
push rbp
lea rbp, [0x0800c643]
add byte [rax], al
add byte [rax], al
sub r9, rdi
mov r8d, 0x15
push rbx
mov rbx, rbp
mov rdi, r8
sar rdi, 1
mov rsi, rdi
shl rsi, 4
add rsi, rbx
mov rcx, qword [rsi + 8]
mov rax, qword [rsi]
mov r11, rcx
lea rdx, [rax + r9]
sub r11, rax
cmp r11, r9
cmovg rcx, rdx
mov rdx, r10
cmp rax, rcx
jne 0x800c697
jmp 0x800c6b8
nop word [rax + rax]
jg 0x800c6bd
add rax, 1
add rdx, 1
cmp rcx, rax
je 0x800c6b8
movzx r11d, byte [rdx]
cmp byte [rax], r11b
jge 0x800c688
sub r8, rdi
lea rbx, [rsi + 0x10]
lea rdi, [r8 - 1]
test rdi, rdi
jle 0x800c6c2
mov r8, rdi
jmp 0x800c650
nop dword [rax]
cmp r12, rdx
jne 0x800c6a0
test rdi, rdi
jne 0x800c6b0
lea rax, [0x0800c6c9]
cmp rbx, rax
je 0x800c709
mov rsi, qword [rbx]
mov rax, qword [rbx + 8]
mov r12d, 0xffffffff
sub rax, rsi
cmp r9, rax
jne 0x800c701
test r9, r9
je 0x800c6f7
mov rdx, r9
mov rdi, r10
call memcmp
test eax, eax
jne 0x800c701
sub rbx, rbp
sar rbx, 4
mov r12d, ebx
mov eax, r12d
pop rbx
pop rbp
pop r12
ret
mov r12d, 0xffffffff
jmp 0x800c701
