push r14
push r13
push r12
push rbp
push rbx
mov rdx, qword [rdi + 0x58]
mov rbx, rdi
movsxd rbp, dword [rdx + 0x10]
movzx eax, byte [rdx + 0x14]
mov byte [rdi + 0x78], al
lea eax, [arg_5h]
cmp eax, 5
ja 0x8022c11
lea rcx, [0x080229ed]
movsxd rax, dword [rcx + rax*4]
add rax, rcx
jmp rax
nop word cs:[rax + rax]
mov rsi, qword [rdi + 0x10]
cmp byte [rsi + 0x4c], 0
mov rax, qword [rsi + 8]
mov rcx, qword [rsi]
je 0x8022a1a
cmp rcx, rax
je _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEE17raise_logic_errorEv
sub rax, rcx
add rsi, 0x20
lea rbp, [rcx + 0x30]
sar rax, 3
imul eax, eax, 0xaaaaaaab
cmp eax, 2
mov rax, qword [rbx + 0xd8]
cmovle rbp, rsi
sub rax, 0x28
cmp rax, qword [rbx + 0xd0]
jb _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
movdqu xmm0, xmmword [rbp]
movzx esi, byte [rbp + 0x10]
mov dword [rax], 1
mov dword [rax + 8], 0
movups xmmword [rax + 0x10], xmm0
mov byte [rax + 0x20], sil
mov qword [rbx + 0xd8], rax
mov rax, qword [rbx + 0x28]
cmp qword [rcx + 0x18], rax
mov qword [rcx + 0x30], rax
mov qword [rcx + 0x20], rax
setne byte [rcx + 0x28]
mov rax, qword [rdx + 8]
mov qword [rbx + 0x58], rax
mov eax, 1
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
mov rax, qword [rdx + 8]
cmp ebp, 0xffffffff
sete bpl
mov rdx, qword [rax + 0x10]
mov rax, qword [rax + 8]
mov r12, qword [rdx + 8]
mov qword [rdi + 0x58], rax
mov rax, qword [rdi + 0xd8]
sub rax, 0x20
cmp rax, qword [rdi + 0xd0]
jb _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rdx, qword [rbx + 0x28]
mov dword [rax], 3
mov qword [rax + 8], r12
mov qword [rax + 0x10], rdx
mov byte [rax + 0x18], bpl
mov qword [rbx + 0xd8], rax
pop rbx
mov eax, 1
pop rbp
pop r12
pop r13
pop r14
ret
nop
mov rbp, qword [rdx + 8]
mov rax, qword [rbp + 8]
cmp dword [rax], 0x1b
mov qword [rdi + 0x58], rax
je _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE20match_assert_backrefEv
mov r12d, dword [rax + 0x10]
mov rax, qword [rax + 8]
mov r13, qword [rdi + 0x28]
mov rdx, qword [rax + 0x10]
mov rax, qword [rax + 8]
mov r14, qword [rdx + 8]
mov qword [rdi + 0x58], rax
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE16match_all_statesEv
mov edx, eax
mov qword [rbx + 0x28], r13
xor edx, 1
cmp r12d, 0xfffffffe
cmove eax, edx
test al, al
je 0x8022cbd
mov qword [rbx + 0x58], r14
jmp 0x8022a94
nop word [rax + rax]
mov rax, qword [rdx + 8]
movzx ebp, byte [rdi + 0x7b]
mov byte [rdi + 0x7b], 1
mov rdx, qword [rax + 0x10]
mov rax, qword [rax + 8]
mov r12, qword [rdx + 8]
mov qword [rdi + 0x58], rax
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE16match_all_statesEv
test al, al
jne 0x8022c00
cmp byte [rbx + 0x7b], 0
jne 0x8022c00
mov rax, qword [rbx + 0xd8]
lea rbp, [0x08022b99]
mov eax, dword [rax]
nop dword [rax + rax]
test eax, eax
je 0x8022d10
xor edx, edx
mov byte [rbx + 0xe6], 0
xor esi, esi
mov word [rbx + 0xe4], dx
nop word [rax + rax]
shl rax, 4
add rax, rbp
mov rdi, qword [rax + 8]
mov rdx, qword [rax]
add rdi, rbx
test dl, 1
je 0x8022bde
mov rax, qword [rdi]
mov rdx, qword [rax + rdx - 1]
call rdx
mov r8d, eax
mov rax, qword [rbx + 0xd8]
mov eax, dword [rax]
test r8b, r8b
je 0x8022ba0
movzx esi, byte [rbx + 0xe4]
jmp 0x8022bc0
nop word [rax + rax]
mov qword [rbx + 0x58], r12
mov byte [rbx + 0x7b], bpl
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
test byte [rdi + 0x62], 4
jne 0x8022a87
mov rcx, qword [rdi + 0x10]
cmp byte [rcx + 0x4c], 0
mov rax, qword [rcx + 8]
mov rdi, qword [rcx]
je 0x8022c40
cmp rax, rdi
jne 0x8022c40
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEE17raise_logic_errorEv
nop word cs:[rax + rax]
sub rax, rdi
lea esi, [arg_2h]
sar rax, 3
imul eax, eax, 0xaaaaaaab
cmp eax, esi
jle 0x8022c5c
test esi, esi
jns 0x8022d3a
lea r12, [rcx + 0x20]
mov rax, qword [rbx + 0xd8]
sub rax, 0x28
cmp rax, qword [rbx + 0xd0]
jb _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
movzx ecx, byte [r12 + 0x10]
movdqu xmm1, xmmword [r12]
mov dword [rax], 1
mov dword [rax + 8], ebp
mov byte [rax + 0x20], cl
mov rcx, qword [rbx + 0x28]
movups xmmword [rax + 0x10], xmm1
mov qword [rbx + 0xd8], rax
lea rax, [rbp + rbp*2 + 6]
mov qword [rdi + rax*8], rcx
jmp 0x8022a87
nop dword [rax]
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE20match_assert_backrefEv
test al, al
jne 0x8022a94
mov rax, qword [rbp + 0x10]
mov qword [rbx + 0x58], rax
mov eax, 1
jmp 0x8022a94
nop
mov rdi, rbx
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [rbx + 0xd8]
mov rcx, qword [rbx + 0x10]
mov rdx, qword [rbx + 0x58]
mov rcx, qword [rcx]
sub rax, 0x28
jmp 0x8022a4e
nop dword [rax + rax]
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [rbx + 0xd8]
sub rax, 0x20
jmp 0x8022ad3
nop dword [rax]
xor eax, eax
jmp 0x8022a94
mov rdi, rbx
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [rbx + 0xd8]
mov rcx, qword [rbx + 0x10]
mov rdx, qword [rbx + 0x58]
mov rdi, qword [rcx]
sub rax, 0x28
jmp 0x8022c78
movsxd rsi, esi
lea rax, [rsi + rsi*2]
lea r12, [rdi + rax*8]
jmp 0x8022c60
