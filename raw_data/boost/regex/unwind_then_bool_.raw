push r13
xor ecx, ecx
mov r13, rdi
push r12
mov r12d, esi
push rbp
mov ebp, esi
push rbx
lea rbx, [0x08008587]
sub rsp, 8
mov rax, qword [rdi + 0xd8]
mov byte [rdi + 0xe4], sil
movzx esi, sil
mov word [rdi + 0xe5], cx
add rax, 8
mov qword [rdi + 0xd8], rax
jmp 0x80085d2
nop dword [rax]
mov rax, qword [rdi]
call qword [rdx + rax - 1]
test al, al
je 0x80085f0
mov rax, qword [r13 + 0xd8]
movzx esi, byte [r13 + 0xe4]
mov eax, dword [rax]
shl rax, 4
add rax, rbx
mov rdi, qword [rax + 8]
mov rdx, qword [rax]
add rdi, r13
test dl, 1
jne 0x80085b8
call rdx
test al, al
jne 0x80085c3
cmp qword [r13 + 0x58], 0
je 0x800865f
cmp byte [r13 + 0xe6], 0
jne 0x800866c
xor edx, edx
mov byte [r13 + 0xe4], bpl
movzx esi, bpl
mov word [r13 + 0xe5], dx
jmp 0x8008633
nop dword [rax + rax]
mov rax, qword [rdi]
call qword [rdx + rax - 1]
test al, al
je 0x80085f0
movzx esi, byte [r13 + 0xe4]
mov rax, qword [r13 + 0xd8]
mov eax, dword [rax]
shl rax, 4
add rax, rbx
mov rdi, qword [rax + 8]
mov rdx, qword [rax]
add rdi, r13
test dl, 1
jne 0x8008620
call rdx
test al, al
jne 0x800862b
cmp qword [r13 + 0x58], 0
jne 0x80085f7
add rsp, 8
xor eax, eax
pop rbx
pop rbp
pop r12
pop r13
ret
xor eax, eax
mov byte [r13 + 0xe4], r12b
mov word [r13 + 0xe5], ax
jmp 0x8008692
mov rax, qword [rdi]
call qword [rdx + rax - 1]
test al, al
je 0x800865f
movzx ebp, byte [r13 + 0xe4]
mov rax, qword [r13 + 0xd8]
movzx esi, bpl
mov eax, dword [rax]
shl rax, 4
add rax, rbx
mov rdi, qword [rax + 8]
mov rdx, qword [rax]
add rdi, r13
test dl, 1
jne 0x800867f
call rdx
test al, al
jne 0x800868a
jmp 0x800865f
