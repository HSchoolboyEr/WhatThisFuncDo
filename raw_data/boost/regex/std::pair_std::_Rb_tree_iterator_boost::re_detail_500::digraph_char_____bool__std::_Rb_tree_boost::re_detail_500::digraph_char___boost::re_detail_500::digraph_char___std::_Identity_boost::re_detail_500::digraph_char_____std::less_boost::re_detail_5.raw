push r15
push r14
lea r14, [rdi + 8]
push r13
mov r13, rdi
push r12
push rbp
mov rbp, rsi
push rbx
sub rsp, 8
mov r12, qword [rdi + 0x10]
test r12, r12
je 0x801a1a8
movzx ebx, byte [rsi]
jmp 0x801a0ac
nop word [rax + rax]
jne 0x801a09d
movzx eax, byte [r12 + 0x21]
cmp byte [arg_1h], al
jl 0x801a0b6
mov rax, qword [r12 + 0x18]
xor ecx, ecx
test rax, rax
je 0x801a0c5
mov r12, rax
movzx edx, byte [r12 + 0x20]
cmp bl, dl
jge 0x801a090
mov rax, qword [r12 + 0x10]
mov ecx, 1
test rax, rax
jne 0x801a0a9
test cl, cl
jne 0x801a158
mov rcx, r12
cmp bl, dl
jg 0x801a108
cmp bl, dl
jne 0x801a0eb
movzx eax, byte [arg_1h]
cmp byte [r12 + 0x21], al
jge 0x801a0eb
test rcx, rcx
jne 0x801a0ff
xor r12d, r12d
add rsp, 8
mov rax, r12
xor edx, edx
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov r12, rcx
nop word [rax + rax]
mov r15d, 1
cmp r14, r12
jne 0x801a180
mov edi, 0x28
call _Znwm
mov rdx, r12
mov rcx, r14
mov edi, r15d
mov rbx, rax
movzx eax, word [rbp]
mov rsi, rbx
mov word [rbx + 0x20], ax
call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
add byte [rax], al
add byte [rax], al
add qword [r13 + 0x28], 1
add rsp, 8
mov rax, rbx
mov edx, 1
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
cmp qword [r13 + 0x18], r12
je 0x801a108
mov rdi, r12
call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
add byte [rax], al
add byte [rax], al
movzx edx, byte [rax + 0x20]
cmp bl, dl
jg 0x801a108
mov rcx, r12
mov r12, rax
jmp 0x801a0d4
nop dword [rax]
cmp bl, byte [r12 + 0x20]
jl 0x801a113
mov r15d, 0
jne 0x801a113
xor r15d, r15d
movzx eax, byte [r12 + 0x21]
cmp byte [arg_1h], al
setl r15b
jmp 0x801a113
nop dword [rax]
mov r12, r14
cmp r14, qword [rdi + 0x18]
je 0x801a1b6
movzx ebx, byte [rsi]
jmp 0x801a15e
mov r15d, 1
jmp 0x801a113
