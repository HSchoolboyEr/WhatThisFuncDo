push r15
pxor xmm0, xmm0
push r14
push r13
mov r13, rdi
push r12
mov r12, rcx
push rbp
mov rbp, rdx
push rbx
mov rbx, rsi
sub rsp, 0x168
mov r15d, dword [rdi + 0x20]
mov qword [var_50h], 0
mov dword [var_68h], 0
mov eax, r15d
mov byte [var_6ch], 1
movaps xmmword [var_20h], xmm0
movaps xmmword [var_30h], xmm0
movaps xmmword [var_40h], xmm0
movups xmmword [var_58h], xmm0
test r8b, 1
je 0x80037de
or eax, 1
mov r15d, eax
or eax, 2
test r8b, 2
cmovne r15d, eax
and r8d, 4
je 0x8003828
mov rax, qword [r12]
mov rcx, qword [r12 + 8]
xor r14d, r14d
cmp dword [r13], 0x6fd7
lea rax, [rbx + rax*4]
lea rcx, [rbx + rcx*4]
je 0x8003844
add rsp, 0x168
mov eax, r14d
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov rdi, rbx
xor r14d, r14d
call wcslen
cmp dword [r13], 0x6fd7
lea rcx, [rbx + rax*4]
mov rax, rbx
jne 0x800380d
mov r8, qword [r13 + 0x18]
mov rsi, qword [r8]
test rsi, rsi
je 0x800385c
mov r14d, 1
test byte [rsi + 0x2a], 8
jne 0x800380d
mov qword [var_88h], rax
lea rdx, [var_20h]
lea r14, [var_70h]
mov qword [var_98h], rax
mov rdi, r14
mov qword [var_b0h], rax
mov rax, qword [rsi + 0x18]
mov rsi, r8
mov qword [var_18h], rdx
mov qword [var_c0h], rax
lea rax, [var_f8h]
mov qword [var_70h], rdx
mov edx, r15d
mov qword [var_f0h], rax
lea rax, [var_f0h]
mov qword [var_78h], 0
mov qword [var_90h], rcx
mov qword [var_b8h], r8
mov byte [var_ebh], 0
mov qword [var_f8h], rax
mov qword [var_100h], 0
mov dword [var_108h], 0xffffffff
mov qword [var_110h], 0
mov qword [var_118h], 0
mov qword [var_128h], 0
mov qword [var_130h], 0
mov qword [var_138h], 0
mov dword [var_158h], 0
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE14construct_initERKNS_11basic_regexIwS8_EENS_15regex_constants12_match_flagsE
mov rdi, r14
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE8find_impEv
mov r14, qword [var_130h]
mov r15, qword [var_128h]
mov byte [var_fh], al
cmp r14, r15
je 0x80039b5
cmp qword [0x0800396a], 0
jne 0x8003add
mov rdi, qword [r15 + 0x50]
test rdi, rdi
je 0x800398b
mov eax, dword [rdi + 8]
lea edx, [rax - 1]
mov dword [rdi + 8], edx
cmp eax, 1
je 0x8003c10
mov rdi, qword [r15 + 0x10]
test rdi, rdi
je 0x8003ba0
mov rsi, qword [r15 + 0x20]
add r15, 0x70
sub rsi, rdi
call _ZdlPvm
cmp r14, r15
jne 0x8003970
mov r15, qword [var_128h]
test r15, r15
je 0x80039cd
mov rsi, qword [var_138h]
mov rdi, r15
sub rsi, r15
call _ZdlPvm
mov rax, qword [var_100h]
test rax, rax
je 0x80039e5
mov rdx, qword [var_f8h]
mov qword [rdx], rax
mov r14, qword [var_78h]
test r14, r14
je 0x8003a04
mov rdi, r14
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEED1Ev
add byte [rax], al
add byte [rax], al
mov esi, 0x50
mov rdi, r14
call _ZdlPvm
cmp byte [var_fh], 0
mov r14d, 1
je 0x8003b50
test rbp, rbp
je 0x8003b4d
mov rax, qword [var_28h]
mov r10, qword [var_20h]
mov r8, qword [r13 + 8]
movzx edx, byte [var_6ch]
mov r9, rax
sub r9, r10
lea rsi, [r8 + 1]
sar r9, 3
imul r9d, r9d, 0xaaaaaaab
cmp rax, r10
jne 0x8003c70
test dl, dl
jne 0x8003d0f
mov rax, r12
mov ecx, 2
lea r11, [var_40h]
xor edx, edx
jmp 0x8003a9d
nop dword [rax + rax]
mov rdi, qword [r13]
sub rdi, rbx
sar rdi, 2
mov qword [rax], rdi
mov rdi, qword [r13 + 8]
sub rdi, rbx
sar rdi, 2
mov qword [rax + 8], rdi
add rdx, 1
add rax, 0x10
add ecx, 1
cmp rbp, rdx
je 0x8003b18
cmp rsi, rdx
je 0x8003b18
cmp r9d, ecx
jle 0x8003aaf
test ecx, ecx
jns 0x8003bb8
mov r13, r11
cmp byte [r13 + 0x10], 0
jne 0x8003a70
mov qword [rax], 0xffffffffffffffff
mov qword [rax + 8], 0xffffffffffffffff
jmp 0x8003a8d
nop word [rax + rax]
add r15, 0x70
cmp r14, r15
je 0x80039ad
mov rdi, qword [r15 + 0x50]
test rdi, rdi
je 0x8003af1
lock sub dword [rdi + 8], 1
je 0x8003c40
mov rdi, qword [r15 + 0x10]
test rdi, rdi
je 0x8003ad0
mov rsi, qword [r15 + 0x20]
add r15, 0x70
sub rsi, rdi
call _ZdlPvm
cmp r14, r15
jne 0x8003add
jmp 0x80039ad
nop dword [rax]
cmp rsi, rbp
jae 0x8003b4d
sub rbp, 1
shl rsi, 4
xor eax, eax
pcmpeqd xmm0, xmm0
sub rbp, r8
add r12, rsi
nop dword [rax]
mov rdx, rax
add rax, 1
shl rdx, 4
movups xmmword [r12 + rdx], xmm0
cmp rax, rbp
jb 0x8003b38
xor r14d, r14d
mov rbp, qword [var_60h]
test rbp, rbp
je 0x8003b78
mov rbx, qword [0x08003b61]
test rbx, rbx
jne 0x8003c00
mov eax, dword [var_8h]
lea edx, [rax - 1]
mov dword [var_8h], edx
cmp eax, 1
je 0x8003bd0
mov rdi, qword [var_20h]
mov rsi, qword [var_30h]
sub rsi, rdi
test rdi, rdi
je 0x800380d
call _ZdlPvm
jmp 0x800380d
nop dword [rax + rax]
add r15, 0x70
cmp r14, r15
jne 0x8003970
jmp 0x80039ad
nop word [rax + rax]
movsxd rdi, ecx
lea rdi, [rdi + rdi*2]
lea r13, [r10 + rdi*8]
jmp 0x8003ab2
nop dword [rax + rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
test rbx, rbx
jne 0x8003d00
mov eax, dword [var_ch]
lea edx, [rax - 1]
mov dword [var_ch], edx
cmp eax, 1
jne 0x8003b78
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
jmp 0x8003b78
mov eax, 0xffffffff
lock xadd dword [var_8h], eax
jmp 0x8003b73
nop
mov rax, qword [rdi]
mov qword [var_10h], rdi
call qword [rax + 0x10]
mov rdi, qword [var_10h]
mov eax, dword [rdi + 0xc]
lea edx, [rax - 1]
mov dword [rdi + 0xc], edx
cmp eax, 1
jne 0x800398b
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x800398b
nop dword [rax]
mov rax, qword [rdi]
mov qword [var_10h], rdi
call qword [rax + 0x10]
mov rdi, qword [var_10h]
mov eax, 0xffffffff
lock xadd dword [rdi + 0xc], eax
cmp eax, 1
jne 0x8003af1
mov rax, qword [rdi]
call qword [rax + 0x18]
jmp 0x8003af1
nop
test dl, dl
je 0x8003a57
mov rax, r12
mov ecx, 2
lea r11, [var_40h]
xor edx, edx
jmp 0x8003cc1
nop dword [rax]
mov rdi, qword [r13]
sub rdi, rbx
sar rdi, 2
mov qword [rax], rdi
mov rdi, qword [r13 + 8]
sub rdi, rbx
sar rdi, 2
mov qword [rax + 8], rdi
add rdx, 1
add rax, 0x10
add ecx, 1
cmp rbp, rdx
je 0x8003b18
cmp rsi, rdx
je 0x8003b18
cmp r9d, ecx
jle 0x8003cd3
test ecx, ecx
jns 0x8003cf0
mov r13, r11
cmp byte [r13 + 0x10], 0
jne 0x8003c90
mov qword [rax], 0xffffffffffffffff
mov qword [rax + 8], 0xffffffffffffffff
jmp 0x8003cad
nop
movsxd rdi, ecx
lea rdi, [rdi + rdi*2]
lea r13, [r10 + rdi*8]
jmp 0x8003cd6
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [var_ch], eax
jmp 0x8003bec
test rsi, rsi
je 0x8003b1d
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEE17raise_logic_errorEv
mov rbx, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
jmp .text.unlikely
