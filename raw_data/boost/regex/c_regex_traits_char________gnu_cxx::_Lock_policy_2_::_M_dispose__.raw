push r12
push rbp
push rbx
mov rbp, qword [rdi + 0x10]
test rbp, rbp
je 0x80084e0
mov rdi, qword [arg_178h]
test rdi, rdi
je 0x800845c
mov rsi, qword [arg_188h]
sub rsi, rdi
call _ZdlPvm
mov rdi, qword [arg_160h]
call _ZdlPv
mov r12, qword [arg_20h]
test r12, r12
je 0x80084b0
mov rbx, qword [0x08008478]
test rbx, rbx
jne 0x80084e8
mov eax, dword [r12 + 8]
lea edx, [rax - 1]
mov dword [r12 + 8], edx
cmp eax, 1
jne 0x80084b0
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
test rbx, rbx
jne 0x8008510
mov eax, dword [r12 + 0xc]
lea edx, [rax - 1]
mov dword [r12 + 0xc], edx
cmp eax, 1
je 0x8008500
mov rdi, qword [rbp]
test rdi, rdi
je 0x80084c5
mov rsi, qword [arg_10h]
sub rsi, rdi
call _ZdlPvm
pop rbx
mov rdi, rbp
mov esi, 0x198
pop rbp
pop r12
jmp _ZdlPvm
nop word cs:[rax + rax]
pop rbx
pop rbp
pop r12
ret
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [r12 + 8], eax
jmp 0x800848a
nop word cs:[rax + rax]
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x18]
jmp 0x80084b0
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [r12 + 0xc], eax
jmp 0x80084ab
