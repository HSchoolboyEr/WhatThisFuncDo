push r15
push r14
push r13
mov r13, rdi
push r12
push rbp
push rbx
sub rsp, 0xe8
mov r14, qword [rdi + 0xd8]
test sil, sil
jne 0x8019a45
lea rdx, [var_70h]
mov ecx, 0xe
xor eax, eax
mov rbp, qword [r13 + 0xc0]
mov rdi, rdx
rep stosq qword [rdi], rax
mov byte [var_cch], 1
cmp rbp, qword [r13 + 0xc8]
je 0x8019b80
mov eax, dword [var_70h]
lea r12, [var_80h]
lea rdi, [var_10h]
mov rsi, r12
mov dword [rbp], eax
mov rax, qword [var_78h]
mov qword [var_8h], rax
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEEC1ERKS6_
movdqa xmm7, xmmword [var_d0h]
movups xmmword [var_60h], xmm7
add qword [r13 + 0xc0], 0x70
mov rbp, qword [var_c0h]
test rbp, rbp
je 0x8018d80
mov rbx, qword [0x08018d3f]
test rbx, rbx
jne 0x801a760
mov eax, dword [var_8h]
lea edx, [rax - 1]
mov dword [var_8h], edx
cmp eax, 1
jne 0x8018d80
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
test rbx, rbx
jne 0x801a970
mov eax, dword [var_ch]
lea edx, [rax - 1]
mov dword [var_ch], edx
cmp eax, 1
je 0x801a910
nop dword [rax + rax]
mov rdi, qword [var_80h]
test rdi, rdi
je 0x8018d9d
mov rsi, qword [var_90h]
sub rsi, rdi
call _ZdlPvm
mov r15, qword [r13 + 0xc0]
mov eax, dword [r14 + 8]
mov dword [r15 - 0x70], eax
mov rax, qword [r14 + 0x10]
lea rdx, [r15 - 0x60]
mov qword [r15 - 0x68], rax
lea rax, [r14 + 0x68]
cmp rdx, rax
je 0x8019331
mov r12, qword [r14 + 0x70]
mov r10, qword [r14 + 0x68]
mov r9, qword [r15 - 0x60]
mov rsi, qword [r15 - 0x50]
mov rbx, r12
sub rbx, r10
sub rsi, r9
cmp rbx, rsi
ja 0x801a800
mov r8, qword [r15 - 0x58]
lea rdi, [r9 + rbx]
mov qword [var_10h], rdi
mov rax, r8
sub rax, r9
cmp rbx, rax
ja 0x801a1b0
test rbx, rbx
jle 0x8019328
movabs rax, 0xaaaaaaaaaaaaaaab
mov rdx, rbx
sar rdx, 3
imul rdx, rax
mov rax, r9
sub rax, r10
sub rax, 0x18
cmp rax, 0x150
mov qword [var_20h], rdx
seta cl
cmp rbx, 0x180
setg al
test cl, al
lea rax, [r10 + 0x18]
je 0x801a184
mov rcx, r9
sub rcx, rax
add rcx, 8
cmp rcx, 0x160
jbe 0x801a184
mov rax, rdx
mov qword [var_30h], r14
mov rcx, r9
lea rdx, [r10 + 0x10]
sub rax, 1
mov qword [var_38h], r15
mov qword [var_28h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_40h], r9
shl rax, 7
mov qword [var_48h], r10
add rax, r9
mov qword [var_50h], r13
mov qword [var_18h], rax
nop word cs:[rax + rax]
movdqu xmm4, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm5, xmmword [rdx - 0x140]
movdqu xmm6, xmmword [rdx - 0x150]
shufpd xmm7, xmm4, 1
movdqu xmm0, xmmword [rdx - 0x80]
movdqu xmm15, xmmword [rdx - 0x20]
movdqu xmm4, xmmword [rdx - 0x110]
shufpd xmm6, xmm5, 1
movdqu xmm5, xmmword [rdx - 0x120]
movdqu xmm2, xmmword [rdx - 0xe0]
movdqu xmm9, xmmword [rdx - 0x70]
shufpd xmm5, xmm4, 1
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm4, xmmword [rdx - 0xf0]
movdqu xmm1, xmmword [rdx - 0xb0]
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm14, xmmword [rdx - 0x160]
shufpd xmm4, xmm2, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm13, xmmword [rdx - 0x130]
shufpd xmm3, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
movdqu xmm12, xmmword [rdx - 0x100]
shufpd xmm2, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm11, xmmword [rdx - 0xd0]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0x90]
movzx edi, byte [rdx - 0x78]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movups xmmword [rcx - 0xa8], xmm3
movzx r14d, byte [rdx - 0x150]
movzx r13d, byte [rdx - 0x138]
mov byte [rsp], al
movzx r12d, byte [rdx - 0x120]
movzx eax, byte [rdx - 0x30]
movups xmmword [rcx - 0x78], xmm2
movzx ebp, byte [rdx - 0x108]
movzx esi, byte [rdx - 0x180]
mov byte [var_eh], dil
movzx r11d, byte [rdx - 0xd8]
movzx r8d, byte [rdx - 0x60]
mov byte [var_fh], al
movzx r10d, byte [rdx - 0xc0]
movzx edi, byte [rdx - 0x48]
movups xmmword [rcx - 0x90], xmm10
movzx r9d, byte [rdx - 0xa8]
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x60], xmm9
movups xmmword [rcx - 0x48], xmm1
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], sil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [rsp]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x80], bl
movzx ebx, byte [var_eh]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x68], bl
movzx ebx, byte [var_fh]
mov byte [rcx - 0x98], r9b
mov byte [rcx - 0x50], r8b
mov byte [rcx - 0x38], dil
mov byte [rcx - 0x20], bl
mov byte [rcx - 8], al
cmp rcx, qword [var_18h]
jne 0x8018eb0
mov rax, qword [var_28h]
mov r10, qword [var_48h]
mov rdx, qword [var_20h]
mov r9, qword [var_40h]
and rax, 0xfffffffffffffff0
mov r14, qword [var_30h]
mov r15, qword [var_38h]
lea rdi, [rax + rax*2]
sub rdx, rax
mov r13, qword [var_50h]
shl rdi, 3
lea rax, [r10 + rdi]
add rdi, r9
movdqu xmm7, xmmword [rax]
movzx ecx, byte [rax + 0x10]
movups xmmword [rdi], xmm7
mov byte [rdi + 0x10], cl
cmp rdx, 1
je 0x8019328
movdqu xmm6, xmmword [rax + 0x18]
movzx ecx, byte [rax + 0x28]
movups xmmword [rdi + 0x18], xmm6
mov byte [rdi + 0x28], cl
cmp rdx, 2
je 0x8019328
movdqu xmm7, xmmword [rax + 0x30]
movzx ecx, byte [rax + 0x40]
movups xmmword [rdi + 0x30], xmm7
mov byte [rdi + 0x40], cl
cmp rdx, 3
je 0x8019328
movdqu xmm5, xmmword [rax + 0x48]
movzx ecx, byte [rax + 0x58]
movups xmmword [rdi + 0x48], xmm5
mov byte [rdi + 0x58], cl
cmp rdx, 4
je 0x8019328
movdqu xmm6, xmmword [rax + 0x60]
movzx ecx, byte [rax + 0x70]
movups xmmword [rdi + 0x60], xmm6
mov byte [rdi + 0x70], cl
cmp rdx, 5
je 0x8019328
movdqu xmm7, xmmword [rax + 0x78]
movzx ecx, byte [rax + 0x88]
movups xmmword [rdi + 0x78], xmm7
mov byte [rdi + 0x88], cl
cmp rdx, 6
je 0x8019328
movdqu xmm5, xmmword [rax + 0x90]
movzx ecx, byte [rax + 0xa0]
movups xmmword [rdi + 0x90], xmm5
mov byte [rdi + 0xa0], cl
cmp rdx, 7
je 0x8019328
movdqu xmm6, xmmword [rax + 0xa8]
movzx ecx, byte [rax + 0xb8]
movups xmmword [rdi + 0xa8], xmm6
mov byte [rdi + 0xb8], cl
cmp rdx, 8
je 0x8019328
movdqu xmm7, xmmword [rax + 0xc0]
movzx ecx, byte [rax + 0xd0]
movups xmmword [rdi + 0xc0], xmm7
mov byte [rdi + 0xd0], cl
cmp rdx, 9
je 0x8019328
movdqu xmm4, xmmword [rax + 0xd8]
movzx ecx, byte [rax + 0xe8]
movups xmmword [rdi + 0xd8], xmm4
mov byte [rdi + 0xe8], cl
cmp rdx, 0xa
je 0x8019328
movdqu xmm6, xmmword [rax + 0xf0]
movzx ecx, byte [rax + 0x100]
movups xmmword [rdi + 0xf0], xmm6
mov byte [rdi + 0x100], cl
cmp rdx, 0xb
je 0x8019328
movdqu xmm4, xmmword [rax + 0x108]
movzx ecx, byte [rax + 0x118]
movups xmmword [rdi + 0x108], xmm4
mov byte [rdi + 0x118], cl
cmp rdx, 0xc
je 0x8019328
movdqu xmm6, xmmword [rax + 0x120]
movzx ecx, byte [rax + 0x130]
movups xmmword [rdi + 0x120], xmm6
mov byte [rdi + 0x130], cl
cmp rdx, 0xd
je 0x8019328
movdqu xmm4, xmmword [rax + 0x138]
movzx ecx, byte [rax + 0x148]
movups xmmword [rdi + 0x138], xmm4
mov byte [rdi + 0x148], cl
cmp rdx, 0xe
je 0x8019328
movdqu xmm6, xmmword [rax + 0x150]
movzx ecx, byte [rax + 0x160]
movups xmmword [rdi + 0x150], xmm6
mov byte [rdi + 0x160], cl
cmp rdx, 0xf
je 0x8019328
movdqu xmm4, xmmword [rax + 0x168]
movzx eax, byte [rax + 0x178]
mov byte [rdi + 0x178], al
movups xmmword [rdi + 0x168], xmm4
nop dword [rax + rax]
mov rax, qword [var_10h]
mov qword [r15 - 0x58], rax
mov rax, qword [r14 + 0xa0]
mov rbp, qword [r14 + 0xa8]
mov r12, qword [r15 - 0x20]
mov qword [r15 - 0x28], rax
cmp rbp, r12
je 0x80193c4
test rbp, rbp
je 0x8019363
cmp qword [0x08019359], 0
jne 0x801a8f0
add dword [var_8h], 1
test r12, r12
je 0x80193c0
mov rbx, qword [0x0801936f]
test rbx, rbx
jne 0x801a8b0
mov eax, dword [r12 + 8]
lea edx, [rax - 1]
mov dword [r12 + 8], edx
cmp eax, 1
jne 0x80193c0
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
test rbx, rbx
jne 0x801a920
mov eax, dword [r12 + 0xc]
lea edx, [rax - 1]
mov dword [r12 + 0xc], edx
cmp eax, 1
jne 0x80193c0
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x18]
nop dword [rax]
mov qword [r15 - 0x20], rbp
mov eax, dword [r14 + 0xb0]
mov dword [r15 - 0x18], eax
movzx eax, byte [r14 + 0xb4]
mov byte [r15 - 0x14], al
test al, al
jne 0x8019404
movdqu xmm7, xmmword [r14 + 0x80]
movups xmmword [r15 - 0x48], xmm7
mov rax, qword [r14 + 0x90]
mov qword [r15 - 0x38], rax
movzx eax, byte [r14 + 0x98]
mov byte [r15 - 0x30], al
mov rax, qword [r13 + 0xc0]
mov rdx, qword [r13 + 0x28]
mov r15, qword [r13 + 0x10]
mov qword [rax - 8], rdx
lea rax, [r14 + 0x18]
cmp r15, rax
je 0x8019989
mov r12, qword [r14 + 0x20]
mov r10, qword [r14 + 0x18]
mov r9, qword [r15]
mov rsi, qword [r15 + 0x10]
mov rbx, r12
sub rbx, r10
sub rsi, r9
cmp rbx, rsi
ja 0x801a770
mov rsi, qword [r15 + 8]
lea rdi, [r9 + rbx]
mov qword [var_10h], rdi
mov rax, rsi
sub rax, r9
cmp rbx, rax
ja 0x8019ba0
test rbx, rbx
jle 0x8019980
movabs rax, 0xaaaaaaaaaaaaaaab
mov rdx, rbx
sar rdx, 3
imul rdx, rax
mov rax, r9
sub rax, r10
sub rax, 0x18
cmp rax, 0x150
mov qword [var_20h], rdx
seta cl
cmp rbx, 0x180
setg al
test cl, al
lea rax, [r10 + 0x18]
je 0x801a154
mov rcx, r9
sub rcx, rax
add rcx, 8
cmp rcx, 0x160
jbe 0x801a154
mov rax, rdx
mov qword [var_30h], r15
mov rcx, r9
lea rdx, [r10 + 0x10]
sub rax, 1
mov qword [var_38h], r14
mov qword [var_28h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_40h], r9
shl rax, 7
mov qword [var_48h], r10
add rax, r9
mov qword [var_50h], r13
mov qword [var_18h], rax
nop dword [rax]
movdqu xmm6, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm4, xmmword [rdx - 0x140]
movdqu xmm3, xmmword [rdx - 0x110]
shufpd xmm7, xmm6, 1
movdqu xmm1, xmmword [rdx - 0x80]
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm2, xmmword [rdx - 0xe0]
movdqu xmm5, xmmword [rdx - 0x120]
movdqu xmm15, xmmword [rdx - 0x20]
shufpd xmm6, xmm4, 1
movdqu xmm9, xmmword [rdx - 0x70]
movdqu xmm4, xmmword [rdx - 0xf0]
shufpd xmm5, xmm3, 1
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm14, xmmword [rdx - 0x160]
shufpd xmm4, xmm2, 1
movdqu xmm2, xmmword [rdx - 0xb0]
movdqu xmm13, xmmword [rdx - 0x130]
movdqu xmm12, xmmword [rdx - 0x100]
movdqu xmm11, xmmword [rdx - 0xd0]
shufpd xmm3, xmm2, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm2, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0x90]
movzx esi, byte [rdx - 0x78]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movups xmmword [rcx - 0xa8], xmm3
movzx r14d, byte [rdx - 0x150]
movzx r13d, byte [rdx - 0x138]
mov byte [rsp], al
movzx r12d, byte [rdx - 0x120]
movzx eax, byte [rdx - 0x48]
movups xmmword [rcx - 0x78], xmm2
movzx ebp, byte [rdx - 0x108]
movzx edi, byte [rdx - 0x180]
mov byte [var_eh], sil
movzx r11d, byte [rdx - 0xd8]
movzx r8d, byte [rdx - 0x60]
mov byte [var_fh], al
movzx r10d, byte [rdx - 0xc0]
movzx esi, byte [rdx - 0x30]
movups xmmword [rcx - 0x90], xmm10
movzx r9d, byte [rdx - 0xa8]
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x60], xmm9
movups xmmword [rcx - 0x48], xmm1
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], dil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [rsp]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x80], bl
movzx ebx, byte [var_eh]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x68], bl
movzx ebx, byte [var_fh]
mov byte [rcx - 0x98], r9b
mov byte [rcx - 0x50], r8b
mov byte [rcx - 0x38], bl
mov byte [rcx - 0x20], sil
mov byte [rcx - 8], al
cmp qword [var_18h], rcx
jne 0x8019508
mov rax, qword [var_28h]
mov r10, qword [var_48h]
mov rdx, qword [var_20h]
mov r9, qword [var_40h]
and rax, 0xfffffffffffffff0
mov r15, qword [var_30h]
mov r14, qword [var_38h]
lea rdi, [rax + rax*2]
sub rdx, rax
mov r13, qword [var_50h]
shl rdi, 3
lea rax, [r10 + rdi]
add rdi, r9
movdqu xmm6, xmmword [rax]
movzx ecx, byte [rax + 0x10]
movups xmmword [rdi], xmm6
mov byte [rdi + 0x10], cl
cmp rdx, 1
je 0x8019980
movdqu xmm5, xmmword [rax + 0x18]
movzx ecx, byte [rax + 0x28]
movups xmmword [rdi + 0x18], xmm5
mov byte [rdi + 0x28], cl
cmp rdx, 2
je 0x8019980
movdqu xmm6, xmmword [rax + 0x30]
movzx ecx, byte [rax + 0x40]
movups xmmword [rdi + 0x30], xmm6
mov byte [rdi + 0x40], cl
cmp rdx, 3
je 0x8019980
movdqu xmm7, xmmword [rax + 0x48]
movzx ecx, byte [rax + 0x58]
movups xmmword [rdi + 0x48], xmm7
mov byte [rdi + 0x58], cl
cmp rdx, 4
je 0x8019980
movdqu xmm5, xmmword [rax + 0x60]
movzx ecx, byte [rax + 0x70]
movups xmmword [rdi + 0x60], xmm5
mov byte [rdi + 0x70], cl
cmp rdx, 5
je 0x8019980
movdqu xmm6, xmmword [rax + 0x78]
movzx ecx, byte [rax + 0x88]
movups xmmword [rdi + 0x78], xmm6
mov byte [rdi + 0x88], cl
cmp rdx, 6
je 0x8019980
movdqu xmm7, xmmword [rax + 0x90]
movzx ecx, byte [rax + 0xa0]
movups xmmword [rdi + 0x90], xmm7
mov byte [rdi + 0xa0], cl
cmp rdx, 7
je 0x8019980
movdqu xmm5, xmmword [rax + 0xa8]
movzx ecx, byte [rax + 0xb8]
movups xmmword [rdi + 0xa8], xmm5
mov byte [rdi + 0xb8], cl
cmp rdx, 8
je 0x8019980
movdqu xmm7, xmmword [rax + 0xc0]
movzx ecx, byte [rax + 0xd0]
movups xmmword [rdi + 0xc0], xmm7
mov byte [rdi + 0xd0], cl
cmp rdx, 9
je 0x8019980
movdqu xmm7, xmmword [rax + 0xd8]
movzx ecx, byte [rax + 0xe8]
movups xmmword [rdi + 0xd8], xmm7
mov byte [rdi + 0xe8], cl
cmp rdx, 0xa
je 0x8019980
movdqu xmm6, xmmword [rax + 0xf0]
movzx ecx, byte [rax + 0x100]
movups xmmword [rdi + 0xf0], xmm6
mov byte [rdi + 0x100], cl
cmp rdx, 0xb
je 0x8019980
movdqu xmm4, xmmword [rax + 0x108]
movzx ecx, byte [rax + 0x118]
movups xmmword [rdi + 0x108], xmm4
mov byte [rdi + 0x118], cl
cmp rdx, 0xc
je 0x8019980
movdqu xmm6, xmmword [rax + 0x120]
movzx ecx, byte [rax + 0x130]
movups xmmword [rdi + 0x120], xmm6
mov byte [rdi + 0x130], cl
cmp rdx, 0xd
je 0x8019980
movdqu xmm4, xmmword [rax + 0x138]
movzx ecx, byte [rax + 0x148]
movups xmmword [rdi + 0x138], xmm4
mov byte [rdi + 0x148], cl
cmp rdx, 0xe
je 0x8019980
movdqu xmm6, xmmword [rax + 0x150]
movzx ecx, byte [rax + 0x160]
movups xmmword [rdi + 0x150], xmm6
mov byte [rdi + 0x160], cl
cmp rdx, 0xf
je 0x8019980
movdqu xmm4, xmmword [rax + 0x168]
movzx eax, byte [rax + 0x178]
mov byte [rdi + 0x178], al
movups xmmword [rdi + 0x168], xmm4
nop dword [rax + rax]
mov rax, qword [var_10h]
mov qword [r15 + 8], rax
mov rax, qword [r14 + 0x50]
mov rbp, qword [r14 + 0x58]
mov r12, qword [r15 + 0x40]
mov qword [r15 + 0x38], rax
cmp rbp, r12
je 0x8019a14
test rbp, rbp
je 0x80199b5
cmp qword [0x080199ab], 0
jne 0x801a900
add dword [var_8h], 1
test r12, r12
je 0x8019a10
mov rbx, qword [0x080199c1]
test rbx, rbx
jne 0x801a898
mov eax, dword [r12 + 8]
lea edx, [rax - 1]
mov dword [r12 + 8], edx
cmp eax, 1
jne 0x8019a10
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
test rbx, rbx
jne 0x801a938
mov eax, dword [r12 + 0xc]
lea edx, [rax - 1]
mov dword [r12 + 0xc], edx
cmp eax, 1
jne 0x8019a10
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x18]
nop dword [rax + rax]
mov qword [r15 + 0x40], rbp
mov eax, dword [r14 + 0x60]
mov dword [r15 + 0x48], eax
movzx eax, byte [r14 + 0x64]
mov byte [r15 + 0x4c], al
test al, al
jne 0x8019a45
movdqu xmm7, xmmword [r14 + 0x30]
movups xmmword [r15 + 0x18], xmm7
mov rax, qword [r14 + 0x40]
mov qword [r15 + 0x28], rax
movzx eax, byte [r14 + 0x48]
mov byte [r15 + 0x30], al
mov rbp, qword [r14 + 0xa8]
lea r12, [r14 + 0xb8]
test rbp, rbp
je 0x8019a76
mov rbx, qword [0x08019a5f]
test rbx, rbx
jne 0x8019b58
mov eax, dword [var_8h]
lea edx, [rax - 1]
mov dword [var_8h], edx
cmp eax, 1
je 0x8019ae8
mov rdi, qword [r14 + 0x68]
test rdi, rdi
je 0x8019a8b
mov rsi, qword [r14 + 0x78]
sub rsi, rdi
call _ZdlPvm
mov rbp, qword [r14 + 0x58]
test rbp, rbp
je 0x8019ab2
mov rbx, qword [0x08019a9b]
test rbx, rbx
jne 0x8019b70
mov eax, dword [var_8h]
lea edx, [rax - 1]
mov dword [var_8h], edx
cmp eax, 1
je 0x8019b20
mov rdi, qword [r14 + 0x18]
test rdi, rdi
je 0x8019ac7
mov rsi, qword [r14 + 0x28]
sub rsi, rdi
call _ZdlPvm
mov qword [r13 + 0xd8], r12
add rsp, 0xe8
mov eax, 1
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
test rbx, rbx
jne 0x801a8c8
mov eax, dword [var_ch]
lea edx, [rax - 1]
mov dword [var_ch], edx
cmp eax, 1
jne 0x8019a76
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
jmp 0x8019a76
nop dword [rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
test rbx, rbx
jne 0x801a8e0
mov eax, dword [var_ch]
lea edx, [rax - 1]
mov dword [var_ch], edx
cmp eax, 1
jne 0x8019ab2
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
jmp 0x8019ab2
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [var_8h], eax
jmp 0x8019a71
nop word [rax + rax]
mov eax, 0xffffffff
lock xadd dword [var_8h], eax
jmp 0x8019aad
nop
lea rdi, [r13 + 0xb8]
mov rsi, rbp
lea r12, [var_80h]
call _ZNSt6vectorIN5boost13re_detail_50014recursion_infoINS0_13match_resultsIPKwSaINS0_9sub_matchIS5_EEEEEEESaISA_EE17_M_realloc_insertIJSA_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_
jmp 0x8018d2b
nop dword [rax]
lea r8, [r10 + rax]
test rax, rax
jle 0x801a109
movabs rdx, 0xaaaaaaaaaaaaaaab
mov rcx, rax
sar rcx, 3
imul rcx, rdx
mov qword [var_20h], rcx
mov rdx, rcx
mov rcx, r9
sub rcx, r10
sub rcx, 0x18
cmp rcx, 0x150
seta cl
cmp rax, 0x180
setg al
test cl, al
lea rax, [r10 + 0x18]
je 0x801a124
mov rcx, r9
sub rcx, rax
add rcx, 8
cmp rcx, 0x160
jbe 0x801a124
mov rax, qword [var_20h]
mov qword [var_30h], r15
mov rcx, r9
lea rdx, [r10 + 0x10]
mov qword [var_38h], r14
sub rax, 1
mov qword [var_40h], rsi
mov qword [var_28h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_48h], r12
shl rax, 7
mov qword [var_50h], r8
add rax, r9
mov qword [var_58h], r9
mov qword [var_18h], rax
mov qword [var_60h], r10
mov qword [var_68h], r13
nop dword [rax + rax]
movdqu xmm5, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm4, xmmword [rdx - 0x140]
movdqu xmm3, xmmword [rdx - 0x110]
shufpd xmm7, xmm5, 1
movdqu xmm1, xmmword [rdx - 0x80]
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm5, xmmword [rdx - 0x120]
movdqu xmm2, xmmword [rdx - 0xb0]
movdqu xmm15, xmmword [rdx - 0x20]
shufpd xmm6, xmm4, 1
shufpd xmm5, xmm3, 1
movdqu xmm4, xmmword [rdx - 0xf0]
movdqu xmm3, xmmword [rdx - 0xe0]
movdqu xmm14, xmmword [rdx - 0x160]
movdqu xmm9, xmmword [rdx - 0x70]
shufpd xmm4, xmm3, 1
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm13, xmmword [rdx - 0x130]
movdqu xmm12, xmmword [rdx - 0x100]
movdqu xmm11, xmmword [rdx - 0xd0]
shufpd xmm3, xmm2, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm2, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0x60]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movzx r14d, byte [rdx - 0x150]
movups xmmword [rcx - 0xa8], xmm3
mov byte [rsp], al
movzx eax, byte [rdx - 0x48]
movzx r13d, byte [rdx - 0x138]
movzx r12d, byte [rdx - 0x120]
movups xmmword [rcx - 0x90], xmm10
movzx ebp, byte [rdx - 0x108]
movzx esi, byte [rdx - 0x180]
mov byte [var_eh], al
movzx eax, byte [rdx - 0x30]
movzx r11d, byte [rdx - 0xd8]
movups xmmword [rcx - 0x78], xmm2
movzx r10d, byte [rdx - 0xc0]
movzx r9d, byte [rdx - 0xa8]
movups xmmword [rcx - 0x60], xmm9
movzx r8d, byte [rdx - 0x90]
movzx edi, byte [rdx - 0x78]
mov byte [var_fh], al
movups xmmword [rcx - 0x48], xmm1
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], sil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [rsp]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x50], bl
movzx ebx, byte [var_eh]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x38], bl
movzx ebx, byte [var_fh]
mov byte [rcx - 0x98], r9b
mov byte [rcx - 0x80], r8b
mov byte [rcx - 0x68], dil
mov byte [rcx - 0x20], bl
mov byte [rcx - 8], al
cmp rcx, qword [var_18h]
jne 0x8019c60
mov rax, qword [var_28h]
mov r10, qword [var_60h]
mov rdx, qword [var_20h]
mov r9, qword [var_58h]
and rax, 0xfffffffffffffff0
mov r15, qword [var_30h]
mov r14, qword [var_38h]
lea rdi, [rax + rax*2]
sub rdx, rax
mov rsi, qword [var_40h]
mov r12, qword [var_48h]
shl rdi, 3
mov r8, qword [var_50h]
mov r13, qword [var_68h]
lea rax, [r10 + rdi]
add rdi, r9
movdqu xmm7, xmmword [rax]
movzx ecx, byte [rax + 0x10]
movups xmmword [rdi], xmm7
mov byte [rdi + 0x10], cl
cmp rdx, 1
je 0x801a109
movdqu xmm6, xmmword [rax + 0x18]
movzx ecx, byte [rax + 0x28]
movups xmmword [rdi + 0x18], xmm6
mov byte [rdi + 0x28], cl
cmp rdx, 2
je 0x801a109
movdqu xmm7, xmmword [rax + 0x30]
movzx ecx, byte [rax + 0x40]
movups xmmword [rdi + 0x30], xmm7
mov byte [rdi + 0x40], cl
cmp rdx, 3
je 0x801a109
movdqu xmm5, xmmword [rax + 0x48]
movzx ecx, byte [rax + 0x58]
movups xmmword [rdi + 0x48], xmm5
mov byte [rdi + 0x58], cl
cmp rdx, 4
je 0x801a109
movdqu xmm6, xmmword [rax + 0x60]
movzx ecx, byte [rax + 0x70]
movups xmmword [rdi + 0x60], xmm6
mov byte [rdi + 0x70], cl
cmp rdx, 5
je 0x801a109
movdqu xmm7, xmmword [rax + 0x78]
movzx ecx, byte [rax + 0x88]
movups xmmword [rdi + 0x78], xmm7
mov byte [rdi + 0x88], cl
cmp rdx, 6
je 0x801a109
movdqu xmm5, xmmword [rax + 0x90]
movzx ecx, byte [rax + 0xa0]
movups xmmword [rdi + 0x90], xmm5
mov byte [rdi + 0xa0], cl
cmp rdx, 7
je 0x801a109
movdqu xmm6, xmmword [rax + 0xa8]
movzx ecx, byte [rax + 0xb8]
movups xmmword [rdi + 0xa8], xmm6
mov byte [rdi + 0xb8], cl
cmp rdx, 8
je 0x801a109
movdqu xmm6, xmmword [rax + 0xc0]
movzx ecx, byte [rax + 0xd0]
movups xmmword [rdi + 0xc0], xmm6
mov byte [rdi + 0xd0], cl
cmp rdx, 9
je 0x801a109
movdqu xmm4, xmmword [rax + 0xd8]
movzx ecx, byte [rax + 0xe8]
movups xmmword [rdi + 0xd8], xmm4
mov byte [rdi + 0xe8], cl
cmp rdx, 0xa
je 0x801a109
movdqu xmm7, xmmword [rax + 0xf0]
movzx ecx, byte [rax + 0x100]
movups xmmword [rdi + 0xf0], xmm7
mov byte [rdi + 0x100], cl
cmp rdx, 0xb
je 0x801a109
movdqu xmm5, xmmword [rax + 0x108]
movzx ecx, byte [rax + 0x118]
movups xmmword [rdi + 0x108], xmm5
mov byte [rdi + 0x118], cl
cmp rdx, 0xc
je 0x801a109
movdqu xmm7, xmmword [rax + 0x120]
movzx ecx, byte [rax + 0x130]
movups xmmword [rdi + 0x120], xmm7
mov byte [rdi + 0x130], cl
cmp rdx, 0xd
je 0x801a109
movdqu xmm5, xmmword [rax + 0x138]
movzx ecx, byte [rax + 0x148]
movups xmmword [rdi + 0x138], xmm5
mov byte [rdi + 0x148], cl
cmp rdx, 0xe
je 0x801a109
movdqu xmm7, xmmword [rax + 0x150]
movzx ecx, byte [rax + 0x160]
movups xmmword [rdi + 0x150], xmm7
mov byte [rdi + 0x160], cl
cmp rdx, 0xf
je 0x801a109
movdqu xmm5, xmmword [rax + 0x168]
movzx eax, byte [rax + 0x178]
movups xmmword [rdi + 0x168], xmm5
mov byte [rdi + 0x178], al
jmp 0x801a109
nop word [rax + rax]
movdqu xmm1, xmmword [r8]
movzx eax, byte [r8 + 0x10]
add rsi, 0x18
add r8, 0x18
mov byte [rsi - 8], al
movups xmmword [rsi - 0x18], xmm1
cmp r12, r8
jne 0x801a0f0
mov rax, qword [var_10h]
mov qword [r15 + 8], rax
jmp 0x8019989
nop dword [rax]
add rax, 0x18
movdqu xmm6, xmmword [r10]
movzx ecx, byte [r10 + 0x10]
add r9, 0x18
mov r10, rax
movups xmmword [r9 - 0x18], xmm6
mov byte [r9 - 8], cl
sub rdx, 1
jne 0x801a120
jmp 0x801a109
nop word cs:[rax + rax]
add rax, 0x18
movdqu xmm7, xmmword [r10]
movzx ecx, byte [r10 + 0x10]
add r9, 0x18
mov r10, rax
movups xmmword [r9 - 0x18], xmm7
mov byte [r9 - 8], cl
sub rdx, 1
jne 0x801a150
jmp 0x8019980
nop dword [rax]
add rax, 0x18
movdqu xmm7, xmmword [r10]
movzx ecx, byte [r10 + 0x10]
add r9, 0x18
mov r10, rax
movups xmmword [r9 - 0x18], xmm7
mov byte [r9 - 8], cl
sub rdx, 1
jne 0x801a180
jmp 0x8019328
nop dword [rax]
lea rsi, [r10 + rax]
test rax, rax
jle 0x801a719
movabs rdx, 0xaaaaaaaaaaaaaaab
mov rcx, rax
sar rcx, 3
imul rcx, rdx
mov qword [var_20h], rcx
mov rdx, rcx
mov rcx, r9
sub rcx, r10
sub rcx, 0x18
cmp rcx, 0x150
seta cl
cmp rax, 0x180
setg al
test cl, al
lea rax, [r10 + 0x18]
je 0x801a734
mov rcx, r9
sub rcx, rax
add rcx, 8
cmp rcx, 0x160
jbe 0x801a734
mov rax, qword [var_20h]
mov qword [var_30h], r14
mov rcx, r9
lea rdx, [r10 + 0x10]
mov qword [var_38h], r15
sub rax, 1
mov qword [var_40h], r9
mov qword [var_28h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_48h], r12
shl rax, 7
mov qword [var_50h], rsi
add rax, r9
mov qword [var_58h], r8
mov qword [var_18h], rax
mov qword [var_60h], r10
mov qword [var_68h], r13
nop dword [rax + rax]
movdqu xmm6, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm5, xmmword [rdx - 0x140]
movdqu xmm3, xmmword [rdx - 0x110]
shufpd xmm7, xmm6, 1
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm2, xmmword [rdx - 0xe0]
movdqu xmm1, xmmword [rdx - 0xb0]
movdqu xmm4, xmmword [rdx - 0xf0]
shufpd xmm6, xmm5, 1
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm5, xmmword [rdx - 0x120]
shufpd xmm4, xmm2, 1
movdqu xmm15, xmmword [rdx - 0x20]
movdqu xmm2, xmmword [rdx - 0x90]
shufpd xmm5, xmm3, 1
movdqu xmm9, xmmword [rdx - 0x70]
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm14, xmmword [rdx - 0x160]
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm13, xmmword [rdx - 0x130]
shufpd xmm3, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x80]
movdqu xmm12, xmmword [rdx - 0x100]
movdqu xmm11, xmmword [rdx - 0xd0]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm2, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0x60]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movzx r14d, byte [rdx - 0x150]
movups xmmword [rcx - 0xa8], xmm3
mov byte [rsp], al
movzx eax, byte [rdx - 0x48]
movzx r13d, byte [rdx - 0x138]
movzx r12d, byte [rdx - 0x120]
movups xmmword [rcx - 0x90], xmm10
movzx ebp, byte [rdx - 0x108]
movzx esi, byte [rdx - 0x180]
mov byte [var_eh], al
movzx eax, byte [rdx - 0x30]
movzx r11d, byte [rdx - 0xd8]
movups xmmword [rcx - 0x78], xmm2
movzx r10d, byte [rdx - 0xc0]
movzx r9d, byte [rdx - 0xa8]
movups xmmword [rcx - 0x60], xmm9
movzx r8d, byte [rdx - 0x90]
movzx edi, byte [rdx - 0x78]
mov byte [var_fh], al
movups xmmword [rcx - 0x48], xmm1
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], sil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [rsp]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x50], bl
movzx ebx, byte [var_eh]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x38], bl
movzx ebx, byte [var_fh]
mov byte [rcx - 0x98], r9b
mov byte [rcx - 0x80], r8b
mov byte [rcx - 0x68], dil
mov byte [rcx - 0x20], bl
mov byte [rcx - 8], al
cmp rcx, qword [var_18h]
jne 0x801a270
mov rax, qword [var_28h]
mov r10, qword [var_60h]
mov rdx, qword [var_20h]
mov r9, qword [var_40h]
and rax, 0xfffffffffffffff0
mov r14, qword [var_30h]
mov r15, qword [var_38h]
lea rdi, [rax + rax*2]
sub rdx, rax
mov r12, qword [var_48h]
mov rsi, qword [var_50h]
shl rdi, 3
mov r8, qword [var_58h]
mov r13, qword [var_68h]
lea rax, [r10 + rdi]
add rdi, r9
movdqu xmm7, xmmword [rax]
movzx ecx, byte [rax + 0x10]
movups xmmword [rdi], xmm7
mov byte [rdi + 0x10], cl
cmp rdx, 1
je 0x801a719
movdqu xmm7, xmmword [rax + 0x18]
movzx ecx, byte [rax + 0x28]
movups xmmword [rdi + 0x18], xmm7
mov byte [rdi + 0x28], cl
cmp rdx, 2
je 0x801a719
movdqu xmm5, xmmword [rax + 0x30]
movzx ecx, byte [rax + 0x40]
movups xmmword [rdi + 0x30], xmm5
mov byte [rdi + 0x40], cl
cmp rdx, 3
je 0x801a719
movdqu xmm6, xmmword [rax + 0x48]
movzx ecx, byte [rax + 0x58]
movups xmmword [rdi + 0x48], xmm6
mov byte [rdi + 0x58], cl
cmp rdx, 4
je 0x801a719
movdqu xmm7, xmmword [rax + 0x60]
movzx ecx, byte [rax + 0x70]
movups xmmword [rdi + 0x60], xmm7
mov byte [rdi + 0x70], cl
cmp rdx, 5
je 0x801a719
movdqu xmm5, xmmword [rax + 0x78]
movzx ecx, byte [rax + 0x88]
movups xmmword [rdi + 0x78], xmm5
mov byte [rdi + 0x88], cl
cmp rdx, 6
je 0x801a719
movdqu xmm6, xmmword [rax + 0x90]
movzx ecx, byte [rax + 0xa0]
movups xmmword [rdi + 0x90], xmm6
mov byte [rdi + 0xa0], cl
cmp rdx, 7
je 0x801a719
movdqu xmm7, xmmword [rax + 0xa8]
movzx ecx, byte [rax + 0xb8]
movups xmmword [rdi + 0xa8], xmm7
mov byte [rdi + 0xb8], cl
cmp rdx, 8
je 0x801a719
movdqu xmm5, xmmword [rax + 0xc0]
movzx ecx, byte [rax + 0xd0]
movups xmmword [rdi + 0xc0], xmm5
mov byte [rdi + 0xd0], cl
cmp rdx, 9
je 0x801a719
movdqu xmm5, xmmword [rax + 0xd8]
movzx ecx, byte [rax + 0xe8]
movups xmmword [rdi + 0xd8], xmm5
mov byte [rdi + 0xe8], cl
cmp rdx, 0xa
je 0x801a719
movdqu xmm5, xmmword [rax + 0xf0]
movzx ecx, byte [rax + 0x100]
movups xmmword [rdi + 0xf0], xmm5
mov byte [rdi + 0x100], cl
cmp rdx, 0xb
je 0x801a719
movdqu xmm5, xmmword [rax + 0x108]
movzx ecx, byte [rax + 0x118]
movups xmmword [rdi + 0x108], xmm5
mov byte [rdi + 0x118], cl
cmp rdx, 0xc
je 0x801a719
movdqu xmm7, xmmword [rax + 0x120]
movzx ecx, byte [rax + 0x130]
movups xmmword [rdi + 0x120], xmm7
mov byte [rdi + 0x130], cl
cmp rdx, 0xd
je 0x801a719
movdqu xmm5, xmmword [rax + 0x138]
movzx ecx, byte [rax + 0x148]
movups xmmword [rdi + 0x138], xmm5
mov byte [rdi + 0x148], cl
cmp rdx, 0xe
je 0x801a719
movdqu xmm7, xmmword [rax + 0x150]
movzx ecx, byte [rax + 0x160]
movups xmmword [rdi + 0x150], xmm7
mov byte [rdi + 0x160], cl
cmp rdx, 0xf
je 0x801a719
movdqu xmm5, xmmword [rax + 0x168]
movzx eax, byte [rax + 0x178]
movups xmmword [rdi + 0x168], xmm5
mov byte [rdi + 0x178], al
jmp 0x801a719
nop word [rax + rax]
movdqu xmm0, xmmword [rsi]
movzx eax, byte [rsi + 0x10]
add r8, 0x18
add rsi, 0x18
mov byte [r8 - 8], al
movups xmmword [r8 - 0x18], xmm0
cmp r12, rsi
jne 0x801a700
mov rax, qword [var_10h]
mov qword [r15 - 0x58], rax
jmp 0x8019331
nop dword [rax]
add rax, 0x18
movdqu xmm6, xmmword [r10]
movzx ecx, byte [r10 + 0x10]
add r9, 0x18
mov r10, rax
movups xmmword [r9 - 0x18], xmm6
mov byte [r9 - 8], cl
sub rdx, 1
jne 0x801a730
jmp 0x801a719
nop word cs:[rax + rax]
mov eax, 0xffffffff
lock xadd dword [var_8h], eax
jmp 0x8018d51
nop
test rbx, rbx
je 0x801a960
movabs rax, 0x7ffffffffffffff8
mov qword [rsp], r10
cmp rbx, rax
ja _ZSt17__throw_bad_allocv
mov rdi, rbx
call _Znwm
mov r9, qword [r15]
mov rsi, qword [r15 + 0x10]
mov r10, qword [rsp]
mov rbp, rax
sub rsi, r9
mov rax, r10
mov rdx, rbp
cmp r12, r10
je 0x801a7d4
nop dword [rax]
movdqu xmm3, xmmword [rax]
movzx ecx, byte [rax + 0x10]
add rax, 0x18
add rdx, 0x18
movups xmmword [rdx - 0x18], xmm3
mov byte [rdx - 8], cl
cmp r12, rax
jne 0x801a7b8
test r9, r9
je 0x801a7e1
mov rdi, r9
call _ZdlPvm
lea rax, [rbp + rbx]
mov qword [r15], rbp
mov qword [var_10h], rax
mov qword [r15 + 0x10], rax
mov rax, qword [var_10h]
mov qword [r15 + 8], rax
jmp 0x8019989
test rbx, rbx
je 0x801a950
movabs rax, 0x7ffffffffffffff8
cmp rbx, rax
ja _ZSt17__throw_bad_allocv
mov rdi, rbx
mov qword [rsp], r10
call _Znwm
mov r9, qword [r15 - 0x60]
mov rsi, qword [r15 - 0x50]
mov r10, qword [rsp]
mov rbp, rax
sub rsi, r9
mov rax, r10
mov rdx, rbp
cmp r12, r10
je 0x801a864
nop dword [rax]
movdqu xmm2, xmmword [rax]
movzx ecx, byte [rax + 0x10]
add rax, 0x18
add rdx, 0x18
movups xmmword [rdx - 0x18], xmm2
mov byte [rdx - 8], cl
cmp r12, rax
jne 0x801a848
test r9, r9
je 0x801a871
mov rdi, r9
call _ZdlPvm
lea rax, [rbp + rbx]
mov qword [r15 - 0x60], rbp
mov qword [var_10h], rax
mov qword [r15 - 0x50], rax
mov rax, qword [var_10h]
mov qword [r15 - 0x58], rax
jmp 0x8019331
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [r12 + 8], eax
jmp 0x80199d7
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [r12 + 8], eax
jmp 0x8019385
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [var_ch], eax
jmp 0x8019b04
nop word [rax + rax]
mov eax, 0xffffffff
lock xadd dword [var_ch], eax
jmp 0x8019b3c
nop
lock add dword [var_8h], 1
mov r12, qword [r15 - 0x20]
jmp 0x8019363
nop
lock add dword [var_8h], 1
mov r12, qword [r15 + 0x40]
jmp 0x80199b5
nop
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
jmp 0x8018d80
nop
mov eax, 0xffffffff
lock xadd dword [r12 + 0xc], eax
jmp 0x80193aa
nop dword [rax]
mov eax, 0xffffffff
lock xadd dword [r12 + 0xc], eax
jmp 0x80199fc
nop dword [rax]
xor ebp, ebp
jmp 0x801a83a
nop word [rax + rax]
xor ebp, ebp
jmp 0x801a7a9
nop word [rax + rax]
mov eax, 0xffffffff
lock xadd dword [var_ch], eax
jmp 0x8018d72
call _ZSt17__throw_bad_allocv
mov rbp, rax
mov rdi, r12
call _ZN5boost13match_resultsIPKwSaINS_9sub_matchIS2_EEEED1Ev
mov rdi, rbp
call _Unwind_Resume
