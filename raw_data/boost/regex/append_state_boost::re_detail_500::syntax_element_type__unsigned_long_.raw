push r15
mov r15d, esi
push r14
mov r14, rdi
push r13
push r12
mov r12, rdx
push rbp
push rbx
sub rsp, 0x18
cmp esi, 0xd
jne 0x800c070
mov byte [rdi + 0x20], 1
mov r13, qword [r14]
mov rax, qword [r14 + 0x10]
mov rdx, qword [r13 + 0x160]
mov rbp, qword [r13 + 0x168]
sub rbp, rdx
add rbp, 7
and rbp, 0xfffffffffffffff8
lea r8, [rdx + rbp]
mov qword [r13 + 0x168], r8
test rax, rax
je 0x800c0b0
mov rsi, rax
mov rcx, rbp
sub rsi, rdx
sub rcx, rsi
mov qword [rax + 8], rcx
mov rax, qword [r13 + 0x158]
mov rcx, rax
sub rcx, r8
cmp r12, rcx
ja 0x800c0f0
add r12, r8
mov rax, r8
mov qword [r13 + 0x168], r12
mov qword [r14 + 0x10], r8
mov qword [r8 + 8], 0
mov dword [r8], r15d
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
sub rax, rdx
test rdx, rdx
lea rcx, [r12 + rbp]
mov edx, 0x400
cmove rax, rdx
cmp rcx, rax
jbe 0x800c118
nop dword [rax + rax]
add rax, rax
cmp rcx, rax
ja 0x800c110
lea rbx, [rax + 7]
and rbx, 0xfffffffffffffff8
mov rdi, rbx
call _Znwm
mov r8, qword [r13 + 0x160]
mov rcx, rax
test r8, r8
je 0x800c152
mov rsi, r8
mov rdx, rbp
mov rdi, rax
mov qword [var_8h], r8
call memcpy
mov r8, qword [var_8h]
mov rcx, rax
mov rdi, r8
mov qword [var_8h], rcx
call _ZdlPv
mov rcx, qword [var_8h]
mov qword [r13 + 0x160], rcx
lea r8, [rcx + rbp]
add rcx, rbx
mov qword [r13 + 0x158], rcx
jmp 0x800c0c2
