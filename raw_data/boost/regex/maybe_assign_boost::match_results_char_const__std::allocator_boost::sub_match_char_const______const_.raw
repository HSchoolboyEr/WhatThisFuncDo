push r15
push r14
mov r14, rsi
push r13
mov r13, rdi
push r12
push rbp
push rbx
sub rsp, 0x68
cmp byte [rdi + 0x4c], 0
jne 0x801ef10
mov rax, qword [rdi + 8]
mov rdi, qword [rdi]
mov rdx, qword [r14 + 8]
mov rcx, qword [r14]
mov rsi, rax
lea r8, [rdi + 0x30]
sub rsi, rdi
mov r9, rdx
cmp rsi, 0x30
mov r11, rsi
cmova rax, r8
sub r9, rcx
add rcx, 0x30
cmp r9, 0x30
cmova rdx, rcx
sar r11, 3
movabs rcx, 0xaaaaaaaaaaaaaaab
imul r11, rcx
mov rcx, qword [rax]
test r11d, r11d
jle 0x801ee10
mov r10, qword [rdi + 8]
cmp r10, rcx
jne 0x801eeb0
cmp r11d, 1
je 0x801f528
add rdi, 0x18
jmp 0x801f52c
nop dword [rax]
mov r10, qword [r13 + 0x28]
cmp rcx, r10
je 0x801f528
lea r8, [r13 + 0x20]
mov rbx, qword [r8]
cmp rsi, 0x18
jbe 0x801ee9d
sub r11, 2
je 0x801ee9d
xor r9d, r9d
xor ebp, ebp
xor r12d, r12d
xor edi, edi
xor r8d, r8d
jmp 0x801ee59
nop
test cl, cl
jne 0x801eef0
add r9, 1
add rax, 0x18
add rdx, 0x18
cmp r9, r11
je 0x801ee9d
mov rsi, qword [rax]
mov rcx, qword [rdx]
cmp rsi, r10
je 0x801eec0
cmp rcx, r10
je 0x801ee9d
mov r12, rsi
mov rbp, rcx
sub r12, rbx
sub rbp, rbx
cmp rsi, rcx
jb 0x801ee9d
ja 0x801eee0
mov r8, qword [rax + 8]
mov rdi, qword [rdx + 8]
sub r8, rsi
sub rdi, rcx
cmp rdi, r8
jne 0x801eee0
cmp byte [rax + 0x10], 0
movzx ecx, byte [rdx + 0x10]
je 0x801ee40
test cl, cl
jne 0x801ee48
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
cmp r11d, 2
jg 0x801ee21
jmp 0x801ee1d
nop
cmp rcx, r10
jne 0x801eef6
cmp byte [rax + 0x10], 0
movzx ecx, byte [rdx + 0x10]
jne 0x801ee99
test cl, cl
je 0x801ee48
nop word [rax + rax]
cmp r12, rbp
jg 0x801eef6
cmp r8, rdi
jl 0x801eef6
cmp byte [rax + 0x10], 0
jne 0x801ee9d
cmp byte [rdx + 0x10], 0
je 0x801ee9d
add rsp, 0x68
mov rsi, r14
mov rdi, r13
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp .text
nop
cmp rsi, rdi
je 0x801f489
mov r12, qword [rsi + 8]
mov r15, qword [rsi]
mov r10, qword [rdi]
mov rsi, qword [rdi + 0x10]
mov rbx, r12
sub rbx, r15
sub rsi, r10
cmp rbx, rsi
ja 0x801fb30
mov r9, qword [rdi + 8]
lea rax, [r10 + rbx]
mov qword [var_8h], rax
mov rcx, r9
sub rcx, r10
cmp rbx, rcx
ja 0x801f538
test rbx, rbx
jle 0x801f480
movabs rax, 0xaaaaaaaaaaaaaaab
mov rdx, rbx
mov rcx, r10
sar rdx, 3
imul rdx, rax
mov qword [var_18h], rdx
mov rdi, rdx
mov rax, rdx
mov rdx, r10
sub rdx, r15
sub rdx, 0x18
cmp rdx, 0x150
lea rdx, [r15 + 0x18]
seta sil
sub rcx, rdx
add rcx, 8
cmp rcx, 0x160
seta cl
test sil, cl
je 0x801fad4
cmp rbx, 0x180
jle 0x801fad4
lea rax, [rdi - 1]
mov qword [var_28h], r15
mov rcx, r10
lea rdx, [r15 + 0x10]
mov qword [var_20h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_30h], r10
shl rax, 7
mov qword [var_38h], r13
add rax, r10
mov qword [var_40h], r14
mov qword [var_10h], rax
nop dword [rax]
movdqu xmm2, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm4, xmmword [rdx - 0x110]
movdqu xmm5, xmmword [rdx - 0x120]
shufpd xmm7, xmm2, 1
movdqu xmm3, xmmword [rdx - 0x140]
movdqu xmm2, xmmword [rdx - 0xe0]
shufpd xmm5, xmm4, 1
movdqu xmm0, xmmword [rdx - 0x80]
movdqu xmm15, xmmword [rdx - 0x20]
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm9, xmmword [rdx - 0x70]
movdqu xmm4, xmmword [rdx - 0xf0]
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm1, xmmword [rdx - 0xb0]
shufpd xmm6, xmm3, 1
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm14, xmmword [rdx - 0x160]
shufpd xmm4, xmm2, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm13, xmmword [rdx - 0x130]
shufpd xmm3, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
movdqu xmm12, xmmword [rdx - 0x100]
shufpd xmm2, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm11, xmmword [rdx - 0xd0]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0xa8]
movzx edi, byte [rdx - 0x90]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movups xmmword [rcx - 0xa8], xmm3
movzx r14d, byte [rdx - 0x150]
movzx r13d, byte [rdx - 0x138]
mov byte [var_5h], al
movzx r12d, byte [rdx - 0x120]
movzx eax, byte [rdx - 0x30]
movups xmmword [rcx - 0x78], xmm2
movzx ebp, byte [rdx - 0x108]
movzx esi, byte [rdx - 0x180]
mov byte [var_6h], dil
movzx r9d, byte [rdx - 0x78]
movzx r8d, byte [rdx - 0x60]
mov byte [var_7h], al
movzx r11d, byte [rdx - 0xd8]
movzx edi, byte [rdx - 0x48]
movups xmmword [rcx - 0x90], xmm10
movzx r10d, byte [rdx - 0xc0]
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x60], xmm9
movups xmmword [rcx - 0x48], xmm1
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], sil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [var_5h]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x98], bl
movzx ebx, byte [var_6h]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x80], bl
movzx ebx, byte [var_7h]
mov byte [rcx - 0x68], r9b
mov byte [rcx - 0x50], r8b
mov byte [rcx - 0x38], dil
mov byte [rcx - 0x20], bl
mov byte [rcx - 8], al
cmp rcx, qword [var_10h]
jne 0x801f000
mov rax, qword [var_20h]
mov rcx, qword [var_18h]
mov r15, qword [var_28h]
mov r10, qword [var_30h]
and rax, 0xfffffffffffffff0
mov r13, qword [var_38h]
mov r14, qword [var_40h]
sub rcx, rax
lea rax, [rax + rax*2]
shl rax, 3
lea rdx, [r15 + rax]
add rax, r10
movdqu xmm6, xmmword [rdx]
movzx esi, byte [rdx + 0x10]
movups xmmword [rax], xmm6
mov byte [rax + 0x10], sil
cmp rcx, 1
je 0x801f480
movdqu xmm7, xmmword [rdx + 0x18]
movzx esi, byte [rdx + 0x28]
movups xmmword [rax + 0x18], xmm7
mov byte [rax + 0x28], sil
cmp rcx, 2
je 0x801f480
movdqu xmm7, xmmword [rdx + 0x30]
movzx esi, byte [rdx + 0x40]
movups xmmword [rax + 0x30], xmm7
mov byte [rax + 0x40], sil
cmp rcx, 3
je 0x801f480
movdqu xmm5, xmmword [rdx + 0x48]
movzx esi, byte [rdx + 0x58]
movups xmmword [rax + 0x48], xmm5
mov byte [rax + 0x58], sil
cmp rcx, 4
je 0x801f480
movdqu xmm7, xmmword [rdx + 0x60]
movzx esi, byte [rdx + 0x70]
movups xmmword [rax + 0x60], xmm7
mov byte [rax + 0x70], sil
cmp rcx, 5
je 0x801f480
movdqu xmm7, xmmword [rdx + 0x78]
movzx esi, byte [rdx + 0x88]
movups xmmword [rax + 0x78], xmm7
mov byte [rax + 0x88], sil
cmp rcx, 6
je 0x801f480
movdqu xmm5, xmmword [rdx + 0x90]
movzx esi, byte [rdx + 0xa0]
movups xmmword [rax + 0x90], xmm5
mov byte [rax + 0xa0], sil
cmp rcx, 7
je 0x801f480
movdqu xmm5, xmmword [rdx + 0xa8]
movzx esi, byte [rdx + 0xb8]
movups xmmword [rax + 0xa8], xmm5
mov byte [rax + 0xb8], sil
cmp rcx, 8
je 0x801f480
movdqu xmm6, xmmword [rdx + 0xc0]
movzx esi, byte [rdx + 0xd0]
movups xmmword [rax + 0xc0], xmm6
mov byte [rax + 0xd0], sil
cmp rcx, 9
je 0x801f480
movdqu xmm6, xmmword [rdx + 0xd8]
movzx esi, byte [rdx + 0xe8]
movups xmmword [rax + 0xd8], xmm6
mov byte [rax + 0xe8], sil
cmp rcx, 0xa
je 0x801f480
movdqu xmm7, xmmword [rdx + 0xf0]
movzx esi, byte [rdx + 0x100]
movups xmmword [rax + 0xf0], xmm7
mov byte [rax + 0x100], sil
cmp rcx, 0xb
je 0x801f480
movdqu xmm6, xmmword [rdx + 0x108]
movzx esi, byte [rdx + 0x118]
movups xmmword [rax + 0x108], xmm6
mov byte [rax + 0x118], sil
cmp rcx, 0xc
je 0x801f480
movdqu xmm7, xmmword [rdx + 0x120]
movzx esi, byte [rdx + 0x130]
movups xmmword [rax + 0x120], xmm7
mov byte [rax + 0x130], sil
cmp rcx, 0xd
je 0x801f480
movdqu xmm6, xmmword [rdx + 0x138]
movzx esi, byte [rdx + 0x148]
movups xmmword [rax + 0x138], xmm6
mov byte [rax + 0x148], sil
cmp rcx, 0xe
je 0x801f480
movdqu xmm7, xmmword [rdx + 0x150]
movzx esi, byte [rdx + 0x160]
movups xmmword [rax + 0x150], xmm7
mov byte [rax + 0x160], sil
cmp rcx, 0xf
je 0x801f480
movdqu xmm5, xmmword [rdx + 0x168]
movzx edx, byte [rdx + 0x178]
mov byte [rax + 0x178], dl
movups xmmword [rax + 0x168], xmm5
nop
mov rax, qword [var_8h]
mov qword [r13 + 8], rax
mov rax, qword [r14 + 0x38]
mov rbx, qword [r14 + 0x40]
mov rbp, qword [r13 + 0x40]
mov qword [r13 + 0x38], rax
cmp rbx, rbp
je 0x801f4e0
test rbx, rbx
je 0x801f4b5
cmp qword [0x0801f4ab], 0
jne 0x801fbbf
add dword [rbx + 8], 1
test rbp, rbp
je 0x801f4dc
mov r12, qword [0x0801f4c1]
test r12, r12
jne 0x801fbb0
mov eax, dword [arg_8h]
lea edx, [rax - 1]
mov dword [arg_8h], edx
cmp eax, 1
je 0x801faf9
mov qword [r13 + 0x40], rbx
mov eax, dword [r14 + 0x48]
mov dword [r13 + 0x48], eax
movzx eax, byte [r14 + 0x4c]
mov byte [r13 + 0x4c], al
test al, al
jne 0x801ee9d
movdqu xmm6, xmmword [r14 + 0x18]
movups xmmword [r13 + 0x18], xmm6
mov rax, qword [r14 + 0x28]
mov qword [r13 + 0x28], rax
movzx eax, byte [r14 + 0x30]
mov byte [r13 + 0x30], al
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
lea rdi, [r13 + 0x20]
mov rbx, qword [rdi]
jmp 0x801ee24
nop dword [rax]
lea r8, [r15 + rcx]
test rcx, rcx
jle 0x801fa9b
movabs rax, 0xaaaaaaaaaaaaaaab
mov rdx, rcx
sar rdx, 3
imul rdx, rax
mov rax, r10
mov qword [var_18h], rdx
mov rbx, rdx
mov rsi, rdx
lea rdx, [r15 + 0x18]
sub rax, rdx
add rax, 8
cmp rax, 0x160
mov rax, r10
seta dil
sub rax, r15
sub rax, 0x18
cmp rax, 0x150
seta al
test dil, al
je 0x801faac
cmp rcx, 0x180
jle 0x801faac
lea rax, [rbx - 1]
mov qword [var_28h], r15
mov rcx, r10
lea rdx, [r15 + 0x10]
mov qword [var_20h], rax
shr rax, 4
lea rax, [rax + rax*2]
mov qword [var_30h], r8
shl rax, 7
mov qword [var_38h], r12
add rax, r10
mov qword [var_40h], r9
mov qword [var_10h], rax
mov qword [var_48h], r10
mov qword [var_50h], r13
mov qword [var_58h], r14
nop dword [rax]
movdqu xmm5, xmmword [rdx + 0x10]
movdqu xmm7, xmmword [rdx]
add rcx, 0x180
add rdx, 0x180
movdqu xmm3, xmmword [rdx - 0x140]
movdqu xmm4, xmmword [rdx - 0x110]
shufpd xmm7, xmm5, 1
movdqu xmm6, xmmword [rdx - 0x150]
movdqu xmm5, xmmword [rdx - 0x120]
movdqu xmm2, xmmword [rdx - 0xe0]
movdqu xmm1, xmmword [rdx - 0xb0]
shufpd xmm6, xmm3, 1
shufpd xmm5, xmm4, 1
movdqu xmm3, xmmword [rdx - 0xc0]
movdqu xmm4, xmmword [rdx - 0xf0]
movdqu xmm0, xmmword [rdx - 0x50]
movdqu xmm15, xmmword [rdx - 0x20]
shufpd xmm4, xmm2, 1
shufpd xmm3, xmm1, 1
movdqu xmm2, xmmword [rdx - 0x90]
movdqu xmm1, xmmword [rdx - 0x80]
movdqu xmm14, xmmword [rdx - 0x160]
movdqu xmm9, xmmword [rdx - 0x70]
shufpd xmm2, xmm1, 1
movdqu xmm1, xmmword [rdx - 0x60]
movdqu xmm13, xmmword [rdx - 0x130]
movdqu xmm12, xmmword [rdx - 0x100]
movdqu xmm8, xmmword [rdx - 0x40]
movdqu xmm11, xmmword [rdx - 0xd0]
shufpd xmm1, xmm0, 1
movdqu xmm0, xmmword [rdx - 0x30]
movdqu xmm10, xmmword [rdx - 0xa0]
shufpd xmm0, xmm15, 1
movdqu xmm15, xmmword [rdx - 0x190]
movups xmmword [rcx - 0x168], xmm7
movups xmmword [rcx - 0x150], xmm14
movups xmmword [rcx - 0x180], xmm15
movups xmmword [rcx - 0x138], xmm6
movups xmmword [rcx - 0x120], xmm13
movups xmmword [rcx - 0x108], xmm5
movups xmmword [rcx - 0xf0], xmm12
movups xmmword [rcx - 0xd8], xmm4
movups xmmword [rcx - 0xc0], xmm11
movzx eax, byte [rdx - 0x78]
movzx esi, byte [rdx - 0x48]
movzx ebx, byte [rdx - 0xf0]
movzx r15d, byte [rdx - 0x168]
movups xmmword [rcx - 0xa8], xmm3
movzx r14d, byte [rdx - 0x150]
movzx r13d, byte [rdx - 0x138]
mov byte [var_5h], al
movzx r12d, byte [rdx - 0x120]
movzx eax, byte [rdx - 0x60]
movups xmmword [rcx - 0x78], xmm2
movzx ebp, byte [rdx - 0x108]
movzx edi, byte [rdx - 0x180]
mov byte [var_7h], sil
movzx r11d, byte [rdx - 0xd8]
movzx esi, byte [rdx - 0x30]
mov byte [var_6h], al
movzx r10d, byte [rdx - 0xc0]
movzx eax, byte [rdx - 0x18]
movups xmmword [rcx - 0x90], xmm10
movzx r9d, byte [rdx - 0xa8]
movzx r8d, byte [rdx - 0x90]
movups xmmword [rcx - 0x60], xmm9
movups xmmword [rcx - 0x48], xmm1
movups xmmword [rcx - 0x30], xmm8
movups xmmword [rcx - 0x18], xmm0
mov byte [rcx - 0x170], dil
mov byte [rcx - 0x158], r15b
mov byte [rcx - 0x140], r14b
mov byte [rcx - 0x128], r13b
mov byte [rcx - 0x110], r12b
mov byte [rcx - 0xf8], bpl
mov byte [rcx - 0xe0], bl
movzx ebx, byte [var_5h]
mov byte [rcx - 0xc8], r11b
mov byte [rcx - 0x68], bl
movzx ebx, byte [var_6h]
mov byte [rcx - 0xb0], r10b
mov byte [rcx - 0x50], bl
movzx ebx, byte [var_7h]
mov byte [rcx - 0x98], r9b
mov byte [rcx - 0x80], r8b
mov byte [rcx - 0x38], bl
mov byte [rcx - 0x20], sil
mov byte [rcx - 8], al
cmp rcx, qword [var_10h]
jne 0x801f5f0
mov rax, qword [var_20h]
mov rcx, qword [var_18h]
mov r15, qword [var_28h]
mov r10, qword [var_48h]
and rax, 0xfffffffffffffff0
mov r8, qword [var_30h]
mov r12, qword [var_38h]
sub rcx, rax
lea rax, [rax + rax*2]
mov r9, qword [var_40h]
mov r13, qword [var_50h]
shl rax, 3
mov r14, qword [var_58h]
lea rdx, [r15 + rax]
add rax, r10
movdqu xmm6, xmmword [rdx]
movzx esi, byte [rdx + 0x10]
movups xmmword [rax], xmm6
mov byte [rax + 0x10], sil
cmp rcx, 1
je 0x801fa9b
movdqu xmm6, xmmword [rdx + 0x18]
movzx esi, byte [rdx + 0x28]
movups xmmword [rax + 0x18], xmm6
mov byte [rax + 0x28], sil
cmp rcx, 2
je 0x801fa9b
movdqu xmm6, xmmword [rdx + 0x30]
movzx esi, byte [rdx + 0x40]
movups xmmword [rax + 0x30], xmm6
mov byte [rax + 0x40], sil
cmp rcx, 3
je 0x801fa9b
movdqu xmm5, xmmword [rdx + 0x48]
movzx esi, byte [rdx + 0x58]
movups xmmword [rax + 0x48], xmm5
mov byte [rax + 0x58], sil
cmp rcx, 4
je 0x801fa9b
movdqu xmm6, xmmword [rdx + 0x60]
movzx esi, byte [rdx + 0x70]
movups xmmword [rax + 0x60], xmm6
mov byte [rax + 0x70], sil
cmp rcx, 5
je 0x801fa9b
movdqu xmm6, xmmword [rdx + 0x78]
movzx esi, byte [rdx + 0x88]
movups xmmword [rax + 0x78], xmm6
mov byte [rax + 0x88], sil
cmp rcx, 6
je 0x801fa9b
movdqu xmm7, xmmword [rdx + 0x90]
movzx esi, byte [rdx + 0xa0]
movups xmmword [rax + 0x90], xmm7
mov byte [rax + 0xa0], sil
cmp rcx, 7
je 0x801fa9b
movdqu xmm7, xmmword [rdx + 0xa8]
movzx esi, byte [rdx + 0xb8]
movups xmmword [rax + 0xa8], xmm7
mov byte [rax + 0xb8], sil
cmp rcx, 8
je 0x801fa9b
movdqu xmm5, xmmword [rdx + 0xc0]
movzx esi, byte [rdx + 0xd0]
movups xmmword [rax + 0xc0], xmm5
mov byte [rax + 0xd0], sil
cmp rcx, 9
je 0x801fa9b
movdqu xmm5, xmmword [rdx + 0xd8]
movzx esi, byte [rdx + 0xe8]
movups xmmword [rax + 0xd8], xmm5
mov byte [rax + 0xe8], sil
cmp rcx, 0xa
je 0x801fa9b
movdqu xmm6, xmmword [rdx + 0xf0]
movzx esi, byte [rdx + 0x100]
movups xmmword [rax + 0xf0], xmm6
mov byte [rax + 0x100], sil
cmp rcx, 0xb
je 0x801fa9b
movdqu xmm7, xmmword [rdx + 0x108]
movzx esi, byte [rdx + 0x118]
movups xmmword [rax + 0x108], xmm7
mov byte [rax + 0x118], sil
cmp rcx, 0xc
je 0x801fa9b
movdqu xmm5, xmmword [rdx + 0x120]
movzx esi, byte [rdx + 0x130]
movups xmmword [rax + 0x120], xmm5
mov byte [rax + 0x130], sil
cmp rcx, 0xd
je 0x801fa9b
movdqu xmm6, xmmword [rdx + 0x138]
movzx esi, byte [rdx + 0x148]
movups xmmword [rax + 0x138], xmm6
mov byte [rax + 0x148], sil
cmp rcx, 0xe
je 0x801fa9b
movdqu xmm7, xmmword [rdx + 0x150]
movzx esi, byte [rdx + 0x160]
movups xmmword [rax + 0x150], xmm7
mov byte [rax + 0x160], sil
cmp rcx, 0xf
je 0x801fa9b
movdqu xmm5, xmmword [rdx + 0x168]
movzx edx, byte [rdx + 0x178]
movups xmmword [rax + 0x168], xmm5
mov byte [rax + 0x178], dl
jmp 0x801fa9b
movdqu xmm0, xmmword [r8]
movzx eax, byte [r8 + 0x10]
add r9, 0x18
add r8, 0x18
mov byte [r9 - 8], al
movups xmmword [r9 - 0x18], xmm0
cmp r12, r8
jne 0x801fa80
jmp 0x801f480
nop dword [rax]
add rdx, 0x18
movdqu xmm7, xmmword [r15]
movzx eax, byte [r15 + 0x10]
add r10, 0x18
mov r15, rdx
movups xmmword [r10 - 0x18], xmm7
mov byte [r10 - 8], al
sub rsi, 1
jne 0x801faa8
jmp 0x801fa9b
nop
add rdx, 0x18
movdqu xmm7, xmmword [r15]
movzx ecx, byte [r15 + 0x10]
add r10, 0x18
mov r15, rdx
movups xmmword [r10 - 0x18], xmm7
mov byte [r10 - 8], cl
sub rax, 1
jne 0x801fad0
jmp 0x801f480
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
test r12, r12
jne 0x801fbd1
mov eax, dword [arg_ch]
lea edx, [rax - 1]
mov dword [arg_ch], edx
cmp eax, 1
jne 0x801f4dc
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x18]
jmp 0x801f4dc
nop dword [rax]
test rbx, rbx
je 0x801fbcd
movabs rax, 0x7ffffffffffffff8
cmp rbx, rax
ja _ZSt17__throw_bad_allocv
mov rdi, rbx
call _Znwm
mov r10, qword [r13]
mov rsi, qword [r13 + 0x10]
mov rbp, rax
sub rsi, r10
mov rax, r15
mov rdx, rbp
cmp r12, r15
je 0x801fb8c
nop dword [rax]
movdqu xmm1, xmmword [rax]
movzx ecx, byte [rax + 0x10]
add rax, 0x18
add rdx, 0x18
movups xmmword [rdx - 0x18], xmm1
mov byte [rdx - 8], cl
cmp r12, rax
jne 0x801fb70
test r10, r10
je 0x801fb99
mov rdi, r10
call _ZdlPvm
lea rax, [rbp + rbx]
mov qword [r13], rbp
mov qword [var_8h], rax
mov qword [r13 + 0x10], rax
jmp 0x801f480
mov eax, 0xffffffff
lock xadd dword [arg_8h], eax
jmp 0x801f4d3
lock add dword [rbx + 8], 1
mov rbp, qword [r13 + 0x40]
jmp 0x801f4b5
xor ebp, ebp
jmp 0x801fb62
mov eax, 0xffffffff
lock xadd dword [arg_ch], eax
jmp 0x801fb15
call _ZSt17__throw_bad_allocv
