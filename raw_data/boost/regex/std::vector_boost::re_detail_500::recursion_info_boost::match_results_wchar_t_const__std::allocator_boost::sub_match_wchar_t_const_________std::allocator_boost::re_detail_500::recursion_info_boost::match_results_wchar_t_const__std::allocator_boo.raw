push r13
mov r13, rdi
push r12
push rbp
push rbx
sub rsp, 8
mov rbx, qword [rdi + 8]
mov rbp, qword [rdi]
cmp rbx, rbp
je 0x800ba7d
cmp qword [0x0800ba31], 0
jne 0x800baa9
nop dword [rax + rax]
mov r12, qword [arg_50h]
test r12, r12
je 0x800ba57
mov eax, dword [r12 + 8]
lea edx, [rax - 1]
mov dword [r12 + 8], edx
cmp eax, 1
je 0x800baf0
mov rdi, qword [arg_10h]
test rdi, rdi
je 0x800bae0
mov rsi, qword [arg_20h]
add rbp, 0x70
sub rsi, rdi
call _ZdlPvm
cmp rbx, rbp
jne 0x800ba38
mov rbp, qword [r13]
test rbp, rbp
je 0x800bb48
mov rsi, qword [r13 + 0x10]
add rsp, 8
mov rdi, rbp
pop rbx
sub rsi, rbp
pop rbp
pop r12
pop r13
jmp _ZdlPvm
nop
add rbp, 0x70
cmp rbx, rbp
je 0x800ba79
mov r12, qword [arg_50h]
test r12, r12
je 0x800babb
lock sub dword [r12 + 8], 1
je 0x800bb20
mov rdi, qword [arg_10h]
test rdi, rdi
je 0x800baa0
mov rsi, qword [arg_20h]
add rbp, 0x70
sub rsi, rdi
call _ZdlPvm
cmp rbx, rbp
jne 0x800baa9
jmp 0x800ba79
nop dword [rax + rax]
add rbp, 0x70
cmp rbx, rbp
jne 0x800ba38
jmp 0x800ba79
nop
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
mov eax, dword [r12 + 0xc]
lea edx, [rax - 1]
mov dword [r12 + 0xc], edx
cmp eax, 1
jne 0x800ba57
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x18]
jmp 0x800ba57
nop
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x10]
lock sub dword [r12 + 0xc], 1
jne 0x800babb
mov rax, qword [r12]
mov rdi, r12
call qword [rax + 0x18]
jmp 0x800babb
nop word [rax + rax]
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
