push r15
lea rax, [rdi + 0x10]
push r14
push r13
push r12
mov r12, rdi
push rbp
mov rbp, rsi
push rbx
mov rbx, rdx
sub rsp, 0x48
mov qword [rdi], rax
mov qword [rsp], rax
test rsi, rsi
jne 0x800bcc0
test rdx, rdx
jne .LC0
sub rbx, rbp
mov qword [var_20h], rbx
mov rax, rbx
cmp rbx, 0xf
ja 0x800beb0
cmp rbx, 1
jne 0x800bdf0
movzx edx, byte [rbp]
mov byte [r12 + 0x10], dl
mov rdx, qword [rsp]
mov qword [r12 + 8], rax
xor r15d, r15d
lea r13, [0x0800bcfb]
mov byte [rdx + rax], 0
mov rsi, qword [0x0800bd06]
cmp byte [rsi], 0
jne 0x800bd22
jmp _ZZN5boost13re_detail_50027lookup_default_collate_nameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE14def_multi_coll
mov rsi, qword [r13 + r15*8]
add r15, 1
cmp byte [rsi], 0
je _ZZN5boost13re_detail_50027lookup_default_collate_nameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE14def_multi_coll
mov rdi, r12
call _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
test eax, eax
jne 0x800bd10
lea r13, [var_30h]
lea rdi, [var_20h]
movsx edx, r15b
mov esi, 1
mov qword [var_20h], r13
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc
mov rax, qword [var_20h]
mov rdi, qword [r12]
mov rdx, qword [var_28h]
cmp rax, r13
je 0x800bfc8
mov rcx, qword [var_30h]
cmp qword [rsp], rdi
je 0x800bf20
movq xmm0, rdx
movq xmm1, rcx
mov rsi, qword [r12 + 0x10]
mov qword [r12], rax
punpcklqdq xmm0, xmm1
movups xmmword [r12 + 8], xmm0
test rdi, rdi
je 0x800bf38
mov qword [var_20h], rdi
mov qword [var_30h], rsi
mov qword [var_28h], 0
mov byte [rdi], 0
mov rdi, qword [var_20h]
cmp rdi, r13
je 0x800bdc5
mov rax, qword [var_30h]
lea rsi, [rax + 1]
call _ZdlPvm
cmp qword [r12 + 8], 0
jne 0x800bdd7
cmp rbx, 1
je 0x800bf90
add rsp, 0x48
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
test rbx, rbx
jne 0x800c016
mov rdx, qword [rsp]
jmp 0x800bcec
nop word [rax + rax]
mov rsi, qword [0x0800be0f]
xor r14d, r14d
lea r15, [0x0800be19]
cmp byte [rsi], 0
jne 0x800be39
jmp 0x800bef0
nop dword [rax + rax]
mov rsi, qword [r15 + r14*8]
add r14, 1
cmp byte [rsi], 0
je 0x800bef0
mov rdi, r12
mov r13d, r14d
call _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
test eax, eax
jne 0x800be28
lea rax, [0x0800be4f]
mov r15, qword [rax + r13*8]
lea rax, [var_20h]
lea r13, [var_30h]
mov qword [var_8h], rax
mov qword [var_20h], r13
test r15, r15
je .LC0
mov rdi, r15
call strlen
mov qword [var_18h], rax
mov r14, rax
cmp rax, 0xf
ja 0x800bf4a
cmp rax, 1
jne 0x800bfab
movzx edx, byte [r15]
mov byte [var_30h], dl
mov rdx, r13
mov qword [var_28h], rax
mov byte [rdx + rax], 0
jmp 0x800bd4b
nop dword [rax]
mov rdi, r12
lea rsi, [var_20h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [r12], rax
mov rdi, rax
mov rax, qword [var_20h]
mov qword [r12 + 0x10], rax
mov rdx, rbx
mov rsi, rbp
call memcpy
mov rax, qword [var_20h]
mov rdx, qword [r12]
jmp 0x800bcec
nop dword [rax]
lea r13, [var_30h]
mov byte [var_30h], 0
mov rdi, qword [r12]
xor edx, edx
mov qword [var_20h], r13
mov qword [r12 + 8], rdx
mov byte [rdi + rdx], 0
mov rdi, qword [var_20h]
jmp 0x800bda1
nop dword [rax + rax]
movq xmm0, rdx
movq xmm2, rcx
mov qword [r12], rax
punpcklqdq xmm0, xmm2
movups xmmword [r12 + 8], xmm0
mov qword [var_20h], r13
lea r13, [var_30h]
mov rdi, r13
jmp 0x800bda1
mov rdi, qword [var_8h]
lea rsi, [var_18h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_20h], rax
mov rdi, rax
mov rax, qword [var_18h]
mov qword [var_30h], rax
mov rdx, r14
mov rsi, r15
call memcpy
mov rax, qword [var_18h]
mov rdx, qword [var_20h]
jmp 0x800be9f
nop word [rax + rax]
movsx r8d, byte [rbp]
mov ecx, 1
xor edx, edx
xor esi, esi
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
jmp 0x800bdd7
test rax, rax
jne 0x800c002
mov rdx, r13
jmp 0x800be9f
lea rdi, [0x0800bfbf]
call _ZSt19__throw_logic_errorPKc
nop dword [rax]
test rdx, rdx
je 0x800bf05
cmp rdx, 1
je 0x800bfed
mov rsi, r13
call memcpy
mov rdx, qword [var_28h]
mov rdi, qword [r12]
jmp 0x800bf05
movzx eax, byte [var_30h]
mov byte [rdi], al
mov rdx, qword [var_28h]
mov rdi, qword [r12]
jmp 0x800bf05
mov rdi, r13
jmp 0x800bf6d
lea rdi, [0x0800c011]
call _ZSt19__throw_logic_errorPKc
mov rdi, qword [rsp]
jmp 0x800bed0
