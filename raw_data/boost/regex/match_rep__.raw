push r15
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 8
mov r13, qword [rdi + 0x58]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x20]
je 0x800f8d8
movsxd rdx, dword [rax]
cmp edx, 0xff
jbe 0x800f778
mov r12d, 1
mov r14d, 1
mov r8, qword [rbx + 0xd8]
mov ebp, dword [r13 + 0x130]
cmp dword [r8], 5
jne 0x800f6ac
cmp dword [r8 + 0x18], ebp
je 0x800f938
lea r15, [rbx + 0x80]
sub r8, 0x30
cmp r8, qword [rbx + 0xd0]
jb _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rdx, qword [rbx + 0xc0]
mov r9d, 0x80000003
cmp rdx, qword [rbx + 0xb8]
je 0x800f6de
mov r9d, dword [rdx - 0x70]
mov dword [r8], 5
lea r10, [r8 + 8]
mov qword [r8 + 0x28], rax
mov rax, qword [rbx + 0x80]
mov dword [r8 + 0x18], ebp
mov qword [r8 + 0x10], rax
mov qword [r8 + 8], r15
mov qword [rbx + 0x80], r10
mov rsi, qword [r8 + 0x10]
mov edi, dword [rsi + 0x10]
cmp edi, ebp
jge 0x800f7d0
test edi, edi
js 0x800f7d0
mov qword [r8 + 0x20], 0
mov rax, qword [rbx + 0x28]
xor edx, edx
mov qword [rbx + 0xd8], r8
mov qword [r10 + 0x20], rax
cmp qword [r13 + 0x120], rdx
ja 0x800f7b4
cmp byte [r13 + 0x135], 0
je 0x800f79e
test byte [rbx + 0x61], 4
jne 0x800f798
cmp qword [r13 + 0x128], rdx
seta al
and r14b, al
jne 0x800f866
test r12b, r12b
je 0x800f7bd
mov rax, qword [r13 + 0x10]
mov r14d, r12d
mov qword [rbx + 0x58], rax
jmp 0x800f7bd
nop dword [rax]
movzx r12d, byte [r13 + rdx + 0x18]
mov r14d, r12d
shr r12b, 1
and r14d, 1
and r12d, 1
jmp 0x800f68e
nop dword [rax]
cmp byte [rbx + 0x7b], 0
jne 0x800f750
cmp rdx, qword [r13 + 0x128]
setb al
and r14d, eax
test r12b, r12b
jne 0x800f8f8
test r14b, r14b
jne 0x800f8a0
add rsp, 8
mov eax, r14d
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
mov r11d, 0xfffffffe
cmp edi, ebp
je 0x800f828
mov eax, r11d
sub eax, r9d
cmp eax, edi
je 0x800f71e
mov rsi, qword [rsi + 8]
test rsi, rsi
je 0x800f71e
mov edi, dword [rsi + 0x10]
test edi, edi
jns 0x800f7d6
mov edx, r9d
call .text
test rax, rax
je 0x800f71e
mov rsi, qword [rax + 8]
test rsi, rsi
je 0x800f71e
mov edi, dword [rsi + 0x10]
cmp edi, ebp
jne 0x800f7da
nop dword [rax]
mov rdx, qword [rsi + 0x18]
mov rax, qword [rsi + 0x20]
mov qword [r8 + 0x20], rdx
mov qword [r8 + 0x28], rax
mov rax, qword [rbx + 0x28]
mov qword [rbx + 0xd8], r8
test rdx, rdx
je 0x800f733
cmp qword [r10 + 0x20], rax
jne 0x800f733
mov rdx, qword [r13 + 0x128]
mov qword [r10 + 0x18], rdx
jmp 0x800f737
test r12b, r12b
je 0x800f8a0
mov rbp, qword [r13 + 0x10]
sub r8, 0x18
cmp r8, qword [rbx + 0xd0]
jb _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [rbx + 0x28]
mov dword [r8], 4
mov qword [r8 + 8], rbp
mov qword [r8 + 0x10], rax
mov qword [rbx + 0xd8], r8
nop word [rax + rax]
add rdx, 1
mov qword [r10 + 0x18], rdx
mov rax, qword [r13 + 8]
mov qword [rbx + 0x58], rax
jmp 0x800f7bd
nop dword [rax]
mov rdi, rbx
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [rbx + 0xd8]
lea r8, [rax - 0x30]
mov rax, qword [rbx + 0x28]
jmp 0x800f6c4
nop dword [rax]
mov r12d, dword [r13 + 0x118]
mov r14d, r12d
shr r12d, 1
and r14d, 1
and r12d, 1
jmp 0x800f68e
nop word [rax + rax]
test r14b, r14b
je 0x800f768
mov rbp, qword [r13 + 8]
sub r8, 0x18
cmp r8, qword [rbx + 0xd0]
jb 0x800f952
mov rax, qword [rbx + 0x28]
mov dword [r8], 0xd
mov qword [r8 + 8], rbp
mov qword [r8 + 0x10], rax
mov qword [rbx + 0xd8], r8
jmp 0x800f768
nop dword [rax]
mov r10, qword [rbx + 0x80]
cmp dword [r10 + 0x10], ebp
jne 0x800f6ac
mov rdx, qword [r10 + 0x18]
jmp 0x800f843
mov rdi, rbx
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [rbx + 0xd8]
lea r8, [rax - 0x18]
jmp 0x800f912
mov rdi, rbx
call _ZN5boost13re_detail_50012perl_matcherIPKwSaINS_9sub_matchIS3_EEENS_14c_regex_traitsIwEEE12extend_stackEv
mov rax, qword [rbx + 0xd8]
mov r10, qword [rbx + 0x80]
lea r8, [rax - 0x18]
mov rdx, qword [r10 + 0x18]
jmp 0x800f880
