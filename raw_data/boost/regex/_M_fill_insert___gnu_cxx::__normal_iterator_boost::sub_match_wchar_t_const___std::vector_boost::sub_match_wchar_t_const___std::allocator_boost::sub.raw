test rdx, rdx
je 0x800dec0
movabs r9, 0xaaaaaaaaaaaaaaab
push r15
mov rax, rsi
push r14
push r13
push r12
mov r12, rdi
push rbp
mov rbp, rsi
push rbx
mov rbx, rdx
sub rsp, 0x18
mov rsi, qword [rdi + 0x10]
mov rdx, qword [rdi + 8]
mov rdi, rsi
sub rdi, rdx
sar rdi, 3
imul rdi, r9
cmp rdi, rbx
jb 0x800df60
mov rdi, rdx
movq xmm2, qword [rcx]
movq xmm1, qword [rcx + 8]
sub rdi, rbp
movzx r8d, byte [rcx + 0x10]
mov rcx, rdi
sar rcx, 3
imul rcx, r9
cmp rbx, rcx
jae 0x800dec8
lea r10, [rbx + rbx*2]
mov rsi, rdx
mov rdi, rdx
shl r10, 3
sub rsi, r10
mov rcx, rsi
cmp rdx, rsi
je 0x800de3e
nop dword [rax]
movdqu xmm3, xmmword [rcx]
movzx r9d, byte [rcx + 0x10]
add rcx, 0x18
add rdi, 0x18
movups xmmword [rdi - 0x18], xmm3
mov byte [rdi - 8], r9b
cmp rdx, rcx
jne 0x800de20
mov rdi, rsi
lea rcx, [rdx + r10]
movabs r9, 0xaaaaaaaaaaaaaaab
sub rdi, rbp
mov qword [r12 + 8], rcx
mov rcx, rdi
sar rcx, 3
imul rcx, r9
test rdi, rdi
jle 0x800de8e
nop word [rax + rax]
movdqu xmm4, xmmword [rsi - 0x18]
movzx edi, byte [rsi - 8]
sub rsi, 0x18
sub rdx, 0x18
movups xmmword [rdx], xmm4
mov byte [rdx + 0x10], dil
sub rcx, 1
jne 0x800de70
lea rdx, [rbp + r10]
cmp rdx, rbp
je 0x800deb1
movdqa xmm0, xmm2
punpcklqdq xmm0, xmm1
mov byte [rax + 0x10], r8b
add rax, 0x18
movups xmmword [rax - 0x18], xmm0
cmp rdx, rax
jne 0x800dea0
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
ret
nop dword [rax]
sub rbx, rcx
movdqa xmm0, xmm2
mov rcx, rdx
mov rsi, rbx
punpcklqdq xmm0, xmm1
je 0x800defa
nop dword [rax + rax]
mov byte [rcx + 0x10], r8b
add rcx, 0x18
movups xmmword [rcx - 0x18], xmm0
sub rsi, 1
jne 0x800dee0
lea rcx, [rbx + rbx*2]
lea rcx, [rdx + rcx*8]
lea r9, [rcx + rdi]
mov rsi, rbp
cmp rdx, rbp
je 0x800e0f0
nop word [rax + rax]
movdqu xmm5, xmmword [rsi]
movzx edi, byte [rsi + 0x10]
add rsi, 0x18
add rcx, 0x18
movups xmmword [rcx - 0x18], xmm5
mov byte [rcx - 8], dil
cmp rdx, rsi
jne 0x800df10
mov qword [r12 + 8], r9
movdqa xmm0, xmm2
punpcklqdq xmm0, xmm1
nop word [rax + rax]
mov byte [rax + 0x10], r8b
add rax, 0x18
movups xmmword [rax - 0x18], xmm0
cmp rdx, rax
jne 0x800df40
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rdi, qword [r12]
mov rax, rdx
sub rax, rdi
sar rax, 3
imul rax, r9
movabs r9, 0x555555555555555
mov r8, r9
sub r8, rax
cmp rbx, r8
ja .LC43
cmp rbx, rax
mov r8, rax
mov r13, rbp
cmovae r8, rbx
add rax, r8
setb r8b
sub r13, rdi
movzx r8d, r8b
test r8, r8
jne 0x800e0a0
test rax, rax
jne 0x800e0d8
xor r15d, r15d
xor r14d, r14d
movzx r9d, byte [rcx + 0x10]
movdqu xmm0, xmmword [rcx]
lea rax, [r14 + r13]
mov r8, rbx
nop
mov byte [rax + 0x10], r9b
add rax, 0x18
movups xmmword [rax - 0x18], xmm0
sub r8, 1
jne 0x800dfd0
mov rcx, r14
cmp rdi, rbp
je 0x800e01e
mov rax, rdi
nop dword [rax]
movdqu xmm6, xmmword [rax]
movzx r8d, byte [rax + 0x10]
add rax, 0x18
add rcx, 0x18
movups xmmword [rcx - 0x18], xmm6
mov byte [rcx - 8], r8b
cmp rax, rbp
jne 0x800dff0
lea rax, [var_18h]
sub rax, rdi
shr rax, 3
lea rcx, [r14 + rax*8 + 0x18]
lea rax, [rbx + rbx*2]
lea rbx, [rcx + rax*8]
cmp rbp, rdx
je 0x800e066
mov rcx, rbx
mov rax, rbp
nop dword [rax]
movdqu xmm7, xmmword [rax]
movzx r8d, byte [rax + 0x10]
add rax, 0x18
add rcx, 0x18
movups xmmword [rcx - 0x18], xmm7
mov byte [rcx - 8], r8b
cmp rax, rdx
jne 0x800e038
sub rax, rbp
sub rax, 0x18
shr rax, 3
lea rbx, [rbx + rax*8 + 0x18]
test rdi, rdi
je 0x800e073
sub rsi, rdi
call _ZdlPvm
movq xmm0, r14
movq xmm1, rbx
mov qword [r12 + 0x10], r15
punpcklqdq xmm0, xmm1
movups xmmword [r12], xmm0
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
movabs r15, 0x7ffffffffffffff8
mov rdi, r15
mov qword [var_8h], rcx
call _Znwm
mov rdi, qword [r12]
mov rdx, qword [r12 + 8]
mov rsi, qword [r12 + 0x10]
mov rcx, qword [var_8h]
mov r14, rax
add r15, rax
jmp 0x800dfbe
nop dword [rax]
cmp rax, r9
cmova rax, r9
lea r15, [rax + rax*2]
shl r15, 3
jmp 0x800e0aa
nop dword [rax]
mov qword [r12 + 8], r9
jmp 0x800deb1
lea rdi, [0x0800e101]
call _ZSt20__throw_length_errorPKc
