push r14
lea rax, [0x08000699]
push r13
push r12
push rbp
push rbx
mov r12, qword [rdi + 0x20]
mov rbx, rdi
mov qword [rdi], rax
test r12, r12
je 0x800073a
mov rbp, qword [r12 + 0x78]
test rbp, rbp
je 0x80006db
mov rdi, qword [arg_18h]
call method std::_Rb_tree<boost::archive::object_id_type, boost::archive::object_id_type, std::_Identity<boost::archive::object_id_type>, std::less<boost::archive::object_id_type>, std::allocator<boost::archive::object_id_type> >::_M_erase(std::_Rb_tree_node<boost::archive::object_id_type>*) [clone .isra.0]
mov rdi, rbp
mov rbp, qword [arg_10h]
mov esi, 0x28
call _ZdlPvm
test rbp, rbp
jne 0x80006bc
mov rbp, qword [r12 + 0x48]
test rbp, rbp
je 0x8000704
mov rdi, qword [arg_18h]
call method std::_Rb_tree<boost::archive::detail::basic_oarchive_impl::cobject_type, boost::archive::detail::basic_oarchive_impl::cobject_type, std::_Identity<boost::archive::detail::basic_oarchive_impl::cobject_type>, std::less<boost::archive::detail::basic_oarchive_impl::cobject_type>, std::allocator<boost::archive::detail::basic_oarchive_impl::cobject_type> >::_M_erase(std::_Rb_tree_node<boost::archive::detail::basic_oarchive_impl::cobject_type>*) [clone .isra.0]
mov rdi, rbp
mov rbp, qword [arg_10h]
mov esi, 0x30
call _ZdlPvm
test rbp, rbp
jne 0x80006e5
mov rbp, qword [r12 + 0x18]
test rbp, rbp
je 0x800072d
mov rdi, qword [arg_18h]
call method std::_Rb_tree<boost::archive::detail::basic_oarchive_impl::aobject, boost::archive::detail::basic_oarchive_impl::aobject, std::_Identity<boost::archive::detail::basic_oarchive_impl::aobject>, std::less<boost::archive::detail::basic_oarchive_impl::aobject>, std::allocator<boost::archive::detail::basic_oarchive_impl::aobject> >::_M_erase(std::_Rb_tree_node<boost::archive::detail::basic_oarchive_impl::aobject>*) [clone .isra.0]
mov rdi, rbp
mov rbp, qword [arg_10h]
mov esi, 0x30
call _ZdlPvm
test rbp, rbp
jne 0x800070e
mov esi, 0xa8
mov rdi, r12
call _ZdlPvm
mov r13, qword [rbx + 0x10]
mov r12, qword [rbx + 8]
cmp r13, r12
je 0x80007a4
lea r14, [0x0800074e]
jmp 0x8000759
add r12, 0x18
cmp r13, r12
je 0x80007a0
mov rbp, qword [r12 + 0x10]
test rbp, rbp
je 0x8000750
lock sub dword [arg_8h], 1
jne 0x8000750
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x8000750
mov rax, qword [rbp]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r14
jne 0x80007d0
call qword [rax + 8]
add r12, 0x18
cmp r13, r12
jne 0x8000759
nop word [rax + rax]
mov r12, qword [rbx + 8]
test r12, r12
je 0x80007c0
mov rsi, qword [rbx + 0x18]
mov rdi, r12
pop rbx
pop rbp
sub rsi, r12
pop r12
pop r13
pop r14
jmp _ZdlPvm
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
call rdx
jmp 0x8000750
