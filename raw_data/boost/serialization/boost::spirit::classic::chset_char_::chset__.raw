push rbp
push rbx
mov rbx, rdi
mov edi, 0x20
sub rsp, 8
call _Znwm
pxor xmm0, xmm0
mov edi, 0x18
mov qword [rbx + 8], 0
mov qword [rbx], rax
mov rbp, rax
movups xmmword [rax], xmm0
movups xmmword [rax + 0x10], xmm0
call _Znwm
mov qword [rax + 0x10], rbp
mov rdx, qword [0x08006631]
lea rsi, [0x08006638]
mov rbp, qword [rbx + 8]
mov qword [rax], rsi
mov qword [rax + 8], rdx
mov qword [rbx + 8], rax
test rbp, rbp
je 0x8006653
lock sub dword [arg_8h], 1
je 0x8006660
add rsp, 8
pop rbx
pop rbp
ret
nop word [rax + rax]
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
jne 0x8006653
mov rax, qword [rbp]
lea rcx, [0x0800667c]
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x8006694
mov rax, qword [rax + 8]
add rsp, 8
mov rdi, rbp
pop rbx
pop rbp
jmp rax
mov rdi, rbp
call rdx
jmp 0x8006653
