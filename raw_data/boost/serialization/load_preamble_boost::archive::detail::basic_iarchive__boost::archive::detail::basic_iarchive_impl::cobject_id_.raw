cmp byte [rdx + 0x15], 0
jne 0x80003c0
push r12
mov r12, rdi
push rbp
mov rbp, rsi
push rbx
mov rbx, rdx
sub rsp, 0x10
mov rdi, qword [rdx]
mov rax, qword [rdi]
call qword [rax + 0x18]
test al, al
jne 0x80003c8
mov rdi, qword [rbx]
mov esi, dword [r12 + 4]
mov rax, qword [rdi]
call qword [rax + 0x20]
mov rsi, qword [rbx]
lea rdi, [var_ch]
mov byte [rbx + 0x14], al
mov rax, qword [rsi]
call qword [rax + 0x28]
mov eax, dword [var_ch]
mov byte [rbx + 0x15], 1
mov dword [rbx + 0x10], eax
add rsp, 0x10
pop rbx
pop rbp
pop r12
ret
nop word [rax + rax]
ret
nop dword [rax]
xor eax, eax
lea rsi, [var_ch]
mov rdi, rbp
mov word [var_ch], ax
mov rax, qword [rbp]
call qword [rax + 0x18]
mov rax, qword [rbp]
lea rsi, [rbx + 0x14]
mov rdi, rbp
call qword [rax + 0x28]
mov rax, qword [rbp]
lea rsi, [rbx + 0x10]
mov rdi, rbp
call qword [rax]
mov byte [rbx + 0x15], 1
add rsp, 0x10
pop rbx
pop rbp
pop r12
ret
