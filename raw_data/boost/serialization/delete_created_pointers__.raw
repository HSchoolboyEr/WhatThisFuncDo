push rbp
push rbx
sub rsp, 8
mov rbp, qword [rdi + 0x20]
mov rax, qword [arg_10h]
mov rbx, qword [arg_8h]
cmp rbx, rax
je 0x80007d1
nop word [rax + rax]
cmp byte [rbx + 8], 0
je 0x80007e0
movsx rax, word [rbx + 0xa]
mov rdx, qword [arg_60h]
add rbx, 0x10
mov rsi, qword [rbx - 0x10]
lea rax, [rax + rax*2]
lea rax, [rdx + rax*8]
mov rdi, qword [rax]
mov rax, qword [rdi]
call qword [rax + 0x38]
mov rax, qword [arg_10h]
cmp rax, rbx
jne 0x80007a0
add rsp, 8
pop rbx
pop rbp
ret
nop dword [rax + rax]
add rbx, 0x10
cmp rax, rbx
jne 0x80007a0
add rsp, 8
pop rbx
pop rbp
ret
