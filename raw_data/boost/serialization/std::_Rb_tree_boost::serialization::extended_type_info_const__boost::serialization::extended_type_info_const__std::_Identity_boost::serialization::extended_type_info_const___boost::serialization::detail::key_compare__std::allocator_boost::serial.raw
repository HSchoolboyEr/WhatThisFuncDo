push r13
push r12
push rbp
lea rbp, [rdi + 8]
push rbx
sub rsp, 8
mov rbx, qword [rdi + 0x10]
test rbx, rbx
je 0x8000920
mov r13, qword [rsi]
mov r12, rbp
jmp 0x80008b9
nop
mov rbx, qword [rbx + 0x18]
test rbx, rbx
je 0x80008e4
mov rax, qword [rbx + 0x20]
cmp r13, rax
je 0x80008d8
mov rdi, qword [rax + 0x10]
mov rsi, qword [r13 + 0x10]
cmp rdi, rsi
je 0x80008d8
call strcmp
test eax, eax
js 0x80008b0
mov r12, rbx
mov rbx, qword [rbx + 0x10]
test rbx, rbx
jne 0x80008b9
cmp rbp, r12
je 0x800090b
mov rax, qword [r12 + 0x20]
cmp rax, r13
je 0x800090b
mov rdi, qword [r13 + 0x10]
mov rsi, qword [rax + 0x10]
cmp rdi, rsi
je 0x800090b
call strcmp
test eax, eax
cmovs r12, rbp
add rsp, 8
mov rax, r12
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
add rsp, 8
mov r12, rbp
pop rbx
mov rax, r12
pop rbp
pop r12
pop r13
ret
