mov r10, qword [rsi]
mov r8, rdi
mov rax, 0xffffffffffffffff
mov rdi, qword [r10]
cmp rdi, qword [rsi + 8]
je 0x8003e08
mov rax, qword [r8 + 8]
push rbx
mov rbx, qword [rax + 8]
mov r11, qword [rax]
cmp rbx, r11
je 0x8003de3
mov rax, rbx
mov r9d, dword [rdi]
mov rsi, r11
sub rax, r11
sar rax, 3
nop dword [rax + rax]
test rax, rax
jle 0x8003db4
mov rdx, rax
sar rdx, 1
lea rcx, [rsi + rdx*8]
cmp r9d, dword [rcx]
jle 0x8003e00
sub rax, rdx
lea rsi, [rcx + 8]
sub rax, 1
test rax, rax
jg 0x8003d95
cmp rbx, rsi
je 0x8003ddd
cmp r9d, dword [rsi]
jl 0x8003dd8
cmp r9d, dword [rsi + 4]
jg 0x8003dd8
add rdi, 4
mov eax, 1
mov qword [r10], rdi
pop rbx
ret
nop word [rax + rax]
cmp r11, rsi
je 0x8003de3
cmp r9d, dword [rsi - 8]
jge 0x8003e10
movsx eax, byte [r8 + 0x18]
cmp eax, dword [rdi]
je 0x8003dc4
movsx eax, byte [r8 + 0x20]
cmp dword [rdi], eax
je 0x8003e20
mov rax, 0xffffffffffffffff
pop rbx
ret
nop
mov rax, rdx
jmp 0x8003d90
nop dword [rax]
ret
nop dword [rax]
cmp r9d, dword [rsi - 4]
jg 0x8003de3
jmp 0x8003dc4
nop dword [rax + rax]
add rdi, 4
mov eax, 1
mov qword [r10], rdi
pop rbx
ret
