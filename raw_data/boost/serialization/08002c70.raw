push r12
xor r9d, r9d
push rbp
mov rbp, rdi
push rbx
mov r12, qword [rsi]
mov rbx, rsi
mov rdi, qword [r12]
cmp qword [rbx + 8], rdi
je 0x8002d0f
nop
mov rax, qword [arg_8h]
mov r11, qword [rax + 8]
mov r10, qword [rax]
cmp r11, r10
je 0x8002d0f
mov rax, r11
movsx r8d, byte [rdi]
mov rsi, r10
sub rax, r10
sar rax, 3
nop dword [rax]
test rax, rax
jle 0x8002cdc
mov rdx, rax
sar rdx, 1
lea rcx, [rsi + rdx*8]
cmp r8d, dword [rcx]
jle 0x8002d20
sub rax, rdx
lea rsi, [rcx + 8]
sub rax, 1
test rax, rax
jg 0x8002cbd
cmp r11, rsi
je 0x8002cf1
cmp r8d, dword [rsi]
jl 0x8002cec
cmp r8d, dword [rsi + 4]
jle 0x8002cfd
cmp r10, rsi
je 0x8002d0f
cmp r8d, dword [rsi - 8]
jl 0x8002d0f
cmp r8d, dword [rsi - 4]
jg 0x8002d0f
add rdi, 1
add r9, 1
mov qword [r12], rdi
cmp qword [rbx + 8], rdi
jne 0x8002c90
pop rbx
mov rax, r9
pop rbp
pop r12
ret
nop word [rax + rax]
mov rax, rdx
jmp 0x8002cb8
