push r15
push r14
push r13
mov r13, rdi
push r12
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x28
mov rax, qword [rdi + 8]
mov rsi, qword [rsi]
mov rdi, qword [rax]
mov rbp, qword [rsi]
test rdi, rdi
je 0x80052b8
mov rax, qword [rdi]
mov rsi, rbx
call qword [rax + 0x10]
mov rsi, qword [rbx]
mov r12, rax
test rax, rax
js 0x80052b8
mov rdi, qword [r13 + 0x18]
mov r8, qword [r13 + 0x10]
cmp rdi, r8
je 0x80052c0
mov rax, qword [rsi]
mov rdx, r8
jmp 0x8005297
nop
movsx ecx, byte [rdx]
cmp ecx, dword [rax]
jne 0x800529d
add rax, 4
add rdx, 1
mov qword [rsi], rax
cmp rdi, rdx
je 0x80052c0
cmp rax, qword [rbx + 8]
jne 0x8005280
add rsp, 0x28
mov rax, 0xffffffffffffffff
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov qword [rsi], rbp
xor r12d, r12d
jmp 0x800526a
sub rdi, r8
js 0x800529d
lea rax, [rdi + r12]
mov qword [var_10h], rax
mov rax, qword [r13 + 0x20]
mov rdi, qword [rax]
test rdi, rdi
je 0x800529d
mov rax, qword [rdi]
mov r14, qword [rsi]
mov rsi, rbx
call qword [rax + 0x10]
mov qword [var_18h], rax
test rax, rax
js 0x800529d
mov rax, qword [rbx]
mov rdi, qword [r13 + 0x28]
xor edx, edx
xor esi, esi
mov r12, qword [rax]
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEmw
cmp r14, r12
je 0x800534f
mov rbp, qword [r13 + 0x28]
mov r15, qword [arg_8h]
mov rdx, qword [rbp]
lea rcx, [arg_10h]
mov r10d, dword [r14]
lea r9, [r15 + 1]
cmp rdx, rcx
je 0x8005410
mov rcx, qword [arg_10h]
cmp r9, rcx
ja 0x80053c0
add r14, 4
mov dword [rdx + r15*4], r10d
mov qword [arg_8h], r9
mov dword [rdx + r15*4 + 4], 0
cmp r12, r14
jne 0x800530c
mov rax, qword [r13 + 0x30]
mov rdx, qword [rbx]
mov r12, qword [var_10h]
add r12, qword [var_18h]
mov rdi, qword [rax]
mov rbp, qword [rdx]
test rdi, rdi
je 0x800541d
mov rax, qword [rdi]
mov rsi, rbx
call qword [rax + 0x10]
test rax, rax
js 0x800541a
mov rdx, qword [rbx]
add r12, rax
mov rax, qword [rdx]
cmp rax, qword [rbx + 8]
je 0x800529d
movsx ecx, byte [r13 + 0x38]
cmp dword [rax], ecx
jne 0x800529d
add rax, 4
mov qword [rdx], rax
add rsp, 0x28
lea rax, [r12 + 1]
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
xor edx, edx
mov r8d, 1
xor ecx, ecx
mov rsi, r15
mov rdi, rbp
mov qword [var_8h], r9
add r14, 4
mov dword [var_4h], r10d
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEmmPKwm
mov rdx, qword [rbp]
mov r10d, dword [var_4h]
mov r9, qword [var_8h]
mov dword [rdx + r15*4], r10d
mov qword [arg_8h], r9
mov dword [rdx + r15*4 + 4], 0
cmp r12, r14
jne 0x8005308
jmp 0x800534f
mov ecx, 3
jmp 0x800532c
mov rdx, qword [rbx]
mov qword [rdx], rbp
jmp 0x8005387
