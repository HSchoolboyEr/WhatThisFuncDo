push r15
push r14
xor r14d, r14d
push r13
xor r13d, r13d
push r12
xor r12d, r12d
push rbp
mov rbp, rsi
push rbx
xor ebx, ebx
sub rsp, 0x18
mov r15, qword [rdi + 0x30]
mov rdi, rsi
call strlen
xor esi, esi
xor edx, edx
add rax, rbp
mov qword [var_8h], rax
test r12b, r12b
je 0x8000ba5
test r14b, r14b
je 0x8000c28
cmp rdx, rbx
je 0x8000c08
test r15, r15
je 0x8000b90
mov rdi, r15
mov qword [rsp], rdx
call _ZNSo3putEc
mov rax, qword [r15]
mov rdx, qword [rsp]
mov rax, qword [rax - 0x18]
mov eax, dword [r15 + rax + 0x20]
test eax, eax
je 0x8000b93
xor r15d, r15d
lea rax, [rbx + 1]
cmp rax, r13
jb 0x8000bf8
add rbp, 1
xor r13d, r13d
xor ebx, ebx
test r14b, r14b
jne 0x8000c68
cmp rdx, rbx
je 0x8000ca8
movsx esi, byte [rbp]
lea eax, [rsi - 0x22]
cmp al, 0x1c
ja 0x8000be8
lea rcx, [0x08000bc9]
movzx eax, al
movsxd rax, dword [rcx + rax*4]
add rax, rcx
jmp rax
nop dword [rax]
lea r13, [0x08000bdf]
lea rbx, [r13 - 6]
mov esi, 0x26
mov r12d, 1
jmp 0x8000b6b
nop dword [rax + rax]
movsx esi, byte [rbx + 1]
mov rbx, rax
jmp 0x8000b54
nop dword [rax]
cmp qword [var_8h], rbp
jne 0x8000b6b
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov rax, qword [var_8h]
movzx eax, byte [rax]
mov byte [rsp], al
sub eax, 0x22
cmp al, 0x1c
ja 0x8000c58
lea rdi, [0x08000c41]
movzx eax, al
movsxd rax, dword [rdi + rax*4]
add rax, rdi
jmp rax
lea rdx, [0x08000c54]
nop dword [rax]
mov r14d, 1
jmp 0x8000b62
nop dword [rax + rax]
movsx esi, byte [rbp]
lea eax, [rsi - 0x22]
cmp al, 0x1c
ja 0x8000c96
lea rdi, [0x08000c7a]
movzx eax, al
movsxd rax, dword [rdi + rax*4]
add rax, rdi
jmp rax
lea r13, [0x08000c8d]
lea rbx, [r13 - 6]
mov esi, 0x26
mov r12d, 1
jmp 0x8000b62
nop dword [rax]
cmp qword [var_8h], rbp
jne 0x8000bb7
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
