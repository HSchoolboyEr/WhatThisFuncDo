push r12
mov r10, rcx
push rbp
push rbx
mov rbp, qword [arg_20h]
mov r11, qword [arg_28h]
cmp rdx, rcx
je 0x800044d
cmp r9, rbp
je 0x800044d
lea r12, [0x0800037a]
movzx ecx, byte [rdx]
lea eax, [rcx - 0x80]
mov esi, ecx
cmp al, 0x3f
jbe 0x8000420
cmp cl, 0xfd
ja 0x8000420
add rdx, 1
cmp r10, rdx
sete al
test cl, cl
jns 0x8000438
lea eax, [rcx + 0x40]
cmp al, 0x1f
jbe 0x8000460
lea eax, [rcx + 0x20]
cmp al, 0xf
jbe 0x8000480
lea eax, [rcx + 0x10]
cmp al, 7
jbe 0x800046f
add esi, 8
cmp sil, 4
sbb ebx, ebx
add ebx, 5
cmp sil, 4
sbb rax, rax
and rax, 0xfffffffffffffffc
add rax, 0x14
sub ecx, dword [r12 + rax]
xor esi, esi
cmp r10, rdx
jne 0x8000414
jmp 0x800048f
nop dword [rax]
add rdx, 1
shl ecx, 6
add esi, 1
cmp r10, rdx
lea ecx, [rdi + rcx - 0x80]
sete al
cmp esi, ebx
je 0x8000438
test al, al
jne 0x8000430
movzx edi, byte [rdx]
mov eax, edi
add eax, 0xffffff80
cmp al, 0x3f
jbe 0x80003f8
mov qword [r8], rdx
mov eax, 2
mov qword [r11], r9
pop rbx
pop rbp
pop r12
ret
cmp esi, ebx
je 0x8000438
test al, al
jne 0x800048f
add r9, 4
mov dword [r9 - 4], ecx
cmp rbp, r9
je 0x800044d
test al, al
je 0x800037a
xor eax, eax
cmp r10, rdx
mov qword [r8], rdx
setne al
mov qword [r11], r9
jmp 0x800042b
nop dword [rax]
mov ebx, 1
mov eax, 4
jmp 0x80003e1
mov ebx, 3
mov eax, 0xc
jmp 0x80003e1
nop
mov ebx, 2
mov eax, 8
jmp 0x80003e1
movsxd rax, esi
not rax
add rdx, rax
mov eax, 1
mov qword [r8], rdx
mov qword [r11], r9
jmp 0x800042b
