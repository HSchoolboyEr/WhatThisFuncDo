push r15
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
mov edi, 0x20
sub rsp, 0x48
call _Znwm
pxor xmm0, xmm0
mov edi, 0x18
movups xmmword [rax], xmm0
mov rbp, rax
movups xmmword [rax + 0x10], xmm0
call _Znwm
mov qword [rax + 0x10], rbp
mov r14, rax
lea r15, [rax + 8]
mov edx, 0xa
mov r12, qword [0x08000bba]
lea r13, [0x08000bc1]
mov esi, 1
lea rdi, [0x08000bcd]
mov qword [rax], r13
mov r10d, 9
mov qword [rax + 8], r12
jmp 0x8000c04
nop dword [rax]
movzx eax, r10b
mov r11, rsi
mov ecx, r10d
shr rax, 6
shl r11, cl
or qword [rbp + rax*8], r11
test dl, dl
je 0x8000c6f
add rdi, 1
mov r10d, edx
movzx edx, byte [rdi]
cmp dl, 0x2d
jne 0x8000be0
movzx r8d, byte [rdi + 1]
lea r9, [rdi + 2]
test r8b, r8b
je 0x8000c51
movsx ecx, r10b
cmp r8b, r10b
jl 0x8000c49
movsx edi, r8b
add edi, 1
nop word [rax + rax]
movzx eax, cl
mov rdx, rsi
shl rdx, cl
shr rax, 6
add ecx, 1
or qword [rbp + rax*8], rdx
cmp ecx, edi
jne 0x8000c30
mov rdi, r9
mov r10d, r8d
jmp 0x8000c01
movzx eax, r10b
mov edx, 1
mov ecx, r10d
shr rax, 6
shl rdx, cl
or qword [rbp + rax*8], rdx
bts qword [rbp], 0x2d
lock add dword [r15], 1
mov rdi, qword [rbx + 0x168]
movq xmm0, rbp
movq xmm2, r14
punpcklqdq xmm0, xmm2
movups xmmword [rbx + 0x160], xmm0
test rdi, rdi
je 0x8000ca0
lock sub dword [rdi + 8], 1
je 0x80015df
lock sub dword [r15], 1
je 0x8001768
mov edi, 0x20
call _Znwm
pxor xmm0, xmm0
mov edi, 0x18
movups xmmword [rax], xmm0
mov rbp, rax
movups xmmword [rax + 0x10], xmm0
call _Znwm
mov qword [rax + 8], r12
mov r14, rax
lea r15, [rax + 8]
mov edx, 0x2d
mov qword [rax], r13
lea rdi, [0x08000ce7]
mov esi, 1
mov r10d, 0x41
mov qword [rax + 0x10], rbp
jmp 0x8000d24
nop dword [rax + rax]
movzx eax, r10b
mov r11, rsi
mov ecx, r10d
shr rax, 6
shl r11, cl
or qword [rbp + rax*8], r11
test dl, dl
je 0x8000d8f
add rdi, 1
mov r10d, edx
movzx edx, byte [rdi]
cmp dl, 0x2d
jne 0x8000d00
movzx r8d, byte [rdi + 1]
lea r9, [rdi + 2]
test r8b, r8b
je 0x8000d71
movsx ecx, r10b
cmp r8b, r10b
jl 0x8000d69
movsx edi, r8b
add edi, 1
nop word [rax + rax]
movzx eax, cl
mov rdx, rsi
shl rdx, cl
shr rax, 6
add ecx, 1
or qword [rbp + rax*8], rdx
cmp ecx, edi
jne 0x8000d50
mov rdi, r9
mov r10d, r8d
jmp 0x8000d21
movzx eax, r10b
mov edx, 1
mov ecx, r10d
shr rax, 6
shl rdx, cl
or qword [rbp + rax*8], rdx
bts qword [rbp], 0x2d
lock add dword [r15], 1
mov rdi, qword [rbx + 0x178]
movq xmm0, rbp
movq xmm1, r14
punpcklqdq xmm0, xmm1
movups xmmword [rbx + 0x170], xmm0
test rdi, rdi
je 0x8000dc0
lock sub dword [rdi + 8], 1
je 0x800161f
lock sub dword [r15], 1
je 0x80017a0
mov edi, 0x20
call _Znwm
pxor xmm0, xmm0
mov edi, 0x18
movups xmmword [rax], xmm0
mov rbp, rax
movups xmmword [rax + 0x10], xmm0
call _Znwm
mov qword [rax + 8], r12
mov r14, rax
lea r15, [rax + 8]
mov edx, 0x2d
mov qword [rax], r13
lea rdi, [0x08000e07]
mov esi, 1
mov r10d, 0x30
mov qword [rax + 0x10], rbp
jmp 0x8000e44
nop dword [rax + rax]
movzx eax, r10b
mov r9, rsi
mov ecx, r10d
shr rax, 6
shl r9, cl
or qword [rbp + rax*8], r9
test dl, dl
je 0x8000eaf
add rdi, 1
mov r10d, edx
movzx edx, byte [rdi]
cmp dl, 0x2d
jne 0x8000e20
movzx r8d, byte [rdi + 1]
lea r9, [rdi + 2]
test r8b, r8b
je 0x8000e91
movsx ecx, r10b
cmp r8b, r10b
jl 0x8000e89
movsx edi, r8b
add edi, 1
nop word [rax + rax]
movzx eax, cl
mov rdx, rsi
shl rdx, cl
shr rax, 6
add ecx, 1
or qword [rbp + rax*8], rdx
cmp ecx, edi
jne 0x8000e70
mov rdi, r9
mov r10d, r8d
jmp 0x8000e41
movzx eax, r10b
mov edx, 1
mov ecx, r10d
shr rax, 6
shl rdx, cl
or qword [rbp + rax*8], rdx
bts qword [rbp], 0x2d
lock add dword [r15], 1
mov rdi, qword [rbx + 0x188]
movq xmm0, rbp
movq xmm5, r14
punpcklqdq xmm0, xmm5
movups xmmword [rbx + 0x180], xmm0
test rdi, rdi
je 0x8000ee0
lock sub dword [rdi + 8], 1
je 0x800169f
lock sub dword [r15], 1
je 0x8001820
mov edi, 0x20
call _Znwm
pxor xmm0, xmm0
mov edi, 0x18
movups xmmword [rax], xmm0
mov rbp, rax
movups xmmword [rax + 0x10], xmm0
call _Znwm
mov r14, rax
lea r15, [rax + 8]
bts qword [var_10h], 0x37
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], rbp
lock add dword [r15], 1
mov rdi, qword [rbx + 0x1a8]
movq xmm0, rbp
movq xmm3, rax
punpcklqdq xmm0, xmm3
movups xmmword [rbx + 0x1a0], xmm0
test rdi, rdi
je 0x8000f56
lock sub dword [rdi + 8], 1
je 0x800165f
lock sub dword [r15], 1
je 0x80017e0
mov edi, 0x20
call _Znwm
pxor xmm0, xmm0
mov edi, 0x18
movups xmmword [rax], xmm0
mov rbp, rax
movups xmmword [rax + 0x10], xmm0
call _Znwm
mov qword [rax + 8], r12
mov r14, rax
lea r15, [rax + 8]
mov edx, 9
mov qword [rax], r13
lea rdi, [0x08000f9d]
mov esi, 1
mov r10d, 0x20
mov qword [rax + 0x10], rbp
jmp 0x8000fd4
nop
movzx eax, r10b
mov r11, rsi
mov ecx, r10d
shr rax, 6
shl r11, cl
or qword [rbp + rax*8], r11
test dl, dl
je 0x800103f
add rdi, 1
mov r10d, edx
movzx edx, byte [rdi]
cmp dl, 0x2d
jne 0x8000fb0
movzx r8d, byte [rdi + 1]
lea r9, [rdi + 2]
test r8b, r8b
je 0x8001021
movsx ecx, r10b
cmp r8b, r10b
jl 0x8001019
movsx edi, r8b
add edi, 1
nop word [rax + rax]
movzx eax, cl
mov rdx, rsi
shl rdx, cl
shr rax, 6
add ecx, 1
or qword [rbp + rax*8], rdx
cmp ecx, edi
jne 0x8001000
mov rdi, r9
mov r10d, r8d
jmp 0x8000fd1
movzx eax, r10b
mov edx, 1
mov ecx, r10d
shr rax, 6
shl rdx, cl
or qword [rbp + rax*8], rdx
bts qword [rbp], 0x2d
lock add dword [r15], 1
mov rdi, qword [rbx + 0x1b8]
movq xmm0, rbp
movq xmm4, r14
punpcklqdq xmm0, xmm4
movups xmmword [rbx + 0x1b0], xmm0
test rdi, rdi
je 0x8001070
lock sub dword [rdi + 8], 1
je 0x8001723
lock sub dword [r15], 1
je 0x80018a0
mov edi, 0x20
call _Znwm
pxor xmm0, xmm0
mov edi, 0x18
movups xmmword [rax], xmm0
mov rbp, rax
movups xmmword [rax + 0x10], xmm0
call _Znwm
lea rsi, [rax + 8]
mov qword [var_28h], rax
mov edx, 0x5f
lea rdi, [0x080010b2]
mov qword [var_8h], rsi
mov r10d, 0x2e
mov esi, 1
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], rbp
jmp 0x80010f4
nop
movzx eax, r10b
mov r15, rsi
mov ecx, r10d
shr rax, 6
shl r15, cl
or qword [rbp + rax*8], r15
test dl, dl
je 0x800115f
add rdi, 1
mov r10d, edx
movzx edx, byte [rdi]
cmp dl, 0x2d
jne 0x80010d0
movzx r8d, byte [rdi + 1]
lea r9, [rdi + 2]
test r8b, r8b
je 0x8001141
movsx ecx, r10b
cmp r8b, r10b
jl 0x8001139
movsx edi, r8b
add edi, 1
nop word [rax + rax]
movzx eax, cl
mov rdx, rsi
shl rdx, cl
shr rax, 6
add ecx, 1
or qword [rbp + rax*8], rdx
cmp ecx, edi
jne 0x8001120
mov rdi, r9
mov r10d, r8d
jmp 0x80010f1
movzx eax, r10b
mov edx, 1
mov ecx, r10d
shr rax, 6
shl rdx, cl
or qword [rbp + rax*8], rdx
bts qword [rbp], 0x2d
mov edi, 0x20
mov r14, qword [rbx + 0x170]
call _Znwm
movdqu xmm6, xmmword [r14]
movdqu xmm7, xmmword [r14 + 0x10]
mov edi, 0x18
mov r15, rax
movups xmmword [rax], xmm6
movups xmmword [rax + 0x10], xmm7
call _Znwm
lea rsi, [rax + 8]
mov qword [var_18h], rax
mov qword [var_10h], rsi
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], r15
mov eax, dword [rax + 8]
cmp eax, 1
je 0x80014fe
mov edi, 0x20
call _Znwm
movdqu xmm4, xmmword [r15]
movdqu xmm5, xmmword [r15 + 0x10]
mov edi, 0x18
mov r14, rax
movups xmmword [rax], xmm4
movups xmmword [rax + 0x10], xmm5
call _Znwm
mov qword [rsp], rax
mov rsi, qword [var_10h]
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], r14
lock sub dword [rsi], 1
je 0x8001563
movdqu xmm6, xmmword [r14]
movdqu xmm7, xmmword [r14 + 0x10]
mov edi, 0x20
mov rax, qword [rbx + 0x180]
movdqu xmm0, xmmword [rax]
por xmm0, xmm6
movups xmmword [r14], xmm0
movdqu xmm0, xmmword [rax + 0x10]
por xmm0, xmm7
movups xmmword [r14 + 0x10], xmm0
call _Znwm
movdqu xmm3, xmmword [r14]
movdqu xmm4, xmmword [r14 + 0x10]
mov edi, 0x18
mov r15, rax
movups xmmword [rax], xmm3
movups xmmword [rax + 0x10], xmm4
call _Znwm
lea rsi, [rax + 8]
mov qword [var_30h], rax
mov qword [var_18h], rsi
mov rsi, qword [rsp]
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], r15
lock sub dword [rsi + 8], 1
je 0x80018d7
mov edi, 0x20
call _Znwm
movdqu xmm5, xmmword [r15]
movdqu xmm1, xmmword [r15 + 0x10]
mov edi, 0x18
mov r14, rax
movups xmmword [rax], xmm5
movups xmmword [rax + 0x10], xmm1
call _Znwm
lea rsi, [rax + 8]
mov qword [var_20h], rax
mov qword [var_10h], rsi
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], r14
mov eax, dword [rax + 8]
cmp eax, 1
je 0x800150f
mov edi, 0x20
call _Znwm
movdqu xmm1, xmmword [r14]
movdqu xmm2, xmmword [r14 + 0x10]
mov edi, 0x18
mov r15, rax
movups xmmword [rax], xmm1
movups xmmword [rax + 0x10], xmm2
call _Znwm
mov qword [rsp], rax
mov rsi, qword [var_10h]
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], r15
lock sub dword [rsi], 1
je 0x80015a1
movdqu xmm0, xmmword [r15]
movdqu xmm2, xmmword [rbp]
mov edi, 0x20
movdqu xmm6, xmmword [r15 + 0x10]
por xmm0, xmm2
movups xmmword [r15], xmm0
movdqu xmm0, xmmword [var_10h]
por xmm0, xmm6
movups xmmword [r15 + 0x10], xmm0
call _Znwm
movdqu xmm7, xmmword [r15]
movdqu xmm3, xmmword [r15 + 0x10]
mov edi, 0x18
mov rbp, rax
movups xmmword [rax], xmm7
movups xmmword [rax + 0x10], xmm3
call _Znwm
lea rsi, [rax + 8]
mov qword [var_20h], rax
mov qword [var_10h], rsi
mov rsi, qword [rsp]
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], rbp
lock sub dword [rsi + 8], 1
je 0x8001913
mov edi, 0x20
call _Znwm
movdqu xmm4, xmmword [rbp]
movdqu xmm5, xmmword [var_10h]
mov edi, 0x18
mov r15, rax
movups xmmword [rax], xmm4
movups xmmword [rax + 0x10], xmm5
call _Znwm
mov r14, rax
lea rax, [rax + 8]
mov qword [rsp], rax
mov qword [r14 + 8], r12
mov qword [r14], r13
mov qword [r14 + 0x10], r15
mov eax, dword [r14 + 8]
cmp eax, 1
je 0x8001520
mov edi, 0x20
call _Znwm
movdqu xmm4, xmmword [r15]
movdqu xmm5, xmmword [r15 + 0x10]
mov edi, 0x18
mov rbp, rax
movups xmmword [rax], xmm4
movups xmmword [rax + 0x10], xmm5
call _Znwm
mov qword [rsp], rax
lea rsi, [r14 + 8]
mov qword [rax + 8], r12
mov qword [rax], r13
mov qword [rax + 0x10], rbp
lock sub dword [rsi], 1
je 0x800152c
movdqu xmm0, xmmword [rbp]
movdqu xmm2, xmmword [var_10h]
mov edi, 0x20
mov rax, qword [rbx + 0x1a0]
movdqu xmm1, xmmword [rax]
por xmm0, xmm1
movups xmmword [rbp], xmm0
movdqu xmm0, xmmword [rax + 0x10]
por xmm0, xmm2
movups xmmword [var_10h], xmm0
call _Znwm
movdqu xmm6, xmmword [rbp]
movdqu xmm7, xmmword [var_10h]
mov edi, 0x18
mov r14, rax
movups xmmword [rax], xmm6
movups xmmword [rax + 0x10], xmm7
call _Znwm
mov r15, rax
mov rsi, qword [rsp]
lea rax, [rax + 8]
mov qword [r15 + 8], r12
mov qword [r15], r13
mov qword [r15 + 0x10], r14
lock sub dword [rsi + 8], 1
je 0x800194f
lock add dword [rax], 1
mov rbp, qword [rbx + 0x1c8]
movq xmm0, r14
movq xmm3, r15
punpcklqdq xmm0, xmm3
movups xmmword [rbx + 0x1c0], xmm0
test rbp, rbp
je 0x80014b8
lock sub dword [var_8h], 1
je 0x80016df
lock sub dword [rax], 1
je 0x800199d
mov rbx, qword [var_10h]
lock sub dword [rbx], 1
je 0x80019d4
mov rbx, qword [var_18h]
lock sub dword [rbx], 1
je 0x8001a11
mov rbx, qword [var_8h]
lock sub dword [rbx], 1
je 0x8001857
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rax, qword [var_18h]
mov r14, r15
mov qword [rsp], rax
jmp 0x80011fb
mov rax, qword [var_20h]
mov r15, r14
mov qword [rsp], rax
jmp 0x800130d
mov qword [rsp], r14
mov rbp, r15
jmp 0x8001415
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x8001415
mov rdx, qword [r14]
lea rcx, [0x0800154b]
add byte [rax], al
add byte [rax], al
mov rdi, r14
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001aeb
call qword [rdx + 8]
jmp 0x8001415
mov r15, qword [var_18h]
mov rax, qword [r15]
mov rdi, r15
call qword [rax + 0x10]
lock sub dword [r15 + 0xc], 1
jne 0x80011fb
mov rdi, qword [var_18h]
lea rcx, [0x08001589]
mov rdx, qword [rdi]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001ae4
call qword [rdx + 8]
jmp 0x80011fb
mov r14, qword [var_20h]
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x800130d
mov rdi, qword [var_20h]
lea rcx, [0x080015c7]
mov rdx, qword [rdi]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001add
call qword [rdx + 8]
jmp 0x800130d
mov rax, qword [rdi]
mov qword [rsp], rdi
call qword [rax + 0x10]
mov rdi, qword [rsp]
mov eax, 0xffffffff
lock xadd dword [rdi + 0xc], eax
cmp eax, 1
jne 0x8000ca0
mov rdx, qword [rdi]
lea rcx, [0x0800160a]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001ad6
call qword [rdx + 8]
jmp 0x8000ca0
mov rax, qword [rdi]
mov qword [rsp], rdi
call qword [rax + 0x10]
mov rdi, qword [rsp]
mov eax, 0xffffffff
lock xadd dword [rdi + 0xc], eax
cmp eax, 1
jne 0x8000dc0
mov rdx, qword [rdi]
lea rcx, [0x0800164a]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001aaf
call qword [rdx + 8]
jmp 0x8000dc0
mov rax, qword [rdi]
mov qword [rsp], rdi
call qword [rax + 0x10]
mov rdi, qword [rsp]
mov eax, 0xffffffff
lock xadd dword [rdi + 0xc], eax
cmp eax, 1
jne 0x8000f56
mov rdx, qword [rdi]
lea rcx, [0x0800168a]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001aa8
call qword [rdx + 8]
jmp 0x8000f56
mov rax, qword [rdi]
mov qword [rsp], rdi
call qword [rax + 0x10]
mov rdi, qword [rsp]
mov eax, 0xffffffff
lock xadd dword [rdi + 0xc], eax
cmp eax, 1
jne 0x8000ee0
mov rdx, qword [rdi]
lea rcx, [0x080016ca]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001aa1
call qword [rdx + 8]
jmp 0x8000ee0
mov rdx, qword [rbp]
mov qword [rsp], rax
mov rdi, rbp
call qword [rdx + 0x10]
lock sub dword [var_ch], 1
mov rax, qword [rsp]
jne 0x80014b8
mov rcx, qword [rbp]
lea rsi, [0x08001707]
mov rdx, qword [rcx + 0x18]
cmp rdx, rsi
jne 0x8001ac4
mov rdi, rbp
call qword [rcx + 8]
mov rax, qword [rsp]
jmp 0x80014b8
mov rax, qword [rdi]
mov qword [rsp], rdi
call qword [rax + 0x10]
mov rdi, qword [rsp]
mov eax, 0xffffffff
lock xadd dword [rdi + 0xc], eax
cmp eax, 1
jne 0x8001070
mov rdx, qword [rdi]
lea rcx, [0x0800174e]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a9a
call qword [rdx + 8]
jmp 0x8001070
nop dword [rax + rax]
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x8000cab
mov rdx, qword [r14]
lea rcx, [0x08001787]
mov rdi, r14
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001abd
call qword [rdx + 8]
jmp 0x8000cab
nop
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x8000dcb
mov rdx, qword [r14]
lea rcx, [0x080017bf]
mov rdi, r14
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001ab6
call qword [rdx + 8]
jmp 0x8000dcb
nop word [rax + rax]
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x8000f61
mov rdx, qword [r14]
lea rcx, [0x080017ff]
mov rdi, r14
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a7e
call qword [rdx + 8]
jmp 0x8000f61
nop word [rax + rax]
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x8000eeb
mov rdx, qword [r14]
lea rcx, [0x0800183f]
mov rdi, r14
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a77
call qword [rdx + 8]
jmp 0x8000eeb
mov rbx, qword [var_28h]
mov rax, qword [rbx]
mov rdi, rbx
call qword [rax + 0x10]
lock sub dword [rbx + 0xc], 1
jne 0x80014ef
mov rdi, qword [var_28h]
lea rcx, [0x0800187c]
mov rdx, qword [rdi]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a85
mov rax, qword [rdx + 8]
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp rax
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x800107b
mov rdx, qword [r14]
lea rcx, [0x080018bf]
mov rdi, r14
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a4a
call qword [rdx + 8]
jmp 0x800107b
mov r14, qword [rsp]
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x8001278
mov rdi, qword [rsp]
lea rcx, [0x080018fb]
mov rdx, qword [rdi]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a70
call qword [rdx + 8]
jmp 0x8001278
mov r14, qword [rsp]
mov rax, qword [r14]
mov rdi, r14
call qword [rax + 0x10]
lock sub dword [r14 + 0xc], 1
jne 0x8001384
mov rdi, qword [rsp]
lea rcx, [0x08001937]
mov rdx, qword [rdi]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a69
call qword [rdx + 8]
jmp 0x8001384
mov rbp, qword [rsp]
mov qword [var_38h], rax
mov rdx, qword [rbp]
mov rdi, rbp
call qword [rdx + 0x10]
lock sub dword [var_ch], 1
mov rax, qword [var_38h]
jne 0x8001488
mov rdi, qword [rsp]
lea rsi, [0x0800197d]
mov rcx, qword [rdi]
mov rdx, qword [rcx + 0x18]
cmp rdx, rsi
jne 0x8001a58
mov qword [rsp], rax
call qword [rcx + 8]
mov rax, qword [rsp]
jmp 0x8001488
mov rax, qword [r15]
mov rdi, r15
call qword [rax + 0x10]
lock sub dword [r15 + 0xc], 1
jne 0x80014c2
mov rdx, qword [r15]
lea rcx, [0x080019bc]
mov rdi, r15
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a51
call qword [rdx + 8]
jmp 0x80014c2
mov rbx, qword [var_20h]
mov rax, qword [rbx]
mov rdi, rbx
call qword [rax + 0x10]
lock sub dword [rbx + 0xc], 1
jne 0x80014d1
mov rdi, qword [var_20h]
lea rcx, [0x080019f9]
mov rdx, qword [rdi]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a8c
call qword [rdx + 8]
jmp 0x80014d1
mov rbx, qword [var_30h]
mov rax, qword [rbx]
mov rdi, rbx
call qword [rax + 0x10]
lock sub dword [rbx + 0xc], 1
jne 0x80014e0
mov rdi, qword [var_30h]
lea rcx, [0x08001a36]
mov rdx, qword [rdi]
mov rax, qword [rdx + 0x18]
cmp rax, rcx
jne 0x8001a93
call qword [rdx + 8]
jmp 0x80014e0
call rax
jmp 0x800107b
call rax
jmp 0x80014c2
mov qword [var_38h], rax
call rdx
mov rax, qword [var_38h]
jmp 0x8001488
call rax
jmp 0x8001384
call rax
jmp 0x8001278
call rax
jmp 0x8000eeb
call rax
jmp 0x8000f61
call rax
jmp 0x80014ef
call rax
jmp 0x80014d1
call rax
jmp 0x80014e0
call rax
jmp 0x8001070
call rax
jmp 0x8000ee0
call rax
jmp 0x8000f56
call rax
jmp 0x8000dc0
call rax
jmp 0x8000dcb
call rax
jmp 0x8000cab
mov qword [rsp], rax
mov rdi, rbp
call rdx
mov rax, qword [rsp]
jmp 0x80014b8
call rax
jmp 0x8000ca0
call rax
jmp 0x800130d
call rax
jmp 0x80011fb
call rax
jmp 0x8001415
