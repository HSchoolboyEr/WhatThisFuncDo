push r13
mov r13, rdi
push r12
push rbp
push rbx
mov rbx, rsi
sub rsp, 8
mov rsi, qword [rdi + 0x10]
mov r8, qword [rdi + 8]
mov rdi, qword [rbx]
cmp rsi, r8
je 0x8003ae0
mov rax, qword [rdi]
mov rdx, r8
jmp 0x8003ac7
nop dword [rax + rax]
movsx ecx, byte [rdx]
cmp ecx, dword [rax]
jne 0x8003acd
add rax, 4
add rdx, 1
mov qword [rdi], rax
cmp rsi, rdx
je 0x8003ae0
cmp qword [rbx + 8], rax
jne 0x8003ab0
add rsp, 8
mov rax, 0xffffffffffffffff
pop rbx
pop rbp
pop r12
pop r13
ret
nop
sub rsi, r8
mov r12, rsi
js 0x8003acd
mov rax, qword [r13 + 0x18]
mov rdi, qword [rax]
test rdi, rdi
je 0x8003acd
mov rax, qword [rdi]
mov rsi, rbx
call qword [rax + 0x10]
mov rbp, rax
test rax, rax
js 0x8003acd
mov rdx, qword [rbx]
add rbp, r12
mov rax, qword [rdx]
cmp rax, qword [rbx + 8]
je 0x8003acd
mov esi, dword [r13 + 0x20]
cmp dword [rax], esi
jne 0x8003acd
add rax, 4
add rbp, 1
mov qword [rdx], rax
mov rax, qword [r13 + 0x28]
mov rdi, qword [rax]
test rdi, rdi
je 0x8003acd
mov rax, qword [rdi]
mov rsi, rbx
call qword [rax + 0x10]
test rax, rax
js 0x8003acd
mov rcx, qword [rbx]
add rax, rbp
mov rdx, qword [rcx]
cmp rdx, qword [rbx + 8]
je 0x8003acd
mov ebx, dword [r13 + 0x30]
cmp dword [rdx], ebx
jne 0x8003acd
add rdx, 4
add rax, 1
mov qword [rcx], rdx
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
ret
