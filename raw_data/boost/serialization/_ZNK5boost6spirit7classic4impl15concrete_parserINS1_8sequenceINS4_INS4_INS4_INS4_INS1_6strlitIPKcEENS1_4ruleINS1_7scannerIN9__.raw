push r15
push r14
push r13
mov r13, rdi
push r12
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x28
mov rsi, qword [rdi + 0x10]
mov r8, qword [rdi + 8]
mov rdi, qword [rbx]
cmp rsi, r8
je 0x8003208
mov rax, qword [rdi]
mov rdx, r8
jmp 0x80031e7
nop dword [rax]
movsx ecx, byte [rdx]
cmp ecx, dword [rax]
jne 0x80031ed
add rax, 4
add rdx, 1
mov qword [rdi], rax
cmp rsi, rdx
je 0x8003208
cmp qword [rbx + 8], rax
jne 0x80031d0
add rsp, 0x28
mov rax, 0xffffffffffffffff
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
sub rsi, r8
mov rbp, rsi
js 0x80031ed
mov rax, qword [r13 + 0x18]
mov rdi, qword [rax]
test rdi, rdi
je 0x80031ed
mov rax, qword [rdi]
mov rsi, rbx
call qword [rax + 0x10]
test rax, rax
js 0x80031ed
add rbp, rax
mov rax, qword [r13 + 0x20]
mov rdi, qword [rax]
test rdi, rdi
je 0x80031ed
mov rax, qword [rdi]
mov rsi, rbx
call qword [rax + 0x10]
test rax, rax
js 0x80031ed
mov r12, qword [rbx]
lea rsi, [rax + rbp]
mov rax, qword [r12]
cmp rax, qword [rbx + 8]
je 0x80031ed
mov ecx, dword [r13 + 0x28]
cmp dword [rax], ecx
jne 0x80031ed
lea rbp, [rax + 4]
lea r15, [rsi + 1]
mov qword [r12], rbp
cmp rbp, qword [rbx + 8]
je 0x80031ed
mov edx, dword [rax + 4]
cmp edx, 0x2d
je 0x800337f
cmp edx, 0x2b
je 0x8003362
mov rdx, rbp
xor r14d, r14d
mov qword [var_18h], 0
xor r8d, r8d
mov edi, dword [rdx]
mov dword [var_4h], r8d
mov qword [var_10h], rdx
mov dword [var_8h], edi
call iswdigit
mov r8d, dword [var_4h]
test eax, eax
je 0x800330b
cmp r8d, 0xccccccc
mov edi, dword [var_8h]
mov rdx, qword [var_10h]
jg 0x80032e3
sub edi, 0x30
lea r8d, [r8 + r8*4]
mov eax, 0x7fffffff
add r8d, r8d
sub eax, edi
cmp r8d, eax
jle 0x80032f0
mov qword [r12], rbp
jmp 0x80031ed
nop dword [rax]
add rdx, 4
add qword [var_18h], 1
add r8d, edi
add r14, 1
mov qword [r12], rdx
cmp qword [rbx + 8], rdx
jne 0x800329d
cmp qword [var_18h], 0
setne al
test al, al
je 0x80032e3
test r14, r14
js 0x80031ed
mov rax, qword [r13 + 0x38]
mov rdx, qword [r12]
mov word [rax], r8w
lea rax, [r15 + r14]
cmp rdx, qword [rbx + 8]
je 0x80031ed
mov ebx, dword [r13 + 0x40]
cmp dword [rdx], ebx
jne 0x80031ed
add rdx, 4
add rax, 1
mov qword [r12], rdx
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
lea rdx, [rax + 8]
mov r14d, 1
mov qword [r12], rdx
cmp qword [rbx + 8], rdx
jne 0x8003291
jmp 0x80032e3
lea rcx, [rax + 8]
mov r14d, 1
xor r8d, r8d
mov qword [r12], rcx
cmp rcx, qword [rbx + 8]
je 0x80032e3
mov edx, dword [rcx]
mov dword [var_10h], r8d
mov qword [var_8h], rcx
mov edi, edx
mov dword [var_4h], edx
call iswdigit
mov r8d, dword [var_10h]
test eax, eax
je 0x8003403
cmp r8d, 0xf3333334
mov edx, dword [var_4h]
mov rcx, qword [var_8h]
jl 0x80032e3
lea r8d, [r8 + r8*4]
lea eax, [rdx + 0x7fffffd0]
add r8d, r8d
cmp r8d, eax
jl 0x80032e3
lea eax, [rdx - 0x30]
add rcx, 4
lea rdx, [r14 + 1]
mov qword [r12], rcx
sub r8d, eax
cmp qword [rbx + 8], rcx
je 0x800340f
mov r14, rdx
jmp 0x800339a
cmp r14, 1
setne al
jmp 0x8003314
test r14, r14
mov r14, rdx
setne al
jmp 0x8003314
