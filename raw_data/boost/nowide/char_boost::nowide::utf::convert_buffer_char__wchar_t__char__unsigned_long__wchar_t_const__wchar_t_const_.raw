mov r8, rdi
mov rdi, rsi
mov r9, rcx
mov rsi, rdx
test rdi, rdi
je 0x8000318
sub rdi, 1
mov rcx, r8
cmp r9, rdx
je 0x80002e5
nop dword [rax]
mov eax, dword [rsi]
add rsi, 4
cmp eax, 0x10ffff
ja 0x80002b0
lea edx, [rax - 0xd800]
cmp edx, 0x7ff
jbe 0x80002b0
cmp eax, 0x7f
jbe 0x80002f0
cmp eax, 0x7ff
jbe 0x800031b
cmp eax, 0xffff
ja 0x8000340
cmp rdi, 2
jbe 0x8000308
mov edx, eax
mov r10d, eax
and eax, 0x3f
shr edx, 6
shr r10d, 0xc
or eax, 0xffffff80
and edx, 0x3f
or r10d, 0xffffffe0
or edx, 0xffffff80
jmp 0x80002c6
nop word [rax + rax]
cmp rdi, 2
jbe 0x8000308
mov eax, 0xffffffbd
mov edx, 0xffffffbf
mov r10d, 0xffffffef
mov byte [rcx + 2], al
add rcx, 3
mov eax, 3
mov byte [rcx - 3], r10b
mov byte [rcx - 2], dl
sub rdi, rax
cmp r9, rsi
jne 0x8000248
mov byte [rcx], 0
mov rax, r8
ret
nop dword [rax]
test rdi, rdi
je 0x8000308
mov byte [rcx], al
add rcx, 1
mov eax, 1
jmp 0x80002d9
nop word [rax + rax]
xor r8d, r8d
mov byte [rcx], 0
mov rax, r8
ret
nop word [rax + rax]
xor eax, eax
ret
cmp rdi, 1
jbe 0x8000308
mov edx, eax
and eax, 0x3f
add rcx, 2
shr edx, 6
or eax, 0xffffff80
or edx, 0xffffffc0
mov byte [rcx - 1], al
mov eax, 2
mov byte [rcx - 2], dl
jmp 0x80002d9
cmp rdi, 3
jbe 0x8000308
mov edx, eax
add rcx, 4
shr edx, 0x12
or edx, 0xfffffff0
mov byte [rcx - 4], dl
mov edx, eax
shr edx, 0xc
and edx, 0x3f
or edx, 0xffffff80
mov byte [rcx - 3], dl
mov edx, eax
and eax, 0x3f
shr edx, 6
or eax, 0xffffff80
and edx, 0x3f
mov byte [rcx - 1], al
mov eax, 4
or edx, 0xffffff80
mov byte [rcx - 2], dl
jmp 0x80002d9
