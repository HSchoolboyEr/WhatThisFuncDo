movabs rcx, 0x7fffffffffffffff
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov r14, qword [rdi + 8]
mov r8, qword [rdi]
mov rax, r14
sub rax, r8
cmp rax, rcx
je .LC0
test rax, rax
mov r15, rdx
mov edx, 1
mov r12, rsi
cmovne rdx, rax
xor esi, esi
mov rbp, rdi
add rax, rdx
mov rdx, r12
setb sil
mov r13, rax
sub rdx, r8
test rsi, rsi
jne 0x80008a0
test rax, rax
js 0x80008a0
jne 0x80008a3
xor r13d, r13d
xor ebx, ebx
jmp 0x80008c5
nop dword [rax + rax]
mov r13, rcx
mov rdi, r13
mov qword [var_10h], rdx
mov qword [var_8h], r8
call _Znwm
mov r8, qword [var_8h]
mov rdx, qword [var_10h]
mov rbx, rax
add r13, rax
movzx eax, byte [r15]
mov r9, r14
lea r10, [rbx + rdx + 1]
mov r14, qword [arg_10h]
sub r9, r12
mov byte [rbx + rdx], al
lea r15, [r10 + r9]
test rdx, rdx
jg 0x8000918
test r9, r9
jg 0x8000960
test r8, r8
jne 0x8000946
movq xmm0, rbx
movq xmm1, r15
mov qword [arg_10h], r13
punpcklqdq xmm0, xmm1
movups xmmword [rbp], xmm0
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
mov rsi, r8
mov rdi, rbx
mov qword [var_18h], r9
mov qword [var_10h], r10
mov qword [var_8h], r8
call memmove
mov r9, qword [var_18h]
mov r8, qword [var_8h]
mov r10, qword [var_10h]
test r9, r9
jg 0x8000960
mov rsi, r14
mov rdi, r8
sub rsi, r8
call _ZdlPvm
jmp 0x80008ee
nop word cs:[rax + rax]
mov rdx, r9
mov rsi, r12
mov rdi, r10
mov qword [var_8h], r8
call memcpy
mov r8, qword [var_8h]
test r8, r8
je 0x80008ee
jmp 0x8000946
lea rdi, [0x0800098a]
call _ZSt20__throw_length_errorPKc
add byte [rax], al
add byte [rax], al
