push r13
push r12
mov r12, rsi
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x18
mov rbp, qword [rsi + 8]
test rbp, rbp
je 0x8008030
mov rax, qword [rbp]
lea rdi, [var_8h]
mov rsi, rbp
call qword [rax + 0x28]
mov rbp, qword [var_8h]
test rbp, rbp
je 0x8007fe0
mov rax, qword [rbp]
lea r13, [0x08007f55]
mov rdx, qword [rax + 0x18]
cmp rdx, r13
jne 0x8008010
add dword [arg_58h], 1
mov rdi, rbp
call qword [rax + 0x20]
mov rax, qword [r12 + 0x18]
mov rdi, qword [rbx + 8]
mov qword [rbx + 0x18], rax
mov eax, dword [r12 + 0x20]
mov dword [rbx + 0x20], eax
mov rax, qword [r12 + 0x10]
mov qword [rbx + 0x10], rax
mov eax, dword [r12 + 0x24]
mov dword [rbx + 0x24], eax
test rdi, rdi
je 0x8008060
mov rax, qword [rdi]
call qword [rax + 0x20]
mov qword [rbx + 8], rbp
test rbp, rbp
je 0x8007fcc
mov rax, qword [rbp]
lea r13, [0x08007fb5]
mov rdx, qword [rax + 0x18]
cmp rdx, r13
jne 0x8008075
add dword [arg_58h], 1
mov rdi, rbp
call qword [rax + 0x20]
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
nop word [rax + rax]
mov rax, qword [r12 + 0x18]
mov rdi, qword [rbx + 8]
mov qword [rbx + 0x18], rax
mov eax, dword [r12 + 0x20]
mov dword [rbx + 0x20], eax
mov rax, qword [r12 + 0x10]
mov qword [rbx + 0x10], rax
mov eax, dword [r12 + 0x24]
mov dword [rbx + 0x24], eax
test rdi, rdi
jne 0x8007f9b
jmp 0x8007fa1
nop dword [rax]
mov rdi, rbp
call rdx
mov rdi, qword [var_8h]
test rdi, rdi
je 0x8007fe0
mov rax, qword [rdi]
jmp 0x8007f69
nop word [rax + rax]
mov rax, qword [rsi + 0x18]
mov qword [rdi + 0x18], rax
mov eax, dword [rsi + 0x20]
mov dword [rdi + 0x20], eax
mov rax, qword [rsi + 0x10]
mov qword [rdi + 0x10], rax
mov eax, dword [rsi + 0x24]
mov dword [rdi + 0x24], eax
mov rdi, qword [rdi + 8]
test rdi, rdi
jne 0x8007f9b
jmp 0x8007fcc
nop
mov rax, qword [rbp]
mov qword [rbx + 8], rbp
mov rdx, qword [rax + 0x18]
cmp rdx, r13
je 0x8007fc2
mov rdi, rbp
call rdx
mov rax, qword [rbp]
jmp 0x8007fc6
