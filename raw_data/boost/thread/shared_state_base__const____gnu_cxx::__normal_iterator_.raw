push r15
push r14
movabs r14, 0x7ffffffffffffff
push r13
push r12
push rbp
push rbx
sub rsp, 0x18
mov r15, qword [rdi + 8]
mov r12, qword [rdi]
mov rax, r15
sub rax, r12
sar rax, 4
cmp rax, r14
je .LC41
mov rbx, rsi
mov rsi, rdx
mov edx, 1
mov rcx, rax
test rax, rax
mov rax, rdx
mov rdx, rbx
mov r13, rdi
cmovne rax, rcx
add rax, rcx
setb cl
sub rdx, r12
movzx ecx, cl
test rcx, rcx
jne 0x800a398
test rax, rax
jne 0x800a360
mov ecx, 0x10
xor r14d, r14d
xor ebp, ebp
movdqu xmm3, xmmword [rsi]
mov rax, qword [rsi + 8]
movups xmmword [rbp + rdx], xmm3
test rax, rax
je 0x800a29f
lock add dword [rax + 8], 1
cmp rbx, r12
je 0x800a3a8
lea rcx, [rbx - 0x10]
xor eax, eax
xor edx, edx
sub rcx, r12
shr rcx, 4
add rcx, 1
nop dword [rax + rax]
movdqu xmm1, xmmword [r12 + rax]
add rdx, 1
movups xmmword [rbp + rax], xmm1
add rax, 0x10
cmp rcx, rdx
ja 0x800a2c0
mov rax, rbx
sub rax, r12
lea rcx, [rbp + rax + 0x10]
cmp rbx, r15
je 0x800a321
mov rax, r15
xor edx, edx
sub rax, rbx
lea rsi, [rax - 0x10]
xor eax, eax
shr rsi, 4
add rsi, 1
nop
movdqu xmm2, xmmword [rbx + rax]
add rdx, 1
movups xmmword [rcx + rax], xmm2
add rax, 0x10
cmp rdx, rsi
jb 0x800a300
sub r15, rbx
add rcx, r15
test r12, r12
je 0x800a338
mov rsi, qword [r13 + 0x10]
mov rdi, r12
mov qword [rsp], rcx
sub rsi, r12
call _ZdlPvm
mov rcx, qword [rsp]
movq xmm0, rbp
movq xmm4, rcx
mov qword [r13 + 0x10], r14
punpcklqdq xmm0, xmm4
movups xmmword [r13], xmm0
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
cmp rax, r14
cmovbe r14, rax
shl r14, 4
mov rdi, r14
mov qword [var_8h_2], rsi
mov qword [rsp], rdx
call _Znwm
mov rdx, qword [rsp]
mov rsi, qword [var_8h_2]
mov rbp, rax
add r14, rax
lea rcx, [rax + 0x10]
jmp 0x800a288
nop dword [rax]
movabs r14, 0x7ffffffffffffff0
jmp 0x800a36b
nop dword [rax]
cmp rbx, r15
jne 0x800a2e8
jmp 0x800a31c
lea rdi, [0x0800a3bd]
call method void boost::throw_exception<boost::bad_function_call>(boost::bad_function_call const&)
add byte [rax], al
add byte [rax], al
