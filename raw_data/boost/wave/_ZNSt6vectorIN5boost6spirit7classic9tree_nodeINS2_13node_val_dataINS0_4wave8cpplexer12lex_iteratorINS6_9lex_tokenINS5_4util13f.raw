movabs rcx, 0x1c71c71c71c71c7
push r15
push r14
push r13
mov r13, rdx
push r12
push rbp
push rbx
sub rsp, 0x48
mov rdx, qword [rdi]
mov rax, qword [rdi + 8]
mov qword [var_38h], rdi
mov qword [var_18h], rax
sub rax, rdx
mov qword [var_28h], rdx
push rsp
and al, 0x28
sar rax, 3
movabs rdx, 0x8e38e38e38e38e39
imul rax, rdx
mov qword [var_10h], rsi
cmp rax, rcx
je .LC23
test rax, rax
mov edx, 1
mov r14, rsi
mov rbx, rsi
cmovne rdx, rax
add rax, rdx
setb dl
mov qword [var_30h], rax
and al, 0x30
sub r14, qword [var_28h]
movzx edx, dl
test rdx, rdx
jne 0x800aef6
test rax, rax
jne 0x800acb4
mov qword [var_20h], 0
mov rsi, qword [r13 + 8]
mov rcx, qword [r13]
pxor xmm0, xmm0
add r14, qword [var_20h]
je 0x800a8f8
and byte [rcx - 0x77], cl
test dword [rcx - 0x39], 0x1046
add byte [rax], al
movups xmmword [r14], xmm0
sub r15, rcx
je 0x800af0d
movabs rax, 0x7ffffffffffffff8
cmp r15, rax
ja _ZSt17__throw_bad_allocv
mov rdi, r15
call _Znwm
mov rsi, qword [r13 + 8]
mov rcx, qword [r13]
movq xmm0, rax
lea rdx, [rax + r15]
punpcklqdq xmm0, xmm0
mov qword [r14 + 0x10], rdx
movups xmmword [r14], xmm0
cmp rcx, rsi
je 0x800af14
sub rsi, rcx
add rsi, rax
nop dword [rax]
mov rdx, qword [rcx]
mov qword [rax], rdx
test rdx, rdx
je 0x800a948
lock add dword [rdx + 0x48], 1
add rax, 8
add rcx, 8
cmp rax, rsi
jne 0x800a938
movzx eax, byte [r13 + 0x18]
mov qword [r14 + 8], rsi
lea rdi, [r14 + 0x30]
lea rsi, [r13 + 0x30]
mov byte [r14 + 0x18], al
mov rax, qword [r13 + 0x20]
mov qword [r14 + 0x20], rax
call _ZNSt6vectorIN5boost6spirit7classic9tree_nodeINS2_13node_val_dataINS0_4wave8cpplexer12lex_iteratorINS6_9lex_tokenINS5_4util13file_positionINS9_11flex_stringIcSt11char_traitsIcESaIcENS9_9CowStringINS9_22AllocatorStringStorageIcSE_EEPcEEEEEEEEEENS2_5nil_tE
mov r13, qword [var_28h]
insb byte [rdi], dx
and al, 0x28
mov r15, qword [var_20h]
jl 0x800a9a4
and byte [rcx + rdi + 0x6c], cl
and al, 0x10
je 0x800aaec
nop dword [rax]
movdqu xmm3, xmmword [r13]
pxor xmm1, xmm1
lea rdi, [r13 + 0x30]
movups xmmword [r15], xmm3
mov rax, qword [r13 + 0x10]
mov qword [r15 + 0x10], rax
movzx eax, byte [r13 + 0x18]
mov qword [r13 + 0x10], 0
movups xmmword [r13], xmm1
mov byte [r15 + 0x18], al
mov rax, qword [r13 + 0x20]
mov qword [r15 + 0x20], rax
movdqu xmm4, xmmword [r13 + 0x30]
outsd dx, dword [rsi]
xor byte gs:[rcx + 0xf], al
adc dword [rdi + 0x30], esp
mov rax, qword [r13 + 0x40]
mov qword [r15 + 0x40], rax
mov qword [r13 + 0x40], 0
movups xmmword [r13 + 0x30], xmm1
call _ZNSt6vectorIN5boost6spirit7classic9tree_nodeINS2_13node_val_dataINS0_4wave8cpplexer12lex_iteratorINS6_9lex_tokenINS5_4util13file_positionINS9_11flex_stringIcSt11char_traitsIcESaIcENS9_9CowStringINS9_22AllocatorStringStorageIcSE_EEPcEEEEEEEEEENS2_5nil_tE
mov r12, qword [r13 + 8]
mov r14, qword [r13]
cmp r12, r14
je 0x800aac1
nop
mov rax, qword [r14]
test rax, rax
je 0x800aab0
lock sub dword [rax + 0x48], 1
jne 0x800aab0
mov rbp, qword [r14]
test rbp, rbp
je 0x800aab0
cmp byte [arg_28h], 0
je 0x800aa37
mov rsi, qword [arg_30h]
sub byte [rsi + 0x10], 1
je 0x800aea0
mov rsi, qword [arg_10h]
sub byte [rsi + 0x10], 1
je 0x800adb0
mov rsi, qword [arg_8h]
sub byte [rsi + 0x10], 1
je 0x800ad20
cmp byte [0x0800aa5a], 0
je 0x800ad4e
mov rsi, qword [0x0800aa67]
test rsi, rsi
je 0x800aa8a
lea rdi, [0x0800aa73]
mov qword [var_8h], rsi
call pthread_mutex_lock
mov rsi, qword [var_8h]
test eax, eax
jne _ZSt20__throw_system_errori
mov rax, qword [0x0800aa91]
mov qword [rbp], rax
mov qword [0x0800aa9c], rbp
test rsi, rsi
je 0x800aab0
lea rdi, [0x0800aaa8]
call pthread_mutex_unlock
nop dword [rax]
add r14, 8
cmp r12, r14
jne 0x800aa00
mov r14, qword [r13]
test r14, r14
je 0x800ace0
mov rsi, qword [r13 + 0x10]
mov rdi, r14
add r13, 0x48
add r15, 0x48
sub rsi, r14
call _ZdlPvm
cmp qword [var_10h], r13
jne 0x800a990
mov rdi, qword [var_18h]
lea r13, [r15 + 0x48]
outsd dx, dword [rsi]
cmp qword [rsp + 0x10], rdi
je 0x800ac5b
mov rax, qword [rbx + 0x10]
movdqu xmm5, xmmword [rbx]
pxor xmm2, xmm2
lea rdi, [rbx + 0x30]
movdqu xmm6, xmmword [rbx + 0x30]
outsd dx, dword [rsi]
jae 0x800ab45
mov qword [rbx + 0x10], 0
mov qword [r13 + 0x10], rax
movzx eax, byte [rbx + 0x18]
movups xmmword [r13], xmm5
mov byte [r13 + 0x18], al
mov rax, qword [rbx + 0x20]
movups xmmword [rbx], xmm2
mov qword [r13 + 0x20], rax
mov rax, qword [rbx + 0x40]
mov qword [rbx + 0x40], 0
mov qword [r13 + 0x40], rax
movups xmmword [r13 + 0x30], xmm6
movups xmmword [rbx + 0x30], xmm2
call _ZNSt6vectorIN5boost6spirit7classic9tree_nodeINS2_13node_val_dataINS0_4wave8cpplexer12lex_iteratorINS6_9lex_tokenINS5_4util13file_positionINS9_11flex_stringIcSt11char_traitsIcESaIcENS9_9CowStringINS9_22AllocatorStringStorageIcSE_EEPcEEEEEEEEEENS2_5nil_tE
mov r15, qword [rbx + 8]
mov rbp, qword [rbx]
cmp r15, rbp
je 0x800ac30
nop word [rax + rax]
mov rax, qword [rbp]
test rax, rax
je 0x800ac20
lock sub dword [rax + 0x48], 1
jne 0x800ac20
mov r14, qword [rbp]
test r14, r14
je 0x800ac20
cmp byte [r14 + 0x28], 0
je 0x800abaa
mov rcx, qword [r14 + 0x30]
sub byte [rcx + 0x10], 1
je 0x800aed0
mov rcx, qword [r14 + 0x10]
sub byte [rcx + 0x10], 1
je 0x800ae70
mov rcx, qword [r14 + 8]
sub byte [rcx + 0x10], 1
je 0x800ae40
cmp byte [0x0800abcd], 0
je .LC4
mov rsi, qword [0x0800abda]
test rsi, rsi
je 0x800abfd
lea rdi, [0x0800abe6]
mov qword [var_8h], rsi
call pthread_mutex_lock
mov rsi, qword [var_8h]
test eax, eax
jne _ZSt20__throw_system_errori
mov rax, qword [0x0800ac04]
mov qword [r14], rax
mov qword [0x0800ac0e], r14
test rsi, rsi
je 0x800ac20
lea rdi, [0x0800ac1a]
call pthread_mutex_unlock
nop
add rbp, 8
cmp r15, rbp
jne 0x800ab70
mov rbp, qword [rbx]
test rbp, rbp
je 0x800ad00
mov rsi, qword [rbx + 0x10]
mov rdi, rbp
add rbx, 0x48
add r13, 0x48
sub rsi, rbp
call _ZdlPvm
cmp qword [var_18h], rbx
jne 0x800ab00
mov rax, qword [var_28h]
test rax, rax
je 0x800ac81
mov rbx, qword [var_38h]
pop rsp
and al, 0x38
mov rdi, rax
mov rbx, qword [rbx + 0x10]
mov rsi, rbx
mov qword [var_8h], rbx
pop rsp
and al, 8
sub rsi, rax
call _ZdlPvm
mov rax, qword [var_20h]
and al, 0x20
mov rbx, qword [var_38h]
pop rsp
and al, 0x38
movq xmm4, r13
movq xmm0, rax
add rax, qword [var_30h]
and al, 0x30
punpcklqdq xmm0, xmm4
mov qword [rbx + 0x10], rax
movups xmmword [rbx], xmm0
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
cmp rax, rcx
cmovbe rcx, rax
lea rax, [rcx + rcx*8]
shl rax, 3
mov qword [var_30h], rax
mov rdi, rax
call _Znwm
mov qword [var_20h], rax
jmp 0x800a8c4
nop word [rax + rax]
add r13, 0x48
add r15, 0x48
cmp r13, qword [rsp + 0x10]
jne 0x800a990
jmp 0x800aaec
nop dword [rax + rax]
add rbx, 0x48
add r13, 0x48
cmp rbx, qword [rsp + 0x18]
jne 0x800ab00
jmp 0x800ac5b
nop dword [rax + rax]
mov rdi, qword [arg_8h]
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
cmp rsi, rax
je _ZZN5boost14singleton_poolINS_4wave8cpplexer4impl14token_data_tagELj80ENS_33default_user_allocator_new_deleteESt5mutexLj32ELj0EE8get_poolEvE1f
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
cmp byte [0x0800ad48], 0
jne 0x800aa60
pxor xmm7, xmm7
pxor xmm0, xmm0
mov byte [0x0800ad5d], 1
movups xmmword [0x0800ad64], xmm7
movdqa xmm7, xmmword [0x0800ad6c]
mov qword [0x0800ad77], 0
movups xmmword [0x0800ad7e], xmm7
movdqa xmm7, xmmword [0x0800ad86]
mov qword [0x0800ad91], 0
movups xmmword [0x0800ad98], xmm0
movups xmmword [0x0800ad9f], xmm0
movups xmmword [0x0800ada6], xmm7
jmp 0x800aa60
nop dword [rax + rax]
mov rdi, qword [arg_10h]
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
cmp rsi, rax
je 0x800aa45
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
jmp 0x800aa45
nop word cs:[rax + rax]
movdqa xmm6, xmmword [0x0800ade8]
movdqa xmm3, xmmword [0x0800adf0]
pxor xmm0, xmm0
pxor xmm5, xmm5
mov byte [0x0800adff], 1
mov qword [0x0800ae0a], 0
mov qword [0x0800ae15], 0
movups xmmword [0x0800ae1c], xmm0
movups xmmword [0x0800ae23], xmm0
movups xmmword [0x0800ae2a], xmm5
movups xmmword [0x0800ae31], xmm6
movups xmmword [0x0800ae38], xmm3
jmp 0x800abd3
nop dword [rax]
mov rdi, qword [r14 + 8]
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
cmp rsi, rax
je _ZZN5boost14singleton_poolINS_4wave8cpplexer4impl14token_data_tagELj80ENS_33default_user_allocator_new_deleteESt5mutexLj32ELj0EE8get_poolEvE1f
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
jmp _ZZN5boost14singleton_poolINS_4wave8cpplexer4impl14token_data_tagELj80ENS_33default_user_allocator_new_deleteESt5mutexLj32ELj0EE8get_poolEvE1f
nop word cs:[rax + rax]
mov rdi, qword [r14 + 0x10]
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
cmp rsi, rax
je 0x800abb8
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
jmp 0x800abb8
nop word cs:[rax + rax]
mov rdi, qword [arg_30h]
mov rax, qword [rdi + 8]
lea rsi, [rdi + 0x10]
cmp rax, rsi
je 0x800aa37
sub rax, rsi
lea rsi, [rax + 0x18]
call _ZdlPvm
jmp 0x800aa37
nop word cs:[rax + rax]
mov rdi, qword [r14 + 0x30]
mov rax, qword [rdi + 8]
lea rcx, [rdi + 0x10]
cmp rax, rcx
je 0x800abaa
sub rax, rcx
lea rsi, [rax + 0x18]
call _ZdlPvm
jmp 0x800abaa
movabs rax, 0x7ffffffffffffff8
mov qword [var_30h], rax
and al, 0x30
mov rdi, rax
jmp _Znwm
xor eax, eax
jmp 0x800a910
mov rsi, rax
jmp 0x800a955
call _ZSt17__throw_bad_allocv
mov edi, eax
call _ZSt20__throw_system_errori
mov edi, eax
call _ZSt20__throw_system_errori
lea rdi, [0x0800af36]
call _ZSt20__throw_length_errorPKc
mov rbx, rax
jmp 0x800af45
mov rdi, rax
jmp __cxa_begin_catch
mov rdi, r14
call _ZNSt6vectorIN5boost4wave8cpplexer9lex_tokenINS1_4util13file_positionINS4_11flex_stringIcSt11char_traitsIcESaIcENS4_9CowStringINS4_22AllocatorStringStorageIcS9_EEPcEEEEEEEESaISH_EED1Ev
mov rdi, rbx
call __cxa_begin_catch
cmp qword [var_20h], 0
jne 0x800af73
lea rdi, [r14 + 0x30]
call _ZNSt6vectorIN5boost6spirit7classic9tree_nodeINS2_13node_val_dataINS0_4wave8cpplexer12lex_iteratorINS6_9lex_tokenINS5_4util13file_positionINS9_11flex_stringIcSt11char_traitsIcESaIcENS9_9CowStringINS9_22AllocatorStringStorageIcSE_EEPcEEEEEEEEEENS2_5nil_tE
mov rdi, r14
call _ZNSt6vectorIN5boost4wave8cpplexer9lex_tokenINS1_4util13file_positionINS4_11flex_stringIcSt11char_traitsIcESaIcENS4_9CowStringINS4_22AllocatorStringStorageIcS9_EEPcEEEEEEEESaISH_EED1Ev
call __cxa_rethrow
mov rsi, qword [var_30h]
je 0x800af9b
xor byte [rax - 0x75], cl
jl sym._ZN5boost6spirit7classic24common_tree_match_policyINS1_15pt_match_policyINS_4wave8cpplexer12lex_iteratorINS5_9lex_tokenINS4_4u
and al, ch
add byte [rax], al
add byte [rax], al
jmp __cxa_rethrow
