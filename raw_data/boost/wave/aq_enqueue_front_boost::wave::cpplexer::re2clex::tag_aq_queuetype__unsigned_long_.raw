push r12
mov r12, rsi
push rbp
push rbx
mov rbx, rdi
mov rbp, qword [rdi + 0x18]
mov rdi, qword [rdi + 0x20]
cmp qword [rbx + 0x10], rbp
je 0x80001a0
mov rdx, qword [rbx]
sub rbp, 1
lea rax, [rdx - 1]
test rdx, rdx
cmovne rbp, rax
mov eax, 1
mov qword [rbx], rbp
mov qword [rdi + rbp*8], r12
add qword [rbx + 0x10], 1
pop rbx
pop rbp
pop r12
ret
add rbp, rbp
lea rsi, [rbp*8]
call realloc
mov rdi, rax
test rax, rax
je 0x80001fc
mov qword [rbx + 0x20], rax
mov rdx, qword [rbx]
mov rax, qword [rbx + 8]
cmp rax, rdx
jbe 0x80001d0
mov qword [rbx + 0x18], rbp
jmp 0x800017b
nop
mov rdx, qword [rbx + 0x18]
mov rsi, rdi
lea r8, [rdi + rdx*8]
lea rdx, [rax*8 + 8]
mov rdi, r8
call memcpy
mov rax, qword [rbx + 0x18]
mov rdx, qword [rbx]
add qword [rbx + 8], rax
mov rdi, qword [rbx + 0x20]
jmp 0x80001c8
xor eax, eax
jmp 0x800019b
