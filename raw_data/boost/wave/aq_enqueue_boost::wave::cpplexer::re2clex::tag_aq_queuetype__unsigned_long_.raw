push r12
push rbp
mov rbp, rsi
push rbx
mov rbx, rdi
mov r12, qword [rdi + 0x18]
mov rdi, qword [rdi + 0x20]
cmp qword [rbx + 0x10], r12
je 0x8000100
mov rax, qword [rbx + 8]
lea rdx, [rax + 1]
cmp rdx, r12
je 0x80000f0
mov qword [rbx + 8], rdx
lea rdi, [rdi + rdx*8]
mov qword [rdi], rbp
mov eax, 1
add qword [rbx + 0x10], 1
pop rbx
pop rbp
pop r12
ret
nop
mov qword [rbx + 8], 0
jmp 0x80000dd
nop word [rax + rax]
add r12, r12
lea rsi, [r12*8]
call realloc
mov rdi, rax
test rax, rax
je 0x8000159
mov qword [rbx + 0x20], rax
mov rax, qword [rbx + 8]
lea rdx, [rax + 1]
cmp rax, qword [rbx]
jbe 0x8000130
mov qword [rbx + 0x18], r12
jmp 0x80000d0
nop
mov rax, qword [rbx + 0x18]
shl rdx, 3
mov rsi, rdi
lea r8, [rdi + rax*8]
mov rdi, r8
call memcpy
mov rdx, qword [rbx + 0x18]
add rdx, qword [rbx + 8]
mov rdi, qword [rbx + 0x20]
add rdx, 1
jmp 0x8000129
xor eax, eax
jmp 0x80000ea
