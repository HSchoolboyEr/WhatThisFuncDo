push r14
push r13
mov r13, rdi
push r12
push rbp
push rbx
mov r12, qword [rdi + 8]
mov rbp, qword [rdi]
cmp r12, rbp
je 0x8004b61
nop dword [rax + rax]
mov rax, qword [rbp]
test rax, rax
je 0x8004b50
lock sub dword [rax + 0x48], 1
jne 0x8004b50
mov rbx, qword [rbp]
test rbx, rbx
je 0x8004b50
cmp byte [rbx + 0x28], 0
je 0x8004ae5
mov rdx, qword [rbx + 0x30]
sub byte [rdx + 0x10], 1
je 0x8004c50
mov rdx, qword [rbx + 0x10]
sub byte [rdx + 0x10], 1
je 0x8004c20
mov rdx, qword [rbx + 8]
sub byte [rdx + 0x10], 1
je 0x8004bf0
cmp byte [0x08004b08], 0
je .LC4
mov r14, qword [0x08004b15]
test r14, r14
je 0x8004b2e
lea rdi, [0x08004b21]
call pthread_mutex_lock
test eax, eax
jne _ZSt20__throw_system_errori
mov rax, qword [0x08004b35]
mov qword [rbx], rax
mov qword [0x08004b3f], rbx
test r14, r14
je 0x8004b50
lea rdi, [0x08004b4b]
call pthread_mutex_unlock
add rbp, 8
cmp r12, rbp
jne 0x8004ab0
mov rbp, qword [r13]
test rbp, rbp
je 0x8004b80
mov rsi, qword [r13 + 0x10]
pop rbx
mov rdi, rbp
sub rsi, rbp
pop rbp
pop r12
pop r13
pop r14
jmp _ZdlPvm
nop dword [rax]
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax]
movdqa xmm2, xmmword [0x08004b98]
movdqa xmm3, xmmword [0x08004ba0]
pxor xmm0, xmm0
pxor xmm1, xmm1
mov byte [0x08004baf], 1
mov qword [0x08004bba], 0
mov qword [0x08004bc5], 0
movups xmmword [0x08004bcc], xmm0
movups xmmword [0x08004bd3], xmm0
movups xmmword [0x08004bda], xmm1
movups xmmword [0x08004be1], xmm2
movups xmmword [0x08004be8], xmm3
jmp 0x8004b0e
nop dword [rax]
mov rdi, qword [rbx + 8]
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
cmp rsi, rax
je _ZZN5boost14singleton_poolINS_4wave8cpplexer4impl14token_data_tagELj80ENS_33default_user_allocator_new_deleteESt5mutexLj32ELj0EE8get_poolEvE1f
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
jmp _ZZN5boost14singleton_poolINS_4wave8cpplexer4impl14token_data_tagELj80ENS_33default_user_allocator_new_deleteESt5mutexLj32ELj0EE8get_poolEvE1f
nop word cs:[rax + rax]
mov rdi, qword [rbx + 0x10]
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
cmp rsi, rax
je 0x8004af3
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
jmp 0x8004af3
nop word cs:[rax + rax]
mov rdi, qword [rbx + 0x30]
mov rax, qword [rdi + 8]
lea rdx, [rdi + 0x10]
cmp rax, rdx
je 0x8004ae5
sub rax, rdx
lea rsi, [rax + 0x18]
call _ZdlPvm
jmp 0x8004ae5
mov edi, eax
call _ZSt20__throw_system_errori
