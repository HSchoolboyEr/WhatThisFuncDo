push r14
push r13
push r12
push rbp
push rbx
mov rdx, qword [rdi]
mov rbx, rsi
test rdx, rdx
je 0x80048f0
mov rax, qword [rdx + 0x20]
mov rbp, qword [rdi + 8]
sub rax, qword [rdx + 0x18]
sar rax, 3
cmp rbp, rax
je 0x80048d0
mov rdx, qword [rbx]
xor r12d, r12d
test rdx, rdx
je 0x80048c3
mov rax, qword [rdx + 0x20]
mov rbx, qword [rbx + 8]
sub rax, qword [rdx + 0x18]
sar rax, 3
cmp rbx, rax
je _ZN5boost4wave8cpplexer4impl25lex_iterator_functor_shimINS1_9lex_tokenINS0_4util13file_positionINS5_11flex_stringIcSt11char_traitsIcESaIcENS5_9CowStringINS5_22AllocatorStringStorageIcSA_EEPcEEEEEEEEE3eofE
cmp rbp, rbx
sete r12b
pop rbx
mov eax, r12d
pop rbp
pop r12
pop r13
pop r14
ret
nop
mov rax, qword [0x080048d7]
mov rdx, qword [rdx + 0x10]
test rax, rax
jne 0x8004980
test rdx, rdx
jne 0x8004898
nop dword [rax]
mov rdx, qword [rbx]
mov r12d, 1
test rdx, rdx
je 0x80048c3
mov rax, qword [rdx + 0x20]
sub rax, qword [rdx + 0x18]
xor r12d, r12d
sar rax, 3
cmp qword [rbx + 8], rax
jne 0x80048c3
mov rax, qword [0x0800491a]
mov rdx, qword [rdx + 0x10]
test rax, rax
je 0x8004a70
test rdx, rdx
je 0x80048c3
mov ecx, dword [rax]
cmp dword [rdx], ecx
jne 0x80048c3
mov rdi, qword [rdx + 8]
mov rsi, qword [rax + 8]
mov rbp, qword [rdi]
mov rbx, qword [rsi]
lea rdx, [rdi + 0x10]
lea rax, [rsi + 0x10]
sub rbp, rdx
sub rbx, rax
lea rdx, [var_1h]
lea rax, [rbx - 1]
cmp rdx, rax
cmova rdx, rax
test rdx, rdx
je 0x80048bc
add rsi, 0x11
add rdi, 0x11
call memcmp
test eax, eax
jne 0x80048c3
jmp 0x80048bc
test rdx, rdx
je 0x8004898
mov ecx, dword [rax]
cmp dword [rdx], ecx
jne 0x8004898
mov rdi, qword [rdx + 8]
mov rsi, qword [rax + 8]
mov r13, qword [rdi]
mov r12, qword [rsi]
lea rdx, [rdi + 0x10]
lea rax, [rsi + 0x10]
sub r13, rdx
sub r12, rax
lea rdx, [r13 - 1]
lea rax, [r12 - 1]
cmp rdx, rax
cmova rdx, rax
test rdx, rdx
je 0x80049d9
add rsi, 0x11
add rdi, 0x11
call memcmp
test eax, eax
jne 0x8004898
cmp r13, r12
jne 0x8004898
jmp 0x80048f0
nop word [rax + rax]
mov rax, qword [0x080049f7]
mov rdx, qword [rdx + 0x10]
test rax, rax
je 0x8004a80
test rdx, rdx
je 0x80048bc
mov ecx, dword [rax]
cmp dword [rdx], ecx
jne 0x80048bc
mov rcx, qword [rdx + 8]
mov rax, qword [rax + 8]
mov r13, qword [rcx]
lea rdx, [rcx + 0x10]
mov r14, qword [rax]
sub r13, rdx
lea rdx, [rax + 0x10]
sub r14, rdx
lea rdx, [r13 - 1]
lea rsi, [r14 - 1]
cmp rdx, rsi
cmova rdx, rsi
test rdx, rdx
je 0x8004a5c
lea rsi, [rax + 0x11]
lea rdi, [rcx + 0x11]
call memcmp
test eax, eax
jne 0x80048bc
xor r12d, r12d
cmp r13, r14
jne 0x80048bc
jmp 0x80048c3
nop dword [rax]
test rdx, rdx
sete r12b
jmp 0x80048c3
nop dword [rax]
test rdx, rdx
je 0x80048c3
jmp 0x80048bc
