mov rdx, qword [rdi + 8]
mov rax, qword [rdi + 0x10]
mov rcx, qword [rsi + 0x10]
sub rax, rdx
sar rax, 3
cmp rax, rcx
jbe 0x8002b68
push r12
lea r12, [rcx*8]
add rdx, r12
push rbp
push rbx
mov rbp, qword [rdx]
mov rbx, rdi
test rbp, rbp
je 0x8002b27
mov rdi, qword [arg_28h]
test rdi, rdi
je 0x8002af5
mov rax, qword [rdi]
call qword [rax + 8]
mov rdi, qword [arg_18h]
test rdi, rdi
je 0x8002b04
mov rax, qword [rdi]
call qword [rax + 8]
mov rdi, qword [arg_8h]
test rdi, rdi
je 0x8002b13
mov rax, qword [rdi]
call qword [rax + 8]
mov esi, 0x30
mov rdi, rbp
call _ZdlPvm
mov rdx, qword [rbx + 8]
add rdx, r12
mov qword [rdx], 0
sub qword [rbx + 0x20], 1
jne 0x8002b5e
mov rbp, qword [rbx + 0x30]
pxor xmm0, xmm0
movups xmmword [rbx + 0x28], xmm0
test rbp, rbp
je 0x8002b5e
lock sub dword [arg_8h], 1
jne 0x8002b5e
mov rax, qword [rbp]
mov rdi, rbp
call qword [rax + 0x10]
lock sub dword [arg_ch], 1
je 0x8002b70
pop rbx
xor eax, eax
pop rbp
pop r12
ret
nop dword [rax]
xor eax, eax
ret
nop dword [rax + rax]
mov rax, qword [rbp]
lea rcx, [0x08002b7b]
mov rdi, rbp
mov rdx, qword [rax + 0x18]
cmp rdx, rcx
jne 0x8002b8c
call qword [rax + 8]
jmp 0x8002b5e
call rdx
jmp 0x8002b5e
