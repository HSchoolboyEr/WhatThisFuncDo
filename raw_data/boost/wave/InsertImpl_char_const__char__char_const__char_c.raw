push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x48
mov qword [var_8h], rsi
cmp rdx, rcx
je 0x800d847
mov rbx, qword [rdi]
mov rbp, rdi
mov r12, rdx
mov r13, rcx
mov rdi, qword [rbx]
lea rsi, [rbx + 0x10]
movzx eax, byte [rbx + 0x10]
mov r8, rdi
sub r8, rsi
cmp r8, 1
je 0x800d39e
cmp al, 1
je 0x800d380
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov rbx, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r14, rax
lea rax, [rdi + rbx]
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [r14], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [rbp], r14
mov byte [r14 + 0x10], 1
mov rbx, qword [rbp]
movzx eax, byte [rbx + 0x10]
lea r15, [rbx + 0x11]
cmp al, 1
je 0x800e828
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov rbx, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r14, rax
lea rax, [rdi + rbx]
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [r14], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [rbp], r14
mov byte [r14 + 0x10], 1
mov rbx, qword [rbp]
mov rdi, qword [rbx]
lea rsi, [rbx + 0x10]
lea rax, [rbx + 0x11]
mov r8, rdi
sub r8, rsi
jmp 0x800d387
nop dword [rax]
lea r15, [rbx + 0x11]
mov rax, r15
cmp r15, r12
ja 0x800d39a
lea rax, [rax + r8 - 1]
cmp r12, rax
jbe 0x800dc50
movzx eax, byte [rbx + 0x10]
cmp al, 1
je 0x800d41a
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov rbx, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r14, rax
lea rax, [rdi + rbx]
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [r14], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [rbp], r14
mov byte [r14 + 0x10], 1
mov rbx, qword [rbp]
mov rdi, qword [rbx]
lea rsi, [rbx + 0x10]
movzx eax, byte [rbx + 0x10]
mov r8, rdi
sub r8, rsi
mov rcx, qword [var_8h]
lea rdx, [rbx + 0x11]
mov r15, r13
mov r14, r8
sub r15, r12
sub rcx, rdx
mov rdx, qword [rbx + 8]
mov qword [rsp], rcx
sub rdx, rsi
mov rcx, rdx
sub rcx, r8
cmp r15, rcx
jg 0x800d9c0
mov rdx, qword [rsp]
lea rcx, [r14 - 1]
mov qword [var_10h], rcx
add rdx, r15
cmp rdx, rcx
jbe 0x800d860
mov r15, rcx
sub r15, qword [rsp]
lea rcx, [r12 + r15]
mov qword [var_18h], rcx
cmp al, 1
je 0x800d4ea
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov rbx, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r14, rax
lea rax, [rdi + rbx]
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [r14], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [rbp], r14
mov byte [r14 + 0x10], 1
mov rbx, qword [rbp]
mov rdi, qword [rbx]
lea rsi, [rbx + 0x10]
mov r14, rdi
sub r14, rsi
mov rax, qword [rbx + 8]
sub r13, qword [var_18h]
lea rcx, [r13 + r14]
sub rax, rsi
mov qword [var_18h], rcx
cmp rcx, rax
ja 0x800dc90
test r13, r13
jne 0x800dc10
movzx eax, byte [rbx + 0x10]
add rdi, r13
mov qword [rbx], rdi
cmp al, 1
je 0x800dc00
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov r13, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r14, rax
lea rax, [rdi + r13]
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [r14], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [rbp], r14
mov byte [r14 + 0x10], 1
mov rcx, qword [rbp]
mov rdi, qword [rcx]
lea rsi, [rcx + 0x10]
mov rax, qword [rcx + 8]
mov r14, rdi
sub r14, rsi
lea r13, [r15 + r14]
sub rax, rsi
cmp r13, rax
ja _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rsi, qword [var_10h]
cmp qword [rsp], rsi
jne 0x800dc30
add rdi, r15
mov qword [rcx], rdi
test r15, r15
je 0x800d847
mov rdi, qword [var_8h]
add rsp, 0x48
mov rdx, r15
mov rsi, r12
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp memmove
mov rax, r9
jmp 0x800d5f7
nop dword [rax]
mov byte [rax], 1
add rax, 1
mov byte [rax], 1
add rax, 1
mov byte [rax], 1
add rax, 1
mov byte [rax], 1
add rax, 1
mov byte [rax], 1
add rax, 1
mov byte [rax], 1
add rax, 1
mov byte [rax], 1
add rax, 1
mov byte [rax], 1
add rax, 1
cmp r14, rax
jne 0x800d5f0
mov r15, qword [r8]
movzx eax, byte [r8 + 0x10]
mov rsi, r15
sub rsi, r9
mov qword [rsp], rsi
cmp al, 1
je 0x800d6bd
sub eax, 1
mov byte [r8 + 0x10], al
test rsi, rsi
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
add rsi, 0x18
mov rdi, rsi
js _ZSt17__throw_bad_allocv
call _Znwm
mov r8, rax
lea r9, [rax + 0x10]
mov rax, qword [rsp]
mov rdi, r9
mov qword [rsp], r8
add rax, r9
movq xmm0, rax
mov rax, qword [arg_28h]
punpcklqdq xmm0, xmm0
movups xmmword [r8], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov r8, qword [rsp]
mov r9, rax
mov r15, qword [r8]
mov qword [arg_28h], r8
lea r14, [r8 + 0x11]
mov byte [r8 + 0x10], 1
mov rax, r15
sub rax, r9
mov qword [rsp], rax
mov rbx, r15
mov rax, r13
sub rax, r12
sub rbx, r14
cmp qword [rsp], 1
mov qword [arg_10h], rax
je 0x800d6ec
cmp r14, r12
ja 0x800d6ec
mov rax, qword [rsp]
lea rax, [r14 + rax - 1]
cmp r12, rax
jbe 0x800e2d7
cmp rbx, qword [arg_10h]
jg 0x800df24
test rbx, rbx
je 0x800d7f5
lea rcx, [r12 + 1]
mov rax, r14
lea r8, [rbx - 1]
sub rax, rcx
cmp rax, 0xe
jbe 0x800e2bb
cmp r8, 6
jbe 0x800e2bb
cmp r8, 0xe
jbe 0x800e791
mov rdx, rbx
xor eax, eax
and rdx, 0xfffffffffffffff0
nop word cs:[rax + rax]
movdqu xmm1, xmmword [r12 + rax]
movups xmmword [r14 + rax], xmm1
add rax, 0x10
cmp rdx, rax
jne 0x800d740
mov rax, rbx
mov r9, rbx
and rax, 0xfffffffffffffff0
and r9d, 0xf
lea rdi, [r12 + rax]
lea rsi, [r14 + rax]
cmp rax, rbx
je 0x800d7f5
mov rdx, r8
mov rcx, rbx
sub rdx, rax
sub rcx, rax
cmp rdx, 6
jbe 0x800d7a2
mov rdx, qword [r12 + rax]
mov qword [r14 + rax], rdx
mov rax, rcx
and rax, 0xfffffffffffffff8
sub r9, rax
add rdi, rax
add rsi, rax
cmp rax, rcx
je 0x800d7f5
movzx eax, byte [rdi]
mov byte [rsi], al
cmp r9, 1
je 0x800d7f5
movzx eax, byte [rdi + 1]
mov byte [rsi + 1], al
cmp r9, 2
je 0x800d7f5
movzx eax, byte [rdi + 2]
mov byte [rsi + 2], al
cmp r9, 3
je 0x800d7f5
movzx eax, byte [rdi + 3]
mov byte [rsi + 3], al
cmp r9, 4
je 0x800d7f5
movzx eax, byte [rdi + 4]
mov byte [rsi + 4], al
cmp r9, 5
je 0x800d7f5
movzx eax, byte [rdi + 5]
mov byte [rsi + 5], al
cmp r9, 6
je 0x800d7f5
movzx eax, byte [rdi + 6]
mov byte [rsi + 6], al
lea rdx, [r12 + rbx]
lea rdi, [arg_28h]
mov rcx, r13
mov rsi, r15
call method void boost::wave::util::flex_string<char, std::char_traits<char>, std::allocator<char>, boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char, std::allocator<char> >, char*> >::InsertImpl<char const*>(char*, char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
mov r13, qword [arg_28h]
mov rcx, qword [r13]
mov rsi, qword [arg_8h]
lea rdx, [r13 + 0x11]
mov rdi, rbp
call method void boost::wave::util::flex_string<char, std::char_traits<char>, std::allocator<char>, boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char, std::allocator<char> >, char*> >::InsertImpl<char const*>(char*, char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
mov rdi, qword [arg_28h]
sub byte [rdi + 0x10], 1
jne 0x800d847
mov rax, qword [rdi + 8]
lea rdx, [rdi + 0x10]
cmp rax, rdx
je 0x800d847
sub rax, rdx
lea rsi, [rax + 0x18]
call _ZdlPvm
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
cmp al, 1
je 0x800dbe0
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov rbx, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r13, rax
lea rax, [rdi + rbx]
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [r13], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [rbp], r13
mov byte [r13 + 0x10], 1
mov rbx, qword [rbp]
mov rax, qword [rbx]
mov r13, rax
mov qword [rsp], rax
movzx eax, byte [rbx + 0x10]
sub r13, r15
cmp al, 1
je 0x800e84f
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov rbx, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r14, rax
lea rax, [rdi + rbx]
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [r14], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [rbp], r14
mov byte [r14 + 0x10], 1
mov rbx, qword [rbp]
mov rdi, qword [rbx]
lea rsi, [rbx + 0x10]
mov r14, rdi
sub r14, rsi
mov rax, qword [rbx + 8]
lea rcx, [r14 + r15]
mov qword [var_10h], rcx
sub rax, rsi
cmp rcx, rax
ja 0x800de20
mov rdx, r15
mov rsi, r13
call memmove
mov rax, qword [rbp]
add qword [rax], r15
mov rax, r13
sub rax, qword [var_8h]
test rax, rax
jle 0x800d5ca
mov rcx, qword [rsp]
sub r13, rax
sub rcx, rax
nop dword [rax + rax]
movzx edx, byte [r13 + rax - 1]
mov byte [rcx + rax - 1], dl
sub rax, 1
jne 0x800d9a8
jmp 0x800d5ca
nop dword [rax]
lea r14, [r8 + r15]
lea rcx, [rdx - 1]
lea rdi, [r14 - 1]
cmp rdi, rcx
jae 0x800daa8
cmp al, 1
je 0x800da44
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov rbx, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r14, rax
lea rax, [rdi + rbx]
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [r14], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [rbp], r14
mov byte [r14 + 0x10], 1
mov rbx, qword [rbp]
movzx eax, byte [rbx + 0x10]
mov rsi, qword [rsp]
mov rdi, qword [rbx]
lea rsi, [rbx + rsi + 0x11]
mov r14, rdi
mov qword [var_8h], rsi
lea rsi, [rbx + 0x10]
sub r14, rsi
jmp 0x800d449
nop dword [rax]
lea r14, [0x0800da6f]
jmp 0x800d3fc
nop dword [rax]
lea r14, [0x0800da7f]
jmp 0x800d2e5
nop dword [rax]
lea r14, [0x0800da8f]
jmp 0x800d4d0
nop dword [rax]
lea r14, [0x0800da9f]
jmp 0x800d57e
nop dword [rax]
cmp al, 1
je 0x800db26
sub eax, 1
mov byte [rbx + 0x10], al
mov rax, qword [rbp]
lea rdx, [rax + 0x10]
mov rax, qword [rax]
sub rax, rdx
mov rbx, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rax
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov rcx, rax
lea rax, [rdi + rbx]
mov qword [var_8h], rcx
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm0
movups xmmword [rcx], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov rcx, qword [var_8h]
mov qword [rbp], rcx
mov byte [rcx + 0x10], 1
mov rbx, qword [rbp]
mov rdx, qword [rbx + 8]
lea rsi, [rbx + 0x10]
sub rdx, rsi
cmp r14, rdx
jbe 0x800dbce
mov rax, qword [rbx]
lea rcx, [0x0800db39]
mov qword [var_38h], rcx
sub rax, rsi
mov qword [var_8h], rax
test r14, r14
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, r14
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov rbx, rax
mov qword [var_38h], rax
mov rax, qword [var_8h]
add r14, rdi
add rax, rdi
movq xmm4, r14
movq xmm0, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm4
lea rsi, [rax + 0x10]
movups xmmword [rbx], xmm0
mov rax, qword [rax]
sub rax, rsi
mov qword [var_8h], rax
mov rdx, rax
call memcpy
mov rdi, qword [rbp]
mov qword [rbp], rbx
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
mov qword [var_38h], rdi
cmp rsi, rax
je 0x800dbce
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
mov rbx, qword [rbp]
movzx eax, byte [rbx + 0x10]
cmp al, 1
jne 0x800d9d9
jmp 0x800da44
nop
mov r13, rdi
mov qword [rsp], rdi
sub r13, r15
jmp 0x800d95d
nop
lea r14, [0x0800dbf7]
jmp 0x800d35c
nop dword [rax]
mov rcx, rbx
jmp 0x800d58e
nop dword [rax + rax]
mov rdx, r13
lea rsi, [r12 + r15]
call memmove
mov rbx, qword [rbp]
mov rdi, qword [rbx]
jmp 0x800d512
nop dword [rax + rax]
mov rax, qword [rsp]
mov rdx, r15
lea rsi, [rbx + rax + 0x11]
call memmove
mov rcx, qword [rbp]
mov rdi, qword [rcx]
jmp 0x800d5bb
nop dword [rax]
mov edi, 0x19
call _Znwm
lea rcx, [0x0800dc61]
lea r14, [rax + 0x11]
lea r9, [rax + 0x10]
mov qword [arg_28h], rax
mov r8, rax
mov rdx, r14
movq xmm0, r14
sub rdx, r9
punpcklqdq xmm0, xmm0
and edx, 7
movups xmmword [rax], xmm0
movsxd rax, dword [rcx + rdx*4]
add rax, rcx
jmp rax
nop
mov rax, rcx
lea rcx, [0x0800dc9a]
mov qword [var_38h], rcx
test rax, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
add rax, 0x18
mov rdi, rax
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov rbx, rax
mov qword [var_38h], rax
lea rax, [rdi + r14]
movq xmm0, rax
mov rax, qword [var_18h]
add rax, rdi
movq xmm2, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm2
movups xmmword [rbx], xmm0
mov r14, qword [rax]
lea rsi, [rax + 0x10]
sub r14, rsi
mov rdx, r14
call memcpy
mov rdi, qword [rbp]
mov qword [rbp], rbx
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
mov qword [var_38h], rdi
cmp rsi, rax
je 0x800dd23
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
mov rbx, qword [rbp]
mov rdi, qword [rbx]
jmp 0x800d509
nop dword [rax + rax]
lea rcx, [0x0800dd37]
mov qword [var_38h], rcx
test r13, r13
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, r13
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov rcx, rax
mov qword [var_38h], rax
add r13, rdi
lea rax, [rdi + r14]
movq xmm0, rax
movq xmm3, r13
mov rax, qword [rbp]
punpcklqdq xmm0, xmm3
movups xmmword [rcx], xmm0
mov r14, qword [rax]
lea rsi, [rax + 0x10]
sub r14, rsi
mov rdx, r14
mov qword [var_18h], rcx
call memcpy
mov rdi, qword [rbp]
mov rcx, qword [var_18h]
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
mov qword [rbp], rcx
mov qword [var_38h], rdi
cmp rsi, rax
je 0x800ddc5
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
mov rcx, qword [rbp]
mov rdi, qword [rcx]
jmp 0x800d5ac
nop dword [rax]
lea r14, [0x0800ddd7]
jmp 0x800da33
nop dword [rax]
lea r14, [0x0800dde7]
jmp 0x800d943
nop dword [rax]
lea r13, [0x0800ddf7]
jmp 0x800d8c3
nop dword [rax]
lea rdi, [0x0800de07]
jmp 0x800dd89
nop dword [rax]
lea rdi, [0x0800de17]
mov rbx, rcx
jmp memcpy
nop
mov rax, rcx
lea rcx, [0x0800de2a]
mov qword [var_38h], rcx
test rax, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
add rax, 0x18
mov rdi, rax
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov rbx, rax
mov qword [var_38h], rax
lea rax, [rdi + r14]
movq xmm0, rax
mov rax, qword [var_10h]
add rax, rdi
movq xmm5, rax
mov rax, qword [rbp]
punpcklqdq xmm0, xmm5
movups xmmword [rbx], xmm0
mov r14, qword [rax]
lea rsi, [rax + 0x10]
sub r14, rsi
mov rdx, r14
call memcpy
mov rdi, qword [rbp]
mov qword [rbp], rbx
mov rsi, qword [rdi + 8]
lea rax, [rdi + 0x10]
mov qword [var_38h], rdi
cmp rsi, rax
je 0x800deb3
sub rsi, rax
add rsi, 0x18
call _ZdlPvm
mov rbx, qword [rbp]
mov rdi, qword [rbx]
jmp 0x800d976
nop dword [rax + rax]
lea rdi, [0x0800dec7]
mov rbx, rcx
mov rdx, rax
jmp memcpy
nop word [rax + rax]
lea rcx, [0x0800dedf]
jmp 0x800db0f
nop dword [rax]
lea rdi, [0x0800deef]
mov rbx, rcx
jmp 0x800de81
mov rax, r9
jmp 0x800d5fe
mov rax, r9
jmp 0x800d613
mov rax, r9
jmp 0x800d61a
mov rax, r9
jmp 0x800d621
mov rax, r9
jmp 0x800d605
mov rax, r9
jmp 0x800d60c
mov r13, qword [arg_10h]
mov rsi, r12
mov rdi, r14
mov qword [arg_18h], r8
mov qword [rsp], r9
mov rdx, r13
add r13, r14
call memmove
mov r8, qword [arg_18h]
mov r9, qword [rsp]
movzx eax, byte [r8 + 0x10]
cmp al, 1
je 0x800dfc2
mov rbx, qword [r8]
sub eax, 1
mov byte [r8 + 0x10], al
sub rbx, r9
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rbx
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea r9, [rax + 0x10]
mov r8, rax
lea rax, [r9 + rbx]
mov rdi, r9
mov qword [rsp], r8
movq xmm0, rax
mov rax, qword [arg_28h]
punpcklqdq xmm0, xmm0
movups xmmword [r8], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov r8, qword [rsp]
mov r9, rax
mov qword [arg_28h], r8
lea r14, [r8 + 0x11]
mov byte [r8 + 0x10], 1
mov r12, qword [r8]
mov rax, r13
sub r15, r13
sub rax, r14
mov rdi, r12
sub rdi, r9
sub rdi, 1
mov rdx, rdi
sub rdx, rax
cmp rdx, r15
cmovbe r15, rdx
mov rdx, r12
add rax, r15
lea rsi, [r14 + rax]
sub rdx, rsi
jne memmove
sub rdi, r15
mov r13, rdi
mov rax, qword [r8 + 8]
lea rbx, [r13 + 1]
sub rax, r9
cmp rbx, rax
jbe 0x800e207
lea rcx, [0x0800e019]
sub r12, r9
mov qword [arg_38h], rcx
test rbx, rbx
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, r13
add rdi, 0x19
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r13, rax
mov qword [arg_38h], rax
mov r8, qword [arg_28h]
lea rax, [rdi + r12]
movq xmm0, rax
lea rax, [rdi + rbx]
lea r9, [r8 + 0x10]
movq xmm6, rax
punpcklqdq xmm0, xmm6
movups xmmword [r13], xmm0
mov r12, qword [r8]
sub r12, r9
mov rsi, r9
mov rdx, r12
mov qword [arg_10h], r8
mov qword [rsp], r9
call memcpy
mov r8, qword [arg_10h]
mov r9, qword [rsp]
mov qword [arg_28h], r13
mov rdi, rax
mov rax, qword [r8 + 8]
mov qword [arg_38h], r8
cmp r9, rax
je 0x800e0bd
sub rax, r9
mov rdi, r8
lea rsi, [rax + 0x18]
call _ZdlPvm
mov r13, qword [arg_28h]
lea rdi, [r13 + 0x10]
mov r12, qword [r13]
lea rcx, [rdi + rbx]
cmp r12, rcx
jb 0x800e212
cmp qword [r13 + 8], rdi
je 0x800e2b2
mov qword [r13], rcx
movzx eax, byte [r13 + 0x10]
cmp al, 1
je 0x800d812
sub eax, 1
mov rbx, rcx
mov byte [r13 + 0x10], al
sub rbx, rdi
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rbx
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r13, rax
lea rcx, [rdi + rbx]
movq xmm0, rcx
punpcklqdq xmm0, xmm0
movups xmmword [rax], xmm0
mov rax, qword [arg_28h]
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [arg_28h], r13
mov rcx, qword [r13]
mov byte [r13 + 0x10], 1
jmp 0x800d812
lea r9, [0x0800e153]
lea r8, [r9 - 0x10]
jmp 0x800d6a2
mov rdi, r13
call memmove
mov r8, qword [arg_28h]
mov r12, qword [r8]
lea r9, [r8 + 0x10]
movzx eax, byte [r8 + 0x10]
mov rbx, r12
sub rbx, r9
lea r13, [rbx - 1]
sub r13, r15
cmp al, 1
je 0x800dffe
sub eax, 1
mov byte [r8 + 0x10], al
test rbx, rbx
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rbx
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea r9, [rax + 0x10]
mov r8, rax
lea rax, [r9 + rbx]
mov rdi, r9
mov qword [rsp], r8
movq xmm0, rax
mov rax, qword [arg_28h]
punpcklqdq xmm0, xmm0
movups xmmword [r8], xmm0
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov r8, qword [rsp]
mov r9, rax
mov qword [arg_28h], r8
mov r12, qword [r8]
mov byte [r8 + 0x10], 1
jmp 0x800dffe
lea rdi, [0x0800e1ff]
mov r13, rcx
jmp 0x800e072
mov rdi, r9
mov r13, r8
jmp 0x800e0c1
mov rax, rcx
lea rdx, [0x0800e21c]
sub rax, r12
and eax, 7
movsxd rax, dword [rdx + rax*4]
add rax, rdx
jmp rax
mov byte [r12], 0
add r12, 1
mov byte [r12], 0
add r12, 1
mov byte [r12], 0
add r12, 1
mov byte [r12], 0
add r12, 1
mov byte [r12], 0
add r12, 1
mov byte [r12], 0
add r12, 1
mov byte [r12], 0
add r12, 1
mov byte [r12], 0
add r12, 1
cmp rcx, r12
jne 0x800e22b
mov r13, qword [rsp + 0x28]
lea rdi, [r13 + 0x10]
jmp 0x800e0ce
lea r9, [0x0800e28d]
lea r8, [r9 - 0x10]
jmp 0x800dfb4
lea r9, [0x0800e29d]
lea r8, [r9 - 0x10]
jmp 0x800e1e6
lea r13, [0x0800e2ad]
jmp 0x800e139
mov rcx, qword [r13]
jmp 0x800e0dc
xor eax, eax
nop dword [rax]
movzx edx, byte [r12 + rax]
mov byte [r14 + rax], dl
add rax, 1
cmp rbx, rax
jne 0x800e2c0
jmp 0x800d7f5
mov edi, 0x19
call _Znwm
lea rdi, [rax + 0x11]
lea rcx, [rax + 0x10]
mov qword [arg_30h], rax
mov rsi, rax
mov rdx, rdi
lea r8, [0x0800e2fb]
movq xmm0, rdi
sub rdx, rcx
punpcklqdq xmm0, xmm0
and edx, 7
movups xmmword [rax], xmm0
mov rax, qword [arg_28h]
movsxd rdx, dword [r8 + rdx*4]
add rdx, r8
jmp rdx
mov rdx, rcx
jmp 0x800e327
mov byte [rdx], 1
add rdx, 1
mov byte [rdx], 1
add rdx, 1
mov byte [rdx], 1
add rdx, 1
mov byte [rdx], 1
add rdx, 1
mov byte [rdx], 1
add rdx, 1
mov byte [rdx], 1
add rdx, 1
mov byte [rdx], 1
add rdx, 1
mov byte [rdx], 1
add rdx, 1
cmp rdi, rdx
jne 0x800e320
lea rdx, [rax + 0x10]
not rdx
add rdx, qword [rax]
add rdx, qword [arg_10h]
sub rdx, rbx
mov qword [rsp], rdx
mov rbx, rdx
mov rdx, rcx
not rdx
add rdx, qword [rsi + 8]
cmp rbx, rdx
jb 0x800e4b8
movzx eax, byte [rsi + 0x10]
cmp al, 1
je 0x800e3ef
mov rbx, qword [rsi]
sub eax, 1
mov byte [rsi + 0x10], al
sub rbx, rcx
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rbx
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov qword [arg_10h], rax
add rbx, rdi
movq xmm0, rbx
punpcklqdq xmm0, xmm0
movups xmmword [rax], xmm0
mov rax, qword [arg_30h]
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov rcx, qword [arg_10h]
mov qword [arg_30h], rcx
mov byte [rcx + 0x10], 1
mov r8, qword [arg_30h]
mov rax, qword [rsp]
mov rsi, qword [r8 + 8]
lea rbx, [rax + 1]
lea rax, [r8 + 0x10]
mov qword [arg_10h], rax
sub rsi, rax
cmp rbx, rsi
jbe 0x800e4b3
lea rax, [0x0800e41c]
mov qword [arg_38h], rax
test rbx, rbx
je 0x800e464
mov rdi, qword [rsp]
add rdi, 0x19
js _ZSt17__throw_bad_allocv
mov rax, qword [r8]
mov qword [rsp], rax
call _Znwm
lea rcx, [rax + 0x10]
mov rdx, qword [rsp]
sub rdx, qword [arg_10h]
mov qword [arg_38h], rax
add rdx, rcx
add rcx, rbx
mov r8, qword [arg_30h]
mov qword [rax], rdx
mov qword [rax + 8], rcx
mov rcx, qword [arg_38h]
mov rdx, qword [r8]
lea rbx, [r8 + 0x10]
mov qword [rsp], r8
mov rsi, rbx
lea rdi, [rcx + 0x10]
sub rdx, rbx
mov qword [arg_10h], rcx
call memcpy
mov r8, qword [rsp]
mov rcx, qword [arg_10h]
mov rax, qword [r8 + 8]
mov qword [arg_30h], rcx
mov qword [arg_38h], r8
cmp rbx, rax
je 0x800e4b3
sub rax, rbx
mov rdi, r8
lea rsi, [rax + 0x18]
call _ZdlPvm
mov rax, qword [arg_28h]
movzx edx, byte [rax + 0x10]
cmp dl, 1
je 0x800e524
sub edx, 1
mov rbx, qword [rax]
mov byte [rax + 0x10], dl
lea rdx, [rax + 0x10]
sub rbx, rdx
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rbx
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov qword [rsp], rax
add rbx, rdi
movq xmm0, rbx
punpcklqdq xmm0, xmm0
movups xmmword [rax], xmm0
mov rax, qword [arg_28h]
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov rcx, qword [rsp]
mov qword [arg_28h], rcx
mov rax, rcx
mov byte [rcx + 0x10], 1
mov r8, qword [arg_30h]
add rax, 0x11
mov qword [rsp], rax
movzx eax, byte [r8 + 0x10]
cmp al, 1
je 0x800e59d
mov rbx, qword [r8]
sub eax, 1
add r8, 0x10
mov byte [r8], al
sub rbx, r8
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, rbx
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov qword [arg_10h], rax
add rbx, rdi
movq xmm0, rbx
punpcklqdq xmm0, xmm0
movups xmmword [rax], xmm0
mov rax, qword [arg_30h]
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov r8, qword [arg_10h]
mov qword [arg_30h], r8
mov byte [r8 + 0x10], 1
lea rbx, [arg_30h]
mov rdx, qword [rsp]
mov rsi, qword [r8]
mov rcx, r14
mov rdi, rbx
call _ZN5boost4wave4util11flex_stringIcSt11char_traitsIcESaIcENS1_9CowStringINS1_22AllocatorStringStorageIcS5_EEPcEEE10InsertImplIS9_EEvS9_T_SD_St20forward_iterator_tag.isra.0
mov r8, qword [arg_30h]
movzx eax, byte [r8 + 0x10]
cmp al, 1
je 0x800e623
mov r14, qword [r8]
sub eax, 1
add r8, 0x10
mov byte [r8], al
sub r14, r8
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, r14
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov qword [rsp], rax
add r14, rdi
movq xmm0, r14
punpcklqdq xmm0, xmm0
movups xmmword [rax], xmm0
mov rax, qword [arg_30h]
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov r8, qword [rsp]
mov qword [arg_30h], r8
mov byte [r8 + 0x10], 1
mov rsi, qword [r8]
mov rcx, r13
mov rdx, r12
mov rdi, rbx
call method void boost::wave::util::flex_string<char, std::char_traits<char>, std::allocator<char>, boost::wave::util::CowString<boost::wave::util::AllocatorStringStorage<char, std::allocator<char> >, char*> >::InsertImpl<char const*>(char*, char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
mov rax, qword [arg_28h]
movzx edx, byte [rax + 0x10]
cmp dl, 1
je 0x800e6a0
mov r12, qword [rax]
sub edx, 1
add rax, 0x10
mov byte [rax], dl
sub r12, rax
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, r12
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r13, rax
add r12, rdi
movq xmm0, r12
punpcklqdq xmm0, xmm0
movups xmmword [rax], xmm0
mov rax, qword [arg_28h]
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [arg_28h], r13
mov rax, r13
mov byte [r13 + 0x10], 1
mov r8, qword [arg_30h]
mov r12, qword [rax]
movzx eax, byte [r8 + 0x10]
cmp al, 1
je 0x800e710
mov r13, qword [r8]
sub eax, 1
add r8, 0x10
mov byte [r8], al
sub r13, r8
je _ZN5boost4wave4util19SimpleStringStorageIcSaIcEE12emptyString_E
mov rdi, r13
add rdi, 0x18
js _ZSt17__throw_bad_allocv
call _Znwm
lea rdi, [rax + 0x10]
mov r14, rax
add r13, rdi
movq xmm0, r13
punpcklqdq xmm0, xmm0
movups xmmword [rax], xmm0
mov rax, qword [arg_30h]
mov rdx, qword [rax]
lea rsi, [rax + 0x10]
sub rdx, rsi
call memcpy
mov qword [arg_30h], r14
mov r8, r14
mov byte [r14 + 0x10], 1
mov rsi, qword [r8]
mov rcx, r12
mov rdx, r15
mov rdi, rbx
call _ZN5boost4wave4util11flex_stringIcSt11char_traitsIcESaIcENS1_9CowStringINS1_22AllocatorStringStorageIcS5_EEPcEEE10InsertImplIS9_EEvS9_T_SD_St20forward_iterator_tag.isra.0
mov rdi, qword [arg_28h]
mov rax, qword [arg_30h]
sub byte [rdi + 0x10], 1
mov qword [arg_28h], rax
mov qword [arg_30h], rdi
jne 0x800d809
mov rax, qword [rdi + 8]
lea rdx, [rdi + 0x10]
cmp rax, rdx
je 0x800d809
sub rax, rdx
lea rsi, [rax + 0x18]
call _ZdlPvm
jmp 0x800d809
mov rdx, rcx
jmp 0x800e32e
mov rdx, rcx
jmp 0x800e335
mov rdx, rcx
jmp 0x800e33c
mov rdx, rcx
jmp 0x800e343
mov rdx, rcx
jmp 0x800e34a
mov rdx, rcx
jmp 0x800e351
mov rsi, r14
mov rdi, r12
mov r9, rbx
xor eax, eax
jmp 0x800d773
call _ZSt17__throw_bad_allocv
lea r8, [0x0800e7ad]
jmp 0x800e619
lea r13, [0x0800e7b9]
jmp 0x800e693
lea r14, [0x0800e7c5]
jmp 0x800e703
lea rcx, [0x0800e7d1]
jmp 0x800e3e6
lea rcx, [0x0800e7dd]
jmp 0x800e518
lea r8, [0x0800e7e9]
jmp 0x800e593
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
mov rdx, rcx
jmp 0x800e358
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
mov rdi, qword [rbx]
lea rsi, [rbx + 0x10]
mov rax, r15
mov r8, rdi
sub r8, rsi
jmp 0x800d387
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
mov rax, r9
jmp 0x800d628
mov rdi, qword [rsp]
lea rsi, [rbx + 0x10]
mov r14, rdi
sub r14, rsi
jmp 0x800d95d
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
mov rbp, rax
jmp 0x800e8dd
mov rbp, rax
jmp 0x800e8c2
mov rbp, rax
jmp 0x800e8b8
jmp 0x800e876
mov rbp, rax
jmp 0x800e899
mov rbp, rax
lea rdi, [rsp + 0x38]
call _ZN5boost4wave4util22AllocatorStringStorageIcSaIcEED1Ev
mov rdx, qword [rsp + 0x28]
sub byte [rdx + 0x10], 1
jne 0x800e8ae
lea rdi, [rsp + 0x28]
call _ZN5boost4wave4util22AllocatorStringStorageIcSaIcEED1Ev
mov rdi, rbp
call _Unwind_Resume
jmp 0x800e887
lea rdi, [rsp + 0x38]
call _ZN5boost4wave4util22AllocatorStringStorageIcSaIcEED1Ev
mov rdx, qword [rsp + 0x30]
sub byte [rdx + 0x10], 1
jne 0x800e899
lea rdi, [rsp + 0x30]
call _ZN5boost4wave4util22AllocatorStringStorageIcSaIcEED1Ev
jmp 0x800e899
jmp 0x800e876
jmp 0x800e876
lea rdi, [var_38h]
call _ZN5boost4wave4util22AllocatorStringStorageIcSaIcEED1Ev
mov rdi, rbp
call _Unwind_Resume
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push r13
push r12
xor r12d, r12d
push rbp
push rbx
mov rbx, rdi
sub rsp, 8
mov rdi, qword [rdi + 0x78]
cmp qword [rdi + 0x10], 0
je 0x800e9b9
mov rdx, qword [rdi]
mov rax, qword [rdi + 0x20]
mov r13d, 0xffffffff
sub rsi, qword [rbx + 0x18]
mov rax, qword [rax + rdx*8]
mov rbp, rsi
cmp rax, r13
je 0x800e9c7
cmp rsi, rax
jae _ZN5boost4wave8cpplexer7re2clex6aq_popEPNS2_16tag_aq_queuetypeE
jmp 0x800e9c7
nop
mov rdx, qword [rdi]
mov rax, qword [rdi + 0x20]
mov rax, qword [rax + rdx*8]
cmp rbp, rax
jb 0x800e9b9
cmp rax, r13
je 0x800e9b9
call _ZN5boost4wave8cpplexer7re2clex6aq_popEPNS2_16tag_aq_queuetypeE
mov rdi, qword [rbx + 0x78]
add r12d, 1
cmp qword [rdi + 0x10], 0
jne 0x800e990
add rsp, 8
mov eax, r12d
pop rbx
pop rbp
pop r12
pop r13
ret
xor r12d, r12d
jmp 0x800e9b9
