push rbp
lea rax, [rdi + 0x10]
mov rbp, rsp
push r15
push r14
push r13
push r12
mov r12, rdi
push rbx
sub rsp, 0xe8
mov qword [rdi], rax
mov rdx, qword [rsi]
mov qword [var_108h], rax
mov qword [rdi + 8], 0
mov rax, qword [rsi + 8]
mov dword [rdi + 0x10], 0
add rax, rdx
mov qword [var_d8h], rdx
mov qword [var_c8h], 0
mov qword [var_e8h], rax
cmp rax, rdx
je 0x8000cd0
mov rax, qword [arg_10h]
mov r13, qword [arg_18h]
lea rbx, [var_b0h]
lea r14, [var_d8h]
add r13, qword [arg_20h]
lea r15, [var_c8h]
mov qword [var_f0h], rax
test al, 1
lea rax, [var_d0h]
mov qword [var_f8h], rax
lea rax, [var_30h]
mov qword [var_100h], rax
je 0x8000bd5
jmp 0x8000c89
nop word [rax + rax]
mov r8, qword [var_d0h]
cmp r8, rbx
je 0x8000ce8
mov rcx, qword [r12 + 8]
sub r8, rbx
sar r8, 2
lea rsi, [rcx*4]
sar rsi, 2
mov rdx, rsi
cmp rsi, rcx
ja .LC3
mov rcx, rbx
xor edx, edx
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEmmPKwm
mov rdx, qword [var_d8h]
cmp qword [var_e8h], rdx
je 0x8000cd0
push qword [var_f8h]
mov r9, rbx
mov r8, r14
mov rsi, r15
mov rcx, qword [var_e8h]
push qword [var_100h]
mov rdi, r13
mov r10, qword [var_f0h]
mov qword [var_d0h], rbx
call r10
pop rsi
pop rdi
cmp eax, 2
jne 0x8000b80
lea rax, [var_c0h]
lea rsi, [0x08000c1e]
mov rdi, rax
mov r14, rax
call _ZNSt11logic_errorC1EPKc
add byte [rax], al
add byte [rax], al
mov rdi, r14
call _ZN5boost15throw_exceptionISt11logic_errorEEvRKT_
add byte [rax], al
add byte [rax], al
nop dword [rax]
mov r8, qword [var_d0h]
cmp r8, rbx
je 0x8000ce8
mov rcx, qword [r12 + 8]
sub r8, rbx
sar r8, 2
lea rsi, [rcx*4]
sar rsi, 2
mov rdx, rsi
cmp rcx, rsi
jb .LC3
mov rcx, rbx
xor edx, edx
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEmmPKwm
mov rdx, qword [var_d8h]
cmp qword [var_e8h], rdx
je 0x8000cd0
mov rax, qword [r13]
mov r9, rbx
push qword [var_f8h]
mov r8, r14
mov r11, qword [var_f0h]
push qword [var_100h]
mov rsi, r15
mov rdi, r13
mov rcx, qword [var_e8h]
mov qword [var_d0h], rbx
call qword [r11 + rax - 1]
pop rdx
pop rcx
cmp eax, 2
jne 0x8000c38
jmp 0x8000c10
nop
lea rsp, [var_28h]
mov rax, r12
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret
nop word [rax + rax]
lea rax, [var_c0h]
lea rsi, [0x08000cf6]
mov rdi, rax
mov r14, rax
call _ZNSt11logic_errorC1EPKc
mov rdi, r14
call _ZN5boost15throw_exceptionISt11logic_errorEEvRKT_
nop dword [rax]
lea rsi, [0x08000d17]
lea rdi, [0x08000d1e]
xor eax, eax
call _ZSt24__throw_out_of_range_fmtPKcz
add byte [rax], al
add byte [rax], al
mov rbx, rax
jmp 0x8000d39
mov rbx, rax
jmp 0x8000d31
jmp 0x8000d2a
mov rdi, r14
call _ZNSt11logic_errorD1Ev
mov rdi, qword [r12]
cmp qword [var_108h], rdi
je 0x8000d58
mov rax, qword [r12 + 0x10]
lea rsi, [rax*4 + 4]
call _ZdlPvm
mov rdi, rbx
call _Unwind_Resume
