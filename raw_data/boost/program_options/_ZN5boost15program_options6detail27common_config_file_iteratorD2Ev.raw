lea rax, [0x080036d7]
push r12
push rbp
push rbx
mov rbx, rdi
mov qword [rdi], rax
mov rdi, qword [rdi + 0xd0]
lea rax, [rbx + 0xe0]
cmp rdi, rax
je 0x8003704
mov rax, qword [rbx + 0xe0]
lea rsi, [rax + 1]
call _ZdlPvm
mov rbp, qword [rbx + 0xb0]
test rbp, rbp
je 0x8003750
mov rdi, qword [arg_18h]
call .text
mov rdi, qword [arg_20h]
lea rax, [arg_30h]
mov r12, qword [arg_10h]
cmp rdi, rax
je 0x8003737
mov rax, qword [arg_30h]
lea rsi, [rax + 1]
call _ZdlPvm
mov esi, 0x40
mov rdi, rbp
call _ZdlPvm
test r12, r12
je 0x8003750
mov rbp, r12
jmp 0x8003710
nop
mov rbp, qword [rbx + 0x80]
test rbp, rbp
je 0x80037a0
mov rdi, qword [arg_18h]
call .text
mov rdi, qword [arg_20h]
lea rax, [arg_30h]
mov r12, qword [arg_10h]
cmp rdi, rax
je 0x8003783
mov rax, qword [arg_30h]
lea rsi, [rax + 1]
call _ZdlPvm
mov esi, 0x40
mov rdi, rbp
call _ZdlPvm
test r12, r12
je 0x80037a0
mov rbp, r12
jmp 0x800375c
nop word [rax + rax]
mov r12, qword [rbx + 0x58]
mov rbp, qword [rbx + 0x50]
cmp r12, rbp
je 0x80037db
nop dword [rax]
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8003860
mov rax, qword [arg_10h]
add rbp, 0x20
lea rsi, [rax + 1]
call _ZdlPvm
cmp r12, rbp
jne 0x80037b0
mov rbp, qword [rbx + 0x50]
test rbp, rbp
je 0x80037ef
mov rsi, qword [rbx + 0x60]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
mov r12, qword [rbx + 0x40]
mov rbp, qword [rbx + 0x38]
cmp r12, rbp
je 0x8003827
nop dword [rax]
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8003878
mov rax, qword [arg_10h]
add rbp, 0x20
lea rsi, [rax + 1]
call _ZdlPvm
cmp r12, rbp
jne 0x8003800
mov rbp, qword [rbx + 0x38]
test rbp, rbp
je 0x800383b
mov rsi, qword [rbx + 0x48]
mov rdi, rbp
sub rsi, rbp
call _ZdlPvm
mov rdi, qword [rbx + 0x10]
lea rax, [rbx + 0x20]
cmp rdi, rax
je 0x8003890
mov rsi, qword [rbx + 0x20]
pop rbx
pop rbp
pop r12
add rsi, 1
jmp _ZdlPvm
nop dword [rax]
add rbp, 0x20
cmp r12, rbp
jne 0x80037b0
jmp 0x80037d7
nop word [rax + rax]
add rbp, 0x20
cmp r12, rbp
jne 0x8003800
jmp 0x8003823
nop word [rax + rax]
pop rbx
pop rbp
pop r12
ret
