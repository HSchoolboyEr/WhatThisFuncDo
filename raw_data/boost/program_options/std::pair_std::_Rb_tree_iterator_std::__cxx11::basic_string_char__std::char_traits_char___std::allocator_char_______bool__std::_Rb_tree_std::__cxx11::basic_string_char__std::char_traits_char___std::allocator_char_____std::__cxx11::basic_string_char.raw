push r15
mov rax, rdi
push r14
add rax, 8
push r13
push r12
push rbp
push rbx
sub rsp, 0x38
mov rbp, qword [rdi + 0x10]
mov qword [var_10h], rdi
mov qword [var_18h], rsi
mov qword [var_8h], rax
test rbp, rbp
je 0x80060c0
mov rbx, qword [rsi]
mov r14, qword [rsi + 8]
jmp 0x8005f61
nop word [rax + rax]
mov rax, qword [arg_10h]
mov esi, 1
test rax, rax
je 0x8005fb8
mov rbp, rax
mov r15, qword [arg_28h]
mov r12, qword [arg_20h]
cmp r14, r15
mov r13, r15
cmovbe r13, r14
test r13, r13
je 0x8005f8a
mov rdx, r13
mov rsi, r12
mov rdi, rbx
call memcmp
test eax, eax
jne 0x8005fa9
mov rax, r14
mov ecx, 0x80000000
sub rax, r15
cmp rax, rcx
jge 0x8005fad
movabs rdx, 0xffffffff7fffffff
cmp rax, rdx
jle 0x8005f50
test eax, eax
js 0x8005f50
mov rax, qword [arg_18h]
xor esi, esi
test rax, rax
jne 0x8005f5e
test sil, sil
jne 0x80060c3
mov qword [rsp], rbp
test r13, r13
je 0x8005fdc
mov rdx, r13
mov rsi, rbx
mov rdi, r12
call memcmp
test eax, eax
jne 0x8005ff6
mov rcx, r15
sub rcx, r14
cmp rcx, 0x7fffffff
jg 0x8005ffa
cmp rcx, 0xffffffff80000000
jl 0x8006010
mov eax, ecx
test eax, eax
js 0x8006010
add rsp, 0x38
mov rax, rbp
xor edx, edx
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
cmp qword [rsp], 0
je 0x80061ca
mov rbx, qword [rsp]
mov r14d, 1
cmp qword [var_8h], rbx
jne 0x8006168
mov edi, 0x40
call _Znwm
lea rdi, [rax + 0x30]
mov rbp, rax
mov qword [rax + 0x20], rdi
mov rax, qword [var_18h]
mov r15, qword [rax]
mov rbx, qword [rax + 8]
mov rax, r15
add rax, rbx
je 0x8006062
test r15, r15
je .LC0
mov qword [var_28h], rbx
cmp rbx, 0xf
ja 0x8006118
cmp rbx, 1
jne 0x8006108
movzx eax, byte [r15]
mov byte [arg_30h], al
mov rdx, qword [rsp]
mov rcx, qword [var_8h]
mov qword [arg_28h], rbx
mov rsi, rbp
mov byte [rdi + rbx], 0
movzx edi, r14b
call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
add byte [rax], al
add byte [rax], al
mov rax, qword [var_10h]
mov edx, 1
add qword [rax + 0x28], 1
add rsp, 0x38
mov rax, rbp
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rbp, rax
mov rax, qword [var_10h]
cmp qword [rax + 0x18], rbp
je 0x8006158
mov rdi, rbp
call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
add byte [rax], al
add byte [rax], al
mov rdi, qword [var_18h]
mov qword [rsp], rbp
mov r15, qword [rax + 0x28]
mov r12, qword [rax + 0x20]
mov rbp, rax
mov r14, qword [rdi + 8]
mov rbx, qword [rdi]
mov r13, r15
cmp r14, r15
cmovbe r13, r14
jmp 0x8005fc5
nop dword [rax]
test rbx, rbx
je 0x8006082
jmp 0x8006138
nop dword [rax + rax]
lea rsi, [var_28h]
lea rdi, [arg_20h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [arg_20h], rax
mov rdi, rax
mov rax, qword [var_28h]
mov qword [arg_30h], rax
mov rdx, rbx
mov rsi, r15
call memcpy
mov rbx, qword [var_28h]
mov rdi, qword [arg_20h]
jmp 0x8006082
nop dword [rax]
mov qword [rsp], rbp
jmp 0x800601b
nop dword [rax]
mov rax, qword [var_18h]
mov r15, qword [rbx + 0x28]
mov rbp, qword [rax + 8]
mov rdx, r15
cmp rbp, r15
cmovbe rdx, rbp
test rdx, rdx
je 0x8006196
mov rdi, qword [rax]
mov rsi, qword [rbx + 0x20]
call memcmp
mov edi, eax
test eax, eax
jne 0x80061b4
sub rbp, r15
xor r14d, r14d
cmp rbp, 0x7fffffff
jg 0x8006030
cmp rbp, 0xffffffff80000000
jl 0x80061bf
mov edi, ebp
shr edi, 0x1f
mov r14d, edi
jmp 0x8006030
mov r14d, 1
jmp 0x8006030
xor ebp, ebp
jmp 0x8005ffa
lea rdi, [0x080061d8]
call _ZSt19__throw_logic_errorPKc
mov rdi, rax
call __cxa_begin_catch
mov esi, 0x40
mov rdi, rbp
call _ZdlPvm
call __cxa_rethrow
mov rbp, rax
call __cxa_end_catch
mov rdi, rbp
call _Unwind_Resume
