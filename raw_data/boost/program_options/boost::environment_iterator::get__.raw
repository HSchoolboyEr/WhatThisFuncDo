push r15
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x68
mov rax, qword [rdi + 0x48]
mov rbp, qword [rax]
test rbp, rbp
je 0x8005098
lea r13, [var_10h]
mov rdi, rbp
mov r14, rsp
mov qword [rsp], r13
call strlen
mov qword [var_40h], rax
mov r12, rax
cmp rax, 0xf
ja 0x80050b0
cmp rax, 1
jne 0x80050f0
movzx edx, byte [rbp]
mov byte [var_10h], dl
mov rdx, r13
mov qword [var_8h], rax
mov rdi, r14
mov esi, 0x3d
lea r14, [var_30h]
mov byte [rdx + rax], 0
xor edx, edx
call _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
add byte [rax], al
add byte [rax], al
mov r12, qword [var_8h]
mov r15, qword [rsp]
mov qword [var_20h], r14
mov rbp, rax
cmp rax, r12
cmovbe r12, rax
mov rax, r15
add rax, r12
je 0x8004ee2
test r15, r15
je .LC0
mov qword [var_40h], r12
cmp r12, 0xf
ja 0x8005138
cmp r12, 1
jne 0x8005108
movzx eax, byte [r15]
mov byte [var_30h], al
mov rax, r14
mov qword [var_28h], r12
mov byte [rax + r12], 0
mov rdx, qword [var_20h]
mov rdi, qword [rbx + 8]
cmp rdx, r14
je 0x80051b8
lea rcx, [rbx + 0x18]
mov rax, qword [var_28h]
mov rsi, qword [var_30h]
cmp rdi, rcx
je 0x8005230
movq xmm0, rax
movq xmm1, rsi
mov rcx, qword [rbx + 0x18]
mov qword [rbx + 8], rdx
punpcklqdq xmm0, xmm1
movups xmmword [rbx + 0x10], xmm0
test rdi, rdi
je 0x8005246
mov qword [var_20h], rdi
mov qword [var_30h], rcx
mov qword [var_28h], 0
mov byte [rdi], 0
mov rdi, qword [var_20h]
cmp rdi, r14
je 0x8004f8a
mov rax, qword [var_30h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rcx, qword [var_8h]
lea r8, [var_1h]
cmp r8, rcx
ja 0x80052bd
mov rdx, qword [rsp]
mov r12, rcx
lea rbp, [var_50h]
sub r12, r8
mov qword [var_40h], rbp
lea r14, [rdx + r8]
add rdx, rcx
je 0x8004fc2
test r14, r14
je .LC0
mov qword [var_20h], r12
cmp r12, 0xf
ja 0x8005178
cmp r12, 1
jne 0x8005120
movzx eax, byte [r14]
mov byte [var_50h], al
mov rax, rbp
mov qword [var_48h], r12
mov byte [rax + r12], 0
mov rdx, qword [var_40h]
mov rdi, qword [rbx + 0x28]
cmp rdx, rbp
je 0x80051f0
lea rsi, [rbx + 0x38]
mov rcx, qword [var_50h]
mov rax, qword [var_48h]
cmp rdi, rsi
je 0x8005260
movq xmm0, rax
movq xmm2, rcx
mov rsi, qword [rbx + 0x38]
mov qword [rbx + 0x28], rdx
punpcklqdq xmm0, xmm2
movups xmmword [rbx + 0x30], xmm0
test rdi, rdi
je 0x8005276
mov qword [var_40h], rdi
mov qword [var_50h], rsi
mov qword [var_48h], 0
mov byte [rdi], 0
mov rdi, qword [var_40h]
cmp rdi, rbp
je 0x800506a
mov rax, qword [var_50h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rdi, qword [rsp]
add qword [rbx + 0x48], 8
cmp rdi, r13
je 0x800509b
mov rax, qword [var_10h]
lea rsi, [rax + 1]
call _ZdlPvm
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov byte [rdi], 1
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
mov rdi, r14
lea rsi, [var_40h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [rsp], rax
mov rdi, rax
mov rax, qword [var_40h]
mov qword [var_10h], rax
mov rdx, r12
mov rsi, rbp
call memcpy
mov rax, qword [var_40h]
mov rdx, qword [rsp]
jmp 0x8004e9c
nop dword [rax]
test rax, rax
jne 0x80052fd
mov rdx, r13
jmp 0x8004e9c
nop dword [rax]
test r12, r12
jne 0x80052f5
mov rax, r14
jmp 0x8004f06
nop dword [rax]
test r12, r12
jne 0x80052ed
mov rax, rbp
jmp 0x8004fe6
nop dword [rax]
lea rsi, [var_40h]
lea rdi, [var_20h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_20h], rax
mov rdi, rax
mov rax, qword [var_40h]
mov qword [var_30h], rax
mov rdx, r12
mov rsi, r15
call memcpy
mov r12, qword [var_40h]
mov rax, qword [var_20h]
jmp 0x8004f06
nop dword [rax]
lea rsi, [var_20h]
lea rdi, [var_40h]
xor edx, edx
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [var_40h], rax
mov rdi, rax
mov rax, qword [var_20h]
mov qword [var_50h], rax
mov rdx, r12
mov rsi, r14
call memcpy
mov r12, qword [var_20h]
mov rax, qword [var_40h]
jmp 0x8004fe6
nop dword [rax]
mov rdx, qword [var_28h]
test rdx, rdx
je 0x80051dd
cmp rdx, 1
je 0x8005290
mov rsi, r14
call memcpy
mov rdx, qword [var_28h]
mov rdi, qword [rbx + 8]
mov qword [rbx + 0x10], rdx
mov byte [rdi + rdx], 0
mov rdi, qword [var_20h]
jmp 0x8004f66
nop
mov rdx, qword [var_48h]
test rdx, rdx
je 0x8005215
cmp rdx, 1
je 0x80052a8
mov rsi, rbp
call memcpy
mov rdx, qword [var_48h]
mov rdi, qword [rbx + 0x28]
mov qword [rbx + 0x30], rdx
mov byte [rdi + rdx], 0
mov rdi, qword [var_40h]
jmp 0x8005046
nop word [rax + rax]
movq xmm0, rax
movq xmm3, rsi
mov qword [rbx + 8], rdx
punpcklqdq xmm0, xmm3
movups xmmword [rbx + 0x10], xmm0
mov qword [var_20h], r14
lea r14, [var_30h]
mov rdi, r14
jmp 0x8004f66
nop dword [rax + rax]
movq xmm0, rax
movq xmm4, rcx
mov qword [rbx + 0x28], rdx
punpcklqdq xmm0, xmm4
movups xmmword [rbx + 0x30], xmm0
mov qword [var_40h], rbp
lea rbp, [var_50h]
mov rdi, rbp
jmp 0x8005046
nop dword [rax + rax]
movzx eax, byte [var_30h]
mov byte [rdi], al
mov rdx, qword [var_28h]
mov rdi, qword [rbx + 8]
jmp 0x80051dd
nop dword [rax]
movzx eax, byte [var_50h]
mov byte [rdi], al
mov rdx, qword [var_48h]
mov rdi, qword [rbx + 0x28]
jmp 0x8005215
mov rdx, r8
lea rsi, [0x080052c7]
lea rdi, [0x080052ce]
xor eax, eax
call _ZSt24__throw_out_of_range_fmtPKcz
add byte [rax], al
add byte [rax], al
lea rdi, [0x080052dc]
call _ZSt19__throw_logic_errorPKc
lea rdi, [0x080052e8]
call _ZSt19__throw_logic_errorPKc
mov rdi, rbp
jmp 0x800519b
mov rdi, r14
jmp 0x800515b
mov rdi, r13
jmp 0x80050d0
