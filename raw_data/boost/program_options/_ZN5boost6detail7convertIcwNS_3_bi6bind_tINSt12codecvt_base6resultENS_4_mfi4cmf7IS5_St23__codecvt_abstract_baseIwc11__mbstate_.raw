push rbp
lea rax, [rdi + 0x10]
mov rbp, rsp
push r15
push r14
push r13
push r12
mov r12, rdi
push rbx
sub rsp, 0x88
mov byte [rdi + 0x10], 0
mov rdx, qword [rsi]
mov qword [var_a8h], rax
mov qword [rdi], rax
mov qword [rdi + 8], 0
mov rax, qword [rsi + 8]
mov qword [var_68h], 0
lea rax, [rdx + rax*4]
mov qword [var_78h], rdx
mov qword [var_88h], rax
cmp rax, rdx
je 0x8000f88
mov rax, qword [arg_10h]
mov r13, qword [arg_18h]
lea rbx, [var_50h]
lea r14, [var_78h]
add r13, qword [arg_20h]
lea r15, [var_68h]
mov qword [var_90h], rax
test al, 1
lea rax, [var_70h]
mov qword [var_98h], rax
lea rax, [var_30h]
mov qword [var_a0h], rax
je 0x8000ec3
jmp 0x8000f43
nop word cs:[rax + rax]
mov r8, qword [var_70h]
cmp r8, rbx
je 0x8000fa0
mov rsi, qword [r12 + 8]
sub r8, rbx
mov rcx, rbx
xor edx, edx
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
mov rdx, qword [var_78h]
cmp qword [var_88h], rdx
je 0x8000f88
push qword [var_98h]
mov r9, rbx
mov r8, r14
mov rsi, r15
mov rcx, qword [var_88h]
mov qword [var_70h], rbx
mov rdi, r13
push qword [var_a0h]
mov r10, qword [var_90h]
call r10
pop rsi
pop rdi
cmp eax, 2
jne 0x8000e90
lea rax, [var_60h]
lea rsi, [0x08000f02]
mov rdi, rax
mov r14, rax
call _ZNSt11logic_errorC1EPKc
mov rdi, r14
call _ZN5boost15throw_exceptionISt11logic_errorEEvRKT_
nop dword [rax]
mov r8, qword [var_70h]
cmp r8, rbx
je 0x8000fa0
mov rsi, qword [r12 + 8]
sub r8, rbx
mov rcx, rbx
xor edx, edx
mov rdi, r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
mov rdx, qword [var_78h]
cmp qword [var_88h], rdx
je 0x8000f88
mov rax, qword [r13]
mov qword [var_70h], rbx
mov r9, rbx
mov r8, r14
mov r11, qword [var_90h]
push qword [var_98h]
mov rsi, r15
mov rdi, r13
mov rcx, qword [var_88h]
push qword [var_a0h]
call qword [r11 + rax - 1]
pop rdx
pop rcx
cmp eax, 2
jne 0x8000f18
jmp 0x8000ef7
nop word [rax + rax]
lea rsp, [var_28h]
mov rax, r12
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret
nop word [rax + rax]
lea rax, [var_60h]
lea rsi, [0x08000fab]
mov rdi, rax
mov r14, rax
call _ZNSt11logic_errorC1EPKc
mov rdi, r14
call _ZN5boost15throw_exceptionISt11logic_errorEEvRKT_
mov rbx, rax
jmp 0x8000fca
jmp 0x8000fbe
mov rbx, rax
jmp 0x8000fd2
mov rdi, r14
call _ZNSt11logic_errorD1Ev
mov rdi, qword [r12]
cmp qword [var_a8h], rdi
je 0x8000fed
mov rsi, qword [r12 + 0x10]
add rsi, 1
call _ZdlPvm
mov rdi, rbx
call _Unwind_Resume
