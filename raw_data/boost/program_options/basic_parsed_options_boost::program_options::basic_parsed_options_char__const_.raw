push r15
pxor xmm0, xmm0
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0xb8
mov rax, qword [rsi + 0x18]
mov rbx, qword [rsi + 8]
movups xmmword [rdi], xmm0
sub rbx, qword [rsi]
mov qword [var_18h], rdi
mov qword [rdi + 0x18], rax
lea rax, [rdi + 0x20]
mov qword [var_30h], rsi
mov qword [rdi + 0x10], 0
mov qword [var_48h], rax
mov qword [rdi + 0x30], 0
movups xmmword [rdi + 0x20], xmm0
je 0x800238f
movabs rax, 0x7fffffffffffffe0
cmp rbx, rax
ja _ZSt17__throw_bad_allocv
mov rdi, rbx
call _Znwm
mov qword [var_40h], rax
mov r15, qword [var_40h]
mov rax, qword [var_18h]
movq xmm0, r15
add rbx, r15
punpcklqdq xmm0, xmm0
mov qword [rax + 0x30], rbx
movups xmmword [rax + 0x20], xmm0
mov rax, qword [var_30h]
mov rdx, qword [rax + 8]
mov rcx, qword [rax]
mov qword [var_38h], rdx
cmp rdx, rcx
je 0x800239f
mov r13, rcx
nop
lea rax, [r15 + 0x10]
mov r14, qword [r13 + 8]
mov qword [r15], rax
mov rbp, qword [r13]
mov qword [var_28h], rax
mov rax, rbp
add rax, r14
je 0x8001d65
test rbp, rbp
je .LC0
mov qword [var_50h], r14
cmp r14, 0xf
ja 0x8002298
cmp r14, 1
jne 0x8002280
movzx eax, byte [rbp]
mov byte [r15 + 0x10], al
mov rax, qword [var_28h]
mov qword [r15 + 8], r14
pxor xmm0, xmm0
mov byte [rax + r14], 0
mov eax, dword [r13 + 0x20]
mov rbx, qword [r13 + 0x30]
sub rbx, qword [r13 + 0x28]
mov qword [r15 + 0x38], 0
mov dword [r15 + 0x20], eax
movups xmmword [r15 + 0x28], xmm0
je 0x8002370
movabs rax, 0x7fffffffffffffe0
cmp rbx, rax
ja _ZSt17__throw_bad_allocv
mov rdi, rbx
call _Znwm
mov qword [var_20h], rax
mov rbp, qword [var_20h]
movq xmm0, rbp
add rbx, rbp
punpcklqdq xmm0, xmm0
mov qword [r15 + 0x38], rbx
movups xmmword [r15 + 0x28], xmm0
mov rax, qword [r13 + 0x30]
mov rbx, qword [r13 + 0x28]
mov qword [var_8h], rax
cmp rax, rbx
je 0x8001ec0
lea rax, [var_50h]
mov qword [var_10h], rax
jmp 0x8001e43
nop word [rax + rax]
movzx eax, byte [r14]
mov byte [var_10h], al
mov qword [var_8h], r12
add rbx, 0x20
add rbp, 0x20
mov byte [rdi + r12], 0
cmp qword [var_8h], rbx
je 0x8001ec0
lea rdi, [var_10h]
mov r12, qword [rbx + 8]
mov qword [rbp], rdi
mov r14, qword [rbx]
mov rax, r14
add rax, r12
je 0x8001e63
test r14, r14
je .LC0
mov qword [var_50h], r12
cmp r12, 0xf
ja 0x8001e80
cmp r12, 1
je 0x8001e20
test r12, r12
je 0x8001e27
jmp 0x8001e9f
nop dword [rax + rax]
mov rsi, qword [var_10h]
xor edx, edx
mov rdi, rbp
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [rbp], rax
mov rdi, rax
mov rax, qword [var_50h]
mov qword [var_10h], rax
mov rdx, r12
mov rsi, r14
call memcpy
mov r12, qword [var_50h]
mov rdi, qword [rbp]
jmp 0x8001e27
nop dword [rax + rax]
mov qword [r15 + 0x30], rbp
pxor xmm0, xmm0
mov rbx, qword [r13 + 0x48]
sub rbx, qword [r13 + 0x40]
mov qword [r15 + 0x50], 0
movups xmmword [r15 + 0x40], xmm0
je 0x8002360
movabs rax, 0x7fffffffffffffe0
cmp rbx, rax
ja _ZSt17__throw_bad_allocv
mov rdi, rbx
call _Znwm
mov qword [var_20h], rax
mov rbp, qword [var_20h]
movq xmm0, rbp
add rbx, rbp
punpcklqdq xmm0, xmm0
mov qword [r15 + 0x50], rbx
movups xmmword [r15 + 0x40], xmm0
mov rax, qword [r13 + 0x48]
mov rbx, qword [r13 + 0x40]
mov qword [var_8h], rax
cmp rax, rbx
je 0x8001fe0
lea rax, [var_50h]
mov qword [var_10h], rax
jmp 0x8001f63
nop
movzx eax, byte [r14]
mov byte [var_10h], al
mov qword [var_8h], r12
add rbx, 0x20
add rbp, 0x20
mov byte [rdi + r12], 0
cmp qword [var_8h], rbx
je 0x8001fe0
lea rdi, [var_10h]
mov r12, qword [rbx + 8]
mov qword [rbp], rdi
mov r14, qword [rbx]
mov rax, r14
add rax, r12
je 0x8001f83
test r14, r14
je .LC0
mov qword [var_50h], r12
cmp r12, 0xf
ja 0x8001fa0
cmp r12, 1
je 0x8001f40
test r12, r12
je 0x8001f47
jmp 0x8001fbf
nop dword [rax + rax]
mov rsi, qword [var_10h]
xor edx, edx
mov rdi, rbp
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [rbp], rax
mov rdi, rax
mov rax, qword [var_50h]
mov qword [var_10h], rax
mov rdx, r12
mov rsi, r14
call memcpy
mov r12, qword [var_50h]
mov rdi, qword [rbp]
jmp 0x8001f47
nop dword [rax + rax]
movzx eax, word [r13 + 0x58]
mov qword [r15 + 0x48], rbp
add r13, 0x60
add r15, 0x60
mov word [r15 - 8], ax
cmp qword [var_38h], r13
jne 0x8001d40
mov rax, qword [var_30h]
mov rcx, qword [rax]
mov rsi, rax
mov rdx, qword [var_18h]
mov rax, qword [rsi + 0x18]
mov qword [rdx + 0x38], rax
mov eax, dword [rsi + 0x20]
mov qword [rdx + 0x28], r15
mov dword [rdx + 0x40], eax
mov dword [rdx + 0x48], eax
cmp rcx, qword [rsi + 8]
je 0x8002252
xor ebp, ebp
lea r12, [var_50h]
lea rbx, [var_60h]
xor edx, edx
movabs r15, 0xaaaaaaaaaaaaaaab
nop dword [rax + rax]
lea r13, [rdx + rdx*2]
pxor xmm0, xmm0
mov rdi, r12
mov qword [var_50h], rbx
mov rax, r13
mov byte [var_60h], 0
shl rax, 5
mov dword [var_70h], 0xffffffff
lea r13, [rcx + rax]
xor eax, eax
mov qword [var_58h], 0
mov rsi, r13
mov word [var_a8h], ax
movups xmmword [var_78h], xmm0
movups xmmword [var_88h], xmm0
movups xmmword [var_98h], xmm0
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
mov eax, dword [r13 + 0x20]
mov r14, qword [0x080020b3]
lea rdx, [var_78h]
mov rsi, qword [r13 + 0x30]
mov rdi, qword [r13 + 0x28]
mov dword [var_70h], eax
movzx eax, byte [r13 + 0x58]
mov rcx, r14
mov byte [var_a8h], al
call fcn.08001b90
mov rsi, qword [r13 + 0x48]
mov rdi, qword [r13 + 0x40]
lea rdx, [var_90h]
mov rcx, r14
call fcn.08001b90
mov rax, qword [var_18h]
mov rsi, qword [rax + 8]
cmp rsi, qword [rax + 0x10]
je 0x80022d8
lea rax, [rsi + 0x10]
mov qword [rsi], rax
mov rax, qword [var_50h]
cmp rax, rbx
je 0x8002380
mov qword [rsi], rax
mov rax, qword [var_60h]
mov qword [rsi + 0x10], rax
mov rax, qword [var_58h]
pxor xmm0, xmm0
mov qword [rsi + 8], rax
mov eax, dword [var_70h]
mov qword [var_50h], rbx
mov qword [var_58h], 0
mov byte [var_60h], 0
mov dword [rsi + 0x20], eax
mov rax, qword [var_78h]
mov qword [rsi + 0x28], rax
mov rax, qword [var_80h]
mov qword [rsi + 0x30], rax
mov rax, qword [var_88h]
mov qword [rsi + 0x38], rax
mov rax, qword [var_90h]
mov qword [rsi + 0x40], rax
mov rax, qword [var_98h]
mov qword [rsi + 0x48], rax
mov rax, qword [var_a0h]
mov qword [rsi + 0x50], rax
movzx eax, word [var_a8h]
movups xmmword [var_78h], xmm0
movups xmmword [var_88h], xmm0
mov word [rsi + 0x58], ax
mov rax, qword [var_18h]
add qword [rax + 8], 0x60
mov r13, qword [var_80h]
mov r14, qword [var_78h]
cmp r13, r14
je 0x80021f7
nop dword [rax]
mov rdi, qword [r14]
lea rax, [r14 + 0x10]
cmp rdi, rax
je 0x8002268
mov rax, qword [r14 + 0x10]
add r14, 0x20
lea rsi, [rax*4 + 4]
call _ZdlPvm
cmp r14, r13
jne 0x80021c8
mov r14, qword [var_78h]
test r14, r14
je 0x800220f
mov rsi, qword [var_88h]
mov rdi, r14
sub rsi, r14
call _ZdlPvm
mov rdi, qword [var_50h]
cmp rdi, rbx
je 0x8002227
mov rax, qword [var_60h]
lea rsi, [rax + 1]
call _ZdlPvm
mov rax, qword [var_30h]
lea edx, [var_1h]
mov rbp, rdx
mov rcx, qword [rax]
mov rax, qword [rax + 8]
mov qword [var_8h], rax
sub rax, rcx
sar rax, 5
imul rax, r15
cmp rdx, rax
jb 0x8002050
add rsp, 0xb8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
add r14, 0x20
cmp r13, r14
jne 0x80021c8
jmp 0x80021f2
nop word [rax + rax]
test r14, r14
jne 0x80023cf
mov rax, qword [var_28h]
jmp 0x8001d8b
nop dword [rax + rax]
lea r12, [var_50h]
xor edx, edx
mov rdi, r15
mov rsi, r12
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [r15], rax
mov rdi, rax
mov rax, qword [var_50h]
mov qword [r15 + 0x10], rax
mov rdx, r14
mov rsi, rbp
call memcpy
mov r14, qword [var_50h]
mov rax, qword [r15]
jmp 0x8001d8b
nop dword [rax]
mov rdi, rax
mov rdx, r12
call _ZNSt6vectorIN5boost15program_options12basic_optionIwEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
mov r13, qword [var_98h]
mov r14, qword [var_90h]
cmp r13, r14
je 0x80023bf
nop dword [rax]
mov rdi, qword [r14]
lea rax, [r14 + 0x10]
cmp rdi, rax
je 0x8002350
mov rax, qword [r14 + 0x10]
add r14, 0x20
lea rsi, [rax*4 + 4]
call _ZdlPvm
cmp r14, r13
jne 0x8002300
mov r14, qword [var_90h]
mov rsi, qword [var_a0h]
sub rsi, r14
test r14, r14
je 0x80021b3
mov rdi, r14
call _ZdlPvm
jmp 0x80021b3
nop
add r14, 0x20
cmp r13, r14
jne 0x8002300
jmp 0x8002326
nop dword [rax + rax]
mov qword [var_20h], 0
jmp 0x8001f03
nop
mov qword [var_20h], 0
xor ebx, ebx
jmp 0x8001ddb
movdqa xmm1, xmmword [var_60h]
movups xmmword [rsi + 0x10], xmm1
jmp 0x8002124
mov qword [var_40h], 0
xor ebx, ebx
jmp 0x8001d04
mov rsi, rax
jmp 0x800200c
lea rdi, [0x080023ae]
call _ZSt19__throw_logic_errorPKc
lea rdi, [0x080023ba]
call _ZSt19__throw_logic_errorPKc
mov rsi, qword [var_a0h]
sub rsi, r14
jmp 0x8002339
mov rdi, qword [var_28h]
jmp 0x80022b9
nop dword [rax]
call _ZSt17__throw_bad_allocv
lea rdi, [0x080023ec]
call _ZSt19__throw_logic_errorPKc
call _ZSt17__throw_bad_allocv
call _ZSt17__throw_bad_allocv
mov rbp, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rdi, rax
jmp .text.unlikely
mov rdi, rax
jmp .text.unlikely
mov rbx, rax
jmp .text.unlikely
mov rbp, rax
jmp .text.unlikely
mov rdi, rax
jmp .text.unlikely
