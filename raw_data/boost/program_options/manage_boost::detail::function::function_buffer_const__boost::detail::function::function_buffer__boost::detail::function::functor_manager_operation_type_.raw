push r13
push r12
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x18
cmp edx, 4
jne 0x8004ac0
lea rax, [0x08004aa9]
mov qword [rbx], rax
xor eax, eax
mov word [rbx + 8], ax
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rbp, rdi
test edx, edx
je 0x8004b50
cmp edx, 1
je 0x8004bb8
cmp edx, 2
je 0x8004b10
cmp edx, 3
jne 0x8004aa2
mov rax, qword [rsi]
lea rsi, [0x08004ae8]
mov rdi, qword [rax + 8]
cmp rdi, rsi
je 0x8004aff
cmp byte [rdi], 0x2a
je 0x8004b3f
call strcmp
test eax, eax
jne 0x8004b3f
mov rax, qword [rbp]
mov qword [rbx], rax
jmp 0x8004ab2
nop dword [rax + rax]
mov rbp, qword [rsi]
test rbp, rbp
je 0x8004b3f
mov rdi, qword [rbp]
lea rax, [arg_10h]
cmp rdi, rax
je 0x8004b32
mov rax, qword [arg_10h]
lea rsi, [rax + 1]
call _ZdlPvm
mov esi, 0x20
mov rdi, rbp
call _ZdlPvm
mov qword [rbx], 0
jmp 0x8004ab2
nop dword [rax + rax]
mov r12, qword [rdi]
mov edi, 0x20
call _Znwm
lea rdi, [rax + 0x10]
mov rbp, rax
mov qword [rax], rdi
mov r13, qword [r12]
mov r12, qword [r12 + 8]
mov rax, r13
add rax, r12
je 0x8004b81
test r13, r13
je .LC0
mov qword [var_8h], r12
cmp r12, 0xf
ja 0x8004be0
cmp r12, 1
jne 0x8004bd0
movzx eax, byte [r13]
mov byte [arg_10h], al
mov qword [arg_8h], r12
mov byte [rdi + r12], 0
mov qword [rbx], rbp
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
mov rax, qword [rdi]
mov qword [rsi], rax
mov qword [rdi], 0
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
test r12, r12
je 0x8004b9a
jmp 0x8004bff
nop word [rax + rax]
lea rsi, [var_8h]
xor edx, edx
mov rdi, rbp
call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
mov qword [rbp], rax
mov rdi, rax
mov rax, qword [var_8h]
mov qword [arg_10h], rax
mov rdx, r12
mov rsi, r13
call memcpy
mov r12, qword [var_8h]
mov rdi, qword [rbp]
jmp 0x8004b9a
lea rdi, [0x08004c1f]
call _ZSt19__throw_logic_errorPKc
mov r12, rax
mov rdi, rbp
mov esi, 0x20
call _ZdlPvm
mov rdi, r12
call _Unwind_Resume
